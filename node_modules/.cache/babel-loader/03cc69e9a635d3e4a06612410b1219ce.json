{"ast":null,"code":"var e = g(require(\"tiny-invariant\")),\n  t = require(\"react\"),\n  n = t.Children,\n  r = t.cloneElement,\n  o = t.Component,\n  i = t.createElement,\n  l = t.createRef,\n  a = g(require(\"classnames\")),\n  c = require(\"sortablejs\"),\n  s = g(c);\nexports.Sortable = s;\nvar u = c.Direction;\nexports.Direction = u;\nvar f = c.DOMRect;\nexports.DOMRect = f;\nvar p = c.GroupOptions;\nexports.GroupOptions = p;\nvar d = c.MoveEvent;\nexports.MoveEvent = d;\nvar b = c.Options;\nexports.Options = b;\nvar y = c.PullResult;\nexports.PullResult = y;\nvar v = c.PutResult;\nexports.PutResult = v;\nvar h = c.SortableEvent;\nexports.SortableEvent = h;\nvar m = c.SortableOptions;\nexports.SortableOptions = m;\nvar O = c.Utils;\nfunction g(e) {\n  return e && e.__esModule ? e.default : e;\n}\nfunction w(e, t) {\n  if (null == e) return {};\n  var n,\n    r,\n    o = function (e, t) {\n      if (null == e) return {};\n      var n,\n        r,\n        o = {},\n        i = Object.keys(e);\n      for (r = 0; r < i.length; r++) n = i[r], t.indexOf(n) >= 0 || (o[n] = e[n]);\n      return o;\n    }(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var i = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < i.length; r++) n = i[r], t.indexOf(n) >= 0 || Object.prototype.propertyIsEnumerable.call(e, n) && (o[n] = e[n]);\n  }\n  return o;\n}\nfunction S(e) {\n  return function (e) {\n    if (Array.isArray(e)) return j(e);\n  }(e) || function (e) {\n    if (\"undefined\" != typeof Symbol && Symbol.iterator in Object(e)) return Array.from(e);\n  }(e) || function (e, t) {\n    if (!e) return;\n    if (\"string\" == typeof e) return j(e, t);\n    var n = Object.prototype.toString.call(e).slice(8, -1);\n    \"Object\" === n && e.constructor && (n = e.constructor.name);\n    if (\"Map\" === n || \"Set\" === n) return Array.from(e);\n    if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return j(e, t);\n  }(e) || function () {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }();\n}\nfunction j(e, t) {\n  (null == t || t > e.length) && (t = e.length);\n  for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];\n  return r;\n}\nfunction x(e, t) {\n  var n = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var r = Object.getOwnPropertySymbols(e);\n    t && (r = r.filter(function (t) {\n      return Object.getOwnPropertyDescriptor(e, t).enumerable;\n    })), n.push.apply(n, r);\n  }\n  return n;\n}\nfunction I(e) {\n  for (var t = 1; t < arguments.length; t++) {\n    var n = null != arguments[t] ? arguments[t] : {};\n    t % 2 ? x(Object(n), !0).forEach(function (t) {\n      P(e, t, n[t]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : x(Object(n)).forEach(function (t) {\n      Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));\n    });\n  }\n  return e;\n}\nfunction P(e, t, n) {\n  return t in e ? Object.defineProperty(e, t, {\n    value: n,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[t] = n, e;\n}\nfunction E(e) {\n  null !== e.parentElement && e.parentElement.removeChild(e);\n}\nfunction k(e) {\n  e.forEach(function (e) {\n    return E(e.element);\n  });\n}\nfunction C(e) {\n  e.forEach(function (e) {\n    var t, n, r, o;\n    t = e.parentElement, n = e.element, r = e.oldIndex, o = t.children[r] || null, t.insertBefore(n, o);\n  });\n}\nfunction D(e, t) {\n  var n = M(e),\n    r = {\n      parentElement: e.from\n    },\n    o = [];\n  switch (n) {\n    case \"normal\":\n      o = [{\n        element: e.item,\n        newIndex: e.newIndex,\n        oldIndex: e.oldIndex,\n        parentElement: e.from\n      }];\n      break;\n    case \"swap\":\n      o = [I({\n        element: e.item,\n        oldIndex: e.oldIndex,\n        newIndex: e.newIndex\n      }, r), I({\n        element: e.swapItem,\n        oldIndex: e.newIndex,\n        newIndex: e.oldIndex\n      }, r)];\n      break;\n    case \"multidrag\":\n      o = e.oldIndicies.map(function (t, n) {\n        return I({\n          element: t.multiDragElement,\n          oldIndex: t.index,\n          newIndex: e.newIndicies[n].index\n        }, r);\n      });\n  }\n  return function (e, t) {\n    return e.map(function (e) {\n      return I(I({}, e), {}, {\n        item: t[e.oldIndex]\n      });\n    }).sort(function (e, t) {\n      return e.oldIndex - t.oldIndex;\n    });\n  }(o, t);\n}\nfunction A(e, t) {\n  var n = S(t);\n  return e.concat().reverse().forEach(function (e) {\n    return n.splice(e.oldIndex, 1);\n  }), n;\n}\nfunction R(e, t, n, r) {\n  var o = S(t);\n  return e.forEach(function (e) {\n    var t = r && n && r(e.item, n);\n    o.splice(e.newIndex, 0, t || e.item);\n  }), o;\n}\nfunction M(e) {\n  return e.oldIndicies && e.oldIndicies.length > 0 ? \"multidrag\" : e.swapItem ? \"swap\" : \"normal\";\n}\nfunction U(e) {\n  return (U = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n    return typeof e;\n  } : function (e) {\n    return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n  })(e);\n}\nfunction L(e) {\n  return function (e) {\n    if (Array.isArray(e)) return _(e);\n  }(e) || function (e) {\n    if (\"undefined\" != typeof Symbol && Symbol.iterator in Object(e)) return Array.from(e);\n  }(e) || function (e, t) {\n    if (!e) return;\n    if (\"string\" == typeof e) return _(e, t);\n    var n = Object.prototype.toString.call(e).slice(8, -1);\n    \"Object\" === n && e.constructor && (n = e.constructor.name);\n    if (\"Map\" === n || \"Set\" === n) return Array.from(e);\n    if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _(e, t);\n  }(e) || function () {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }();\n}\nfunction _(e, t) {\n  (null == t || t > e.length) && (t = e.length);\n  for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];\n  return r;\n}\nfunction H(e, t) {\n  var n = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var r = Object.getOwnPropertySymbols(e);\n    t && (r = r.filter(function (t) {\n      return Object.getOwnPropertyDescriptor(e, t).enumerable;\n    })), n.push.apply(n, r);\n  }\n  return n;\n}\nfunction N(e) {\n  for (var t = 1; t < arguments.length; t++) {\n    var n = null != arguments[t] ? arguments[t] : {};\n    t % 2 ? H(Object(n), !0).forEach(function (t) {\n      B(e, t, n[t]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : H(Object(n)).forEach(function (t) {\n      Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));\n    });\n  }\n  return e;\n}\nfunction q(e, t) {\n  for (var n = 0; n < t.length; n++) {\n    var r = t[n];\n    r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n  }\n}\nfunction T(e, t) {\n  return (T = Object.setPrototypeOf || function (e, t) {\n    return e.__proto__ = t, e;\n  })(e, t);\n}\nfunction F(e) {\n  var t = function () {\n    if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n    if (Reflect.construct.sham) return !1;\n    if (\"function\" == typeof Proxy) return !0;\n    try {\n      return Date.prototype.toString.call(Reflect.construct(Date, [], function () {})), !0;\n    } catch (e) {\n      return !1;\n    }\n  }();\n  return function () {\n    var n,\n      r = $(e);\n    if (t) {\n      var o = $(this).constructor;\n      n = Reflect.construct(r, arguments, o);\n    } else n = r.apply(this, arguments);\n    return G(this, n);\n  };\n}\nfunction G(e, t) {\n  return !t || \"object\" !== U(t) && \"function\" != typeof t ? function (e) {\n    if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    return e;\n  }(e) : t;\n}\nfunction $(e) {\n  return ($ = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {\n    return e.__proto__ || Object.getPrototypeOf(e);\n  })(e);\n}\nfunction B(e, t, n) {\n  return t in e ? Object.defineProperty(e, t, {\n    value: n,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[t] = n, e;\n}\nexports.Utils = O;\nvar J = {\n    dragging: null\n  },\n  z = function (t) {\n    !function (e, t) {\n      if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function\");\n      e.prototype = Object.create(t && t.prototype, {\n        constructor: {\n          value: e,\n          writable: !0,\n          configurable: !0\n        }\n      }), t && T(e, t);\n    }(d, o);\n    var c,\n      u,\n      f,\n      p = F(d);\n    function d(t) {\n      var n;\n      !function (e, t) {\n        if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n      }(this, d), (n = p.call(this, t)).ref = l();\n      var r = t.list.map(function (e) {\n        return N(N({}, e), {}, {\n          chosen: !1,\n          selected: !1\n        });\n      });\n      return t.setList(r, n.sortable, J), e(!t.plugins, '\\nPlugins prop is no longer supported.\\nInstead, mount it with \"Sortable.mount(new MultiDrag())\"\\nPlease read the updated README.md at https://github.com/SortableJS/react-sortablejs.\\n      '), n;\n    }\n    return c = d, (u = [{\n      key: \"componentDidMount\",\n      value: function () {\n        if (null !== this.ref.current) {\n          var e = this.makeOptions();\n          s.create(this.ref.current, e);\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function () {\n        var e = this.props,\n          t = e.tag,\n          n = {\n            style: e.style,\n            className: e.className,\n            id: e.id\n          };\n        return i(t && null !== t ? t : \"div\", N({\n          ref: this.ref\n        }, n), this.getChildren());\n      }\n    }, {\n      key: \"getChildren\",\n      value: function () {\n        var e = this.props,\n          t = e.children,\n          o = e.dataIdAttr,\n          i = e.selectedClass,\n          l = void 0 === i ? \"sortable-selected\" : i,\n          c = e.chosenClass,\n          s = void 0 === c ? \"sortable-chosen\" : c,\n          u = (e.dragClass, e.fallbackClass, e.ghostClass, e.swapClass, e.filter),\n          f = void 0 === u ? \"sortable-filter\" : u,\n          p = e.list;\n        if (!t || null == t) return null;\n        var d = o || \"data-id\";\n        return n.map(t, function (e, t) {\n          var n,\n            o,\n            i = p[t],\n            c = e.props.className,\n            u = \"string\" == typeof f && B({}, f.replace(\".\", \"\"), !!i.filtered),\n            b = a(c, N((B(n = {}, l, i.selected), B(n, s, i.chosen), n), u));\n          return r(e, (B(o = {}, d, e.key), B(o, \"className\", b), o));\n        });\n      }\n    }, {\n      key: \"makeOptions\",\n      value: function () {\n        var e,\n          t = this,\n          n = ((e = this.props).list, e.setList, e.children, e.tag, e.style, e.className, e.clone, e.onAdd, e.onChange, e.onChoose, e.onClone, e.onEnd, e.onFilter, e.onRemove, e.onSort, e.onStart, e.onUnchoose, e.onUpdate, e.onMove, e.onSpill, e.onSelect, e.onDeselect, w(e, [\"list\", \"setList\", \"children\", \"tag\", \"style\", \"className\", \"clone\", \"onAdd\", \"onChange\", \"onChoose\", \"onClone\", \"onEnd\", \"onFilter\", \"onRemove\", \"onSort\", \"onStart\", \"onUnchoose\", \"onUpdate\", \"onMove\", \"onSpill\", \"onSelect\", \"onDeselect\"]));\n        return [\"onAdd\", \"onChoose\", \"onDeselect\", \"onEnd\", \"onRemove\", \"onSelect\", \"onSpill\", \"onStart\", \"onUnchoose\", \"onUpdate\"].forEach(function (e) {\n          return n[e] = t.prepareOnHandlerPropAndDOM(e);\n        }), [\"onChange\", \"onClone\", \"onFilter\", \"onSort\"].forEach(function (e) {\n          return n[e] = t.prepareOnHandlerProp(e);\n        }), N(N({}, n), {}, {\n          onMove: function (e, n) {\n            var r = t.props.onMove,\n              o = e.willInsertAfter || -1;\n            if (!r) return o;\n            var i = r(e, n, t.sortable, J);\n            return void 0 !== i && i;\n          }\n        });\n      }\n    }, {\n      key: \"prepareOnHandlerPropAndDOM\",\n      value: function (e) {\n        var t = this;\n        return function (n) {\n          t.callOnHandlerProp(n, e), t[e](n);\n        };\n      }\n    }, {\n      key: \"prepareOnHandlerProp\",\n      value: function (e) {\n        var t = this;\n        return function (n) {\n          t.callOnHandlerProp(n, e);\n        };\n      }\n    }, {\n      key: \"callOnHandlerProp\",\n      value: function (e, t) {\n        var n = this.props[t];\n        n && n(e, this.sortable, J);\n      }\n    }, {\n      key: \"onAdd\",\n      value: function (e) {\n        var t = this.props,\n          n = t.list,\n          r = t.setList,\n          o = t.clone,\n          i = D(e, L(J.dragging.props.list));\n        k(i), r(R(i, n, e, o).map(function (e) {\n          return N(N({}, e), {}, {\n            selected: !1\n          });\n        }), this.sortable, J);\n      }\n    }, {\n      key: \"onRemove\",\n      value: function (t) {\n        var n = this,\n          r = this.props,\n          o = r.list,\n          i = r.setList,\n          l = M(t),\n          a = D(t, o);\n        C(a);\n        var c = L(o);\n        if (\"clone\" !== t.pullMode) c = A(a, c);else {\n          var s = a;\n          switch (l) {\n            case \"multidrag\":\n              s = a.map(function (e, n) {\n                return N(N({}, e), {}, {\n                  element: t.clones[n]\n                });\n              });\n              break;\n            case \"normal\":\n              s = a.map(function (e) {\n                return N(N({}, e), {}, {\n                  element: t.clone\n                });\n              });\n              break;\n            case \"swap\":\n            default:\n              e(!0, 'mode \"'.concat(l, '\" cannot clone. Please remove \"props.clone\" from <ReactSortable/> when using the \"').concat(l, '\" plugin'));\n          }\n          k(s), a.forEach(function (e) {\n            var r = e.oldIndex,\n              o = n.props.clone(e.item, t);\n            c.splice(r, 1, o);\n          });\n        }\n        i(c = c.map(function (e) {\n          return N(N({}, e), {}, {\n            selected: !1\n          });\n        }), this.sortable, J);\n      }\n    }, {\n      key: \"onUpdate\",\n      value: function (e) {\n        var t = this.props,\n          n = t.list,\n          r = t.setList,\n          o = D(e, n);\n        return k(o), C(o), r(function (e, t) {\n          return R(e, A(e, t));\n        }(o, n), this.sortable, J);\n      }\n    }, {\n      key: \"onStart\",\n      value: function () {\n        J.dragging = this;\n      }\n    }, {\n      key: \"onEnd\",\n      value: function () {\n        J.dragging = null;\n      }\n    }, {\n      key: \"onChoose\",\n      value: function (e) {\n        var t = this.props,\n          n = t.list;\n        (0, t.setList)(n.map(function (t, n) {\n          return n === e.oldIndex ? N(N({}, t), {}, {\n            chosen: !0\n          }) : t;\n        }), this.sortable, J);\n      }\n    }, {\n      key: \"onUnchoose\",\n      value: function (e) {\n        var t = this.props,\n          n = t.list;\n        (0, t.setList)(n.map(function (t, n) {\n          return n === e.oldIndex ? N(N({}, t), {}, {\n            chosen: !1\n          }) : t;\n        }), this.sortable, J);\n      }\n    }, {\n      key: \"onSpill\",\n      value: function (e) {\n        var t = this.props,\n          n = t.removeOnSpill,\n          r = t.revertOnSpill;\n        n && !r && E(e.item);\n      }\n    }, {\n      key: \"onSelect\",\n      value: function (e) {\n        var t = this.props,\n          n = t.list,\n          r = t.setList,\n          o = n.map(function (e) {\n            return N(N({}, e), {}, {\n              selected: !1\n            });\n          });\n        e.newIndicies.forEach(function (t) {\n          var n = t.index;\n          if (-1 === n) return console.log('\"'.concat(e.type, '\" had indice of \"').concat(t.index, \"\\\", which is probably -1 and doesn't usually happen here.\")), void console.log(e);\n          o[n].selected = !0;\n        }), r(o, this.sortable, J);\n      }\n    }, {\n      key: \"onDeselect\",\n      value: function (e) {\n        var t = this.props,\n          n = t.list,\n          r = t.setList,\n          o = n.map(function (e) {\n            return N(N({}, e), {}, {\n              selected: !1\n            });\n          });\n        e.newIndicies.forEach(function (e) {\n          var t = e.index;\n          -1 !== t && (o[t].selected = !0);\n        }), r(o, this.sortable, J);\n      }\n    }, {\n      key: \"sortable\",\n      get: function () {\n        var e = this.ref.current;\n        if (null === e) return null;\n        var t = Object.keys(e).find(function (e) {\n          return e.includes(\"Sortable\");\n        });\n        return t ? e[t] : null;\n      }\n    }]) && q(c.prototype, u), f && q(c, f), d;\n  }();\nexports.ReactSortable = z, B(z, \"defaultProps\", {\n  clone: function (e) {\n    return e;\n  }\n});","map":{"version":3,"names":["g","e","__esModule","default","w","t","n","r","o","i","Object","keys","length","indexOf","getOwnPropertySymbols","prototype","propertyIsEnumerable","call","S","Array","isArray","j","Symbol","iterator","from","toString","slice","constructor","name","test","TypeError","x","filter","getOwnPropertyDescriptor","enumerable","push","apply","I","arguments","forEach","P","getOwnPropertyDescriptors","defineProperties","defineProperty","value","configurable","writable","E","parentElement","removeChild","k","element","C","oldIndex","children","insertBefore","D","M","item","newIndex","swapItem","oldIndicies","map","multiDragElement","index","newIndicies","sort","A","concat","reverse","splice","R","U","L","_","H","N","B","q","key","T","setPrototypeOf","__proto__","F","Reflect","construct","sham","Proxy","Date","$","G","ReferenceError","getPrototypeOf","exports","Utils","O","J","dragging","z","create","d","c","u","f","p","ref","l","list","chosen","selected","setList","sortable","plugins","current","makeOptions","s","props","tag","style","className","id","getChildren","dataIdAttr","selectedClass","chosenClass","dragClass","fallbackClass","ghostClass","swapClass","replace","filtered","b","a","clone","onAdd","onChange","onChoose","onClone","onEnd","onFilter","onRemove","onSort","onStart","onUnchoose","onUpdate","onMove","onSpill","onSelect","onDeselect","prepareOnHandlerPropAndDOM","prepareOnHandlerProp","willInsertAfter","callOnHandlerProp","pullMode","clones","removeOnSpill","revertOnSpill","console","log","type","get","find","includes","ReactSortable"],"sources":["./home/runner/work/react-sortablejs/react-sortablejs/node_modules/@parcel/scope-hoisting/lib/helpers.js","./src/util.ts","./src/react-sortable.tsx"],"sourcesContent":[null,"import { PropsWithChildren } from \"react\";\nimport Sortable, { Options } from \"sortablejs\";\nimport { MultiDragEvent } from \"./react-sortable\";\nimport { AllMethodNames, ItemInterface, ReactSortableProps } from \"./types\";\n\n/**\n * Removes the `node` from the DOM\n * @param node\n */\nexport function removeNode(node: HTMLElement): void {\n  if (node.parentElement !== null) node.parentElement.removeChild(node);\n}\n\n/**\n * Inserts the `newChild` node at the given index in a parent\n * @param parent The parent HTML Element.\n * @param newChild A HTML eement to add as a child of the parent.\n * @param index index of the parent to place the new child in.\n */\nexport function insertNodeAt(\n  parent: HTMLElement,\n  newChild: HTMLElement,\n  index: number\n): void {\n  const refChild = parent.children[index] || null;\n  parent.insertBefore(newChild, refChild);\n}\n\n// @todo - create a dom handler function for arrays or not at all\n\n/** removes stuff from the dom in a nice order */\n// @todo - do I need parenElement?\nexport function handleDOMChanges<T extends ItemInterface>(\n  customs: Normalized<T>[]\n): void {\n  removeNodes(customs);\n  insertNodes(customs);\n}\n\nexport function removeNodes<T extends ItemInterface>(\n  customs: Normalized<T>[]\n): void {\n  customs.forEach((curr) => removeNode(curr.element));\n}\n\nexport function insertNodes<T extends ItemInterface>(\n  customs: Normalized<T>[]\n): void {\n  customs.forEach((curr) => {\n    insertNodeAt(curr.parentElement, curr.element, curr.oldIndex);\n  });\n}\n\nexport function createCustoms<T extends ItemInterface>(\n  evt: MultiDragEvent,\n  list: T[]\n): Normalized<T>[] {\n  const mode = getMode(evt);\n  const parentElement = { parentElement: evt.from };\n  let custom = [];\n  switch (mode) {\n    case \"normal\":\n      /* eslint-disable */\n      const item = {\n        element: evt.item,\n        newIndex: evt.newIndex!,\n        oldIndex: evt.oldIndex!,\n        parentElement: evt.from,\n      };\n      custom = [item];\n      break;\n    case \"swap\":\n      const drag: Input = {\n        element: evt.item,\n        oldIndex: evt.oldIndex!,\n        newIndex: evt.newIndex!,\n        ...parentElement,\n      };\n      const swap: Input = {\n        element: evt.swapItem!,\n        oldIndex: evt.newIndex!,\n        newIndex: evt.oldIndex!,\n        ...parentElement,\n      };\n      custom = [drag, swap];\n      break;\n    case \"multidrag\":\n      custom = evt.oldIndicies.map<Input>((curr, index) => ({\n        element: curr.multiDragElement,\n        oldIndex: curr.index,\n        newIndex: evt.newIndicies[index].index,\n        ...parentElement,\n      }));\n      break;\n  }\n  /* eslint-enable */\n\n  const customs = createNormalized(custom, list);\n  return customs;\n}\n\n/** moves items form old index to new index without breaking anything ideally. */\nexport function handleStateChanges<T extends ItemInterface>(\n  normalized: Normalized<T>[],\n  list: T[]\n): T[] {\n  const a = handleStateRemove(normalized, list);\n  const b = handleStateAdd(normalized, a);\n  return b;\n}\n\nexport function handleStateRemove<T extends ItemInterface>(\n  normalized: Normalized<T>[],\n  list: T[]\n): T[] {\n  const newList = [...list];\n  normalized\n    .concat()\n    .reverse()\n    .forEach((curr) => newList.splice(curr.oldIndex, 1));\n  return newList;\n}\n\nexport function handleStateAdd<T extends ItemInterface>(\n  normalized: Normalized<T>[],\n  list: T[],\n  evt?: Sortable.SortableEvent,\n  clone?: ((currentItem: T, evt: Sortable.SortableEvent) => T) | undefined\n): T[] {\n  const newList = [...list];\n  normalized.forEach((curr) => {\n    const newItem = clone && evt && clone(curr.item, evt);\n    newList.splice(curr.newIndex, 0, newItem || curr.item);\n  });\n  return newList;\n}\n\nexport function getMode(evt: MultiDragEvent): \"multidrag\" | \"swap\" | \"normal\" {\n  if (evt.oldIndicies && evt.oldIndicies.length > 0) return \"multidrag\";\n  if (evt.swapItem) return \"swap\";\n  return \"normal\";\n}\n\nexport function createNormalized<T extends ItemInterface>(\n  inputs: Input[],\n  list: T[]\n): Normalized<T>[] {\n  const normalized = inputs\n    .map<Normalized<T>>((curr) => ({ ...curr, item: list[curr.oldIndex] }))\n    .sort((a, b) => a.oldIndex - b.oldIndex);\n  return normalized;\n}\n\nexport interface Input {\n  parentElement: HTMLElement;\n  element: HTMLElement;\n  oldIndex: number;\n  newIndex: number;\n}\n\nexport interface Normalized<T> extends Input {\n  item: T;\n}\n\n/**\n * Removes the following group of properties from `props`,\n * leaving only `Sortable.Options` without any `on` methods.\n * @param props `ReactSortable.Props`\n */\nexport function destructurePropsForOptions<T>(\n  props: PropsWithChildren<ReactSortableProps<T>>\n): Exclude<Options, AllMethodNames> {\n  /* eslint-disable */\n  const {\n    // react sortable props\n    list,\n    setList,\n    children,\n    tag,\n    style,\n    className,\n    clone,\n    // sortable options that have methods we want to overwrite\n    onAdd,\n    onChange,\n    onChoose,\n    onClone,\n    onEnd,\n    onFilter,\n    onRemove,\n    onSort,\n    onStart,\n    onUnchoose,\n    onUpdate,\n    onMove,\n    onSpill,\n    onSelect,\n    onDeselect,\n    ...options\n  } = props;\n  /* eslint-enable */\n  return options;\n}\n\n/**\n * Construct a type with the properties of T except for those in type K.\n * Including this allows for backwards compatibility with earlier versions of TS.\n */\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n","import classNames from \"classnames\";\nimport {\n  Children,\n  cloneElement,\n  Component,\n  createElement,\n  createRef,\n  ReactElement,\n  RefObject,\n} from \"react\";\nimport Sortable, { MoveEvent, Options, SortableEvent } from \"sortablejs\";\nimport invariant from \"tiny-invariant\";\nimport {\n  AllMethodsExceptMove,\n  HandledMethodNames,\n  ItemInterface,\n  ReactSortableProps,\n  Store,\n  UnHandledMethodNames,\n} from \"./types\";\nimport {\n  createCustoms,\n  destructurePropsForOptions,\n  getMode,\n  handleStateAdd,\n  handleStateChanges,\n  handleStateRemove,\n  insertNodes,\n  removeNode,\n  removeNodes,\n} from \"./util\";\n\n/** Holds a global reference for which react element is being dragged */\n// @todo - use context to manage this. How does one use 2 different providers?\nconst store: Store = { dragging: null };\n\nexport class ReactSortable<T extends ItemInterface> extends Component<\n  ReactSortableProps<T>\n> {\n  /* eslint-disable-next-line */\n  static defaultProps: Partial<ReactSortableProps<any>> = {\n    clone: (item) => item,\n  };\n\n  private ref: RefObject<HTMLElement>;\n  constructor(props: ReactSortableProps<T>) {\n    super(props);\n    // @todo forward ref this component\n    this.ref = createRef<HTMLElement>();\n\n    // make all state false because we can't change sortable unless a mouse gesture is made.\n    const newList = props.list.map((item) => ({\n      ...item,\n      chosen: false,\n      selected: false,\n    }));\n\n    props.setList(newList, this.sortable, store);\n    invariant(\n      //@ts-expect-error: Doesn't exist. Will deprecate soon.\n      !props.plugins,\n      `\nPlugins prop is no longer supported.\nInstead, mount it with \"Sortable.mount(new MultiDrag())\"\nPlease read the updated README.md at https://github.com/SortableJS/react-sortablejs.\n      `\n    );\n  }\n  componentDidMount(): void {\n    if (this.ref.current === null) return;\n    const newOptions = this.makeOptions();\n    Sortable.create(this.ref.current, newOptions);\n  }\n\n  render(): JSX.Element {\n    const { tag, style, className, id } = this.props;\n    const classicProps = { style, className, id };\n\n    // if no tag, default to a `div` element.\n    const newTag = !tag || tag === null ? \"div\" : tag;\n    return createElement(\n      newTag,\n      {\n        // @todo - find a way (perhaps with the callback) to allow AntD components to work\n        ref: this.ref,\n        ...classicProps,\n      },\n      this.getChildren()\n    );\n  }\n\n  private getChildren() {\n    const {\n      children,\n      dataIdAttr,\n      selectedClass = \"sortable-selected\",\n      chosenClass = \"sortable-chosen\",\n      /* eslint-disable */\n      dragClass = \"sortable-drag\",\n      fallbackClass = \"sortable-falback\",\n      ghostClass = \"sortable-ghost\",\n      swapClass = \"sortable-swap-highlight\",\n      /* eslint-enable */\n      filter = \"sortable-filter\",\n      list,\n    } = this.props;\n\n    // if no children, don't do anything.\n    if (!children || children == null) return null;\n    const dataid = dataIdAttr || \"data-id\";\n    /* eslint-disable-next-line */\n    return Children.map(children as ReactElement<any>[], (child, index) => {\n      const item = list[index];\n      const { className: prevClassName } = child.props;\n\n      // @todo - handle the function if avalable. I don't think anyone will be doing this soon.\n      const filtered = typeof filter === \"string\" && {\n        [filter.replace(\".\", \"\")]: !!item.filtered,\n      };\n\n      const className = classNames(prevClassName, {\n        [selectedClass]: item.selected,\n        [chosenClass]: item.chosen,\n        ...filtered,\n        // [dragClass]: true,\n        // [fallbackClass]: true,\n        // [ghostClass]: true,\n        // [swapClass]: true\n      });\n\n      return cloneElement(child, {\n        [dataid]: child.key,\n        className,\n      });\n    });\n  }\n\n  /** Appends the `sortable` property to this component */\n  private get sortable(): Sortable | null {\n    const el = this.ref.current;\n    if (el === null) return null;\n    const key = Object.keys(el).find((k) => k.includes(\"Sortable\"));\n    if (!key) return null;\n    //@ts-expect-error: fix me.\n    return el[key] as Sortable;\n  }\n\n  /** Converts all the props from `ReactSortable` into the `options` object that `Sortable.create(el, [options])` can use. */\n  makeOptions(): Options {\n    const DOMHandlers: HandledMethodNames[] = [\n      \"onAdd\",\n      \"onChoose\",\n      \"onDeselect\",\n      \"onEnd\",\n      \"onRemove\",\n      \"onSelect\",\n      \"onSpill\",\n      \"onStart\",\n      \"onUnchoose\",\n      \"onUpdate\",\n    ];\n    const NonDOMHandlers: UnHandledMethodNames[] = [\n      \"onChange\",\n      \"onClone\",\n      \"onFilter\",\n      \"onSort\",\n    ];\n    const newOptions: Options = destructurePropsForOptions(this.props);\n    DOMHandlers.forEach(\n      (name) => (newOptions[name] = this.prepareOnHandlerPropAndDOM(name))\n    );\n    NonDOMHandlers.forEach(\n      (name) => (newOptions[name] = this.prepareOnHandlerProp(name))\n    );\n\n    /** onMove has 2 arguments and needs to be handled seperately. */\n    const onMove = (evt: MoveEvent, originalEvt: Event) => {\n      const { onMove } = this.props;\n      const defaultValue = evt.willInsertAfter || -1;\n      if (!onMove) return defaultValue;\n      const result = onMove(evt, originalEvt, this.sortable, store);\n      if (typeof result === \"undefined\") return false;\n      return result;\n    };\n\n    return {\n      ...newOptions,\n      onMove,\n    };\n  }\n\n  /** Prepares a method that will be used in the sortable options to call an `on[Handler]` prop & an `on[Handler]` ReactSortable method.  */\n  prepareOnHandlerPropAndDOM(\n    evtName: HandledMethodNames\n  ): (evt: SortableEvent) => void {\n    return (evt) => {\n      // call the component prop\n      this.callOnHandlerProp(evt, evtName);\n      // calls state change\n      //@ts-expect-error: until @types multidrag item is in\n      this[evtName](evt);\n    };\n  }\n\n  /** Prepares a method that will be used in the sortable options to call an `on[Handler]` prop */\n  prepareOnHandlerProp(\n    evtName: Exclude<AllMethodsExceptMove, HandledMethodNames>\n  ): (evt: SortableEvent) => void {\n    return (evt) => {\n      // call the component prop\n      this.callOnHandlerProp(evt, evtName);\n    };\n  }\n\n  /** Calls the `props.on[Handler]` function */\n  callOnHandlerProp(evt: SortableEvent, evtName: AllMethodsExceptMove): void {\n    const propEvent = this.props[evtName];\n    if (propEvent) propEvent(evt, this.sortable, store);\n  }\n\n  // SORTABLE DOM HANDLING\n\n  onAdd(evt: MultiDragEvent): void {\n    const { list, setList, clone } = this.props;\n    /* eslint-disable-next-line */\n    const otherList = [...store.dragging!.props.list];\n    const customs = createCustoms(evt, otherList);\n    removeNodes(customs);\n    const newList = handleStateAdd(customs, list, evt, clone).map((item) => ({\n      ...item,\n      selected: false,\n    }));\n    setList(newList, this.sortable, store);\n  }\n\n  onRemove(evt: MultiDragEvent): void {\n    const { list, setList } = this.props;\n    const mode = getMode(evt);\n    const customs = createCustoms(evt, list);\n    insertNodes(customs);\n\n    let newList = [...list];\n    // remove state if not in clone mode. otherwise, keep.\n    if (evt.pullMode !== \"clone\") newList = handleStateRemove(customs, newList);\n    // if clone, it doesn't really remove. instead it clones in place.\n    // @todo -\n    else {\n      // switch used to get the clone\n      let customClones = customs;\n      switch (mode) {\n        case \"multidrag\":\n          customClones = customs.map((item, index) => ({\n            ...item,\n            element: evt.clones[index],\n          }));\n          break;\n        case \"normal\":\n          customClones = customs.map((item) => ({\n            ...item,\n            element: evt.clone,\n          }));\n          break;\n        case \"swap\":\n        default: {\n          invariant(\n            true,\n            `mode \"${mode}\" cannot clone. Please remove \"props.clone\" from <ReactSortable/> when using the \"${mode}\" plugin`\n          );\n        }\n      }\n      removeNodes(customClones);\n\n      // replace selected items with cloned items\n      customs.forEach((curr) => {\n        const index = curr.oldIndex;\n        /* eslint-disable-next-line */\n        const newItem = this.props.clone!(curr.item, evt);\n        newList.splice(index, 1, newItem);\n      });\n    }\n\n    // remove item.selected from list\n    newList = newList.map((item) => ({ ...item, selected: false }));\n    setList(newList, this.sortable, store);\n  }\n\n  onUpdate(evt: MultiDragEvent): void {\n    const { list, setList } = this.props;\n    const customs = createCustoms(evt, list);\n    removeNodes(customs);\n    insertNodes(customs);\n    const newList = handleStateChanges(customs, list);\n    return setList(newList, this.sortable, store);\n  }\n\n  onStart(): void {\n    store.dragging = this;\n  }\n\n  onEnd(): void {\n    store.dragging = null;\n  }\n\n  onChoose(evt: SortableEvent): void {\n    const { list, setList } = this.props;\n    const newList = list.map((item, index) => {\n      if (index === evt.oldIndex) {\n        return {\n          ...item,\n          chosen: true,\n        };\n      }\n      return item;\n    });\n    setList(newList, this.sortable, store);\n  }\n\n  onUnchoose(evt: SortableEvent): void {\n    const { list, setList } = this.props;\n    const newList = list.map((item, index) => {\n      if (index === evt.oldIndex) {\n        return {\n          ...item,\n          chosen: false,\n        };\n      }\n      return item;\n    });\n    setList(newList, this.sortable, store);\n  }\n\n  onSpill(evt: SortableEvent): void {\n    const { removeOnSpill, revertOnSpill } = this.props;\n    if (removeOnSpill && !revertOnSpill) removeNode(evt.item);\n  }\n\n  onSelect(evt: MultiDragEvent): void {\n    const { list, setList } = this.props;\n    const newList = list.map((item) => ({ ...item, selected: false }));\n    evt.newIndicies.forEach((curr) => {\n      const index = curr.index;\n      if (index === -1) {\n        console.log(\n          `\"${evt.type}\" had indice of \"${curr.index}\", which is probably -1 and doesn't usually happen here.`\n        );\n        console.log(evt);\n        return;\n      }\n      newList[index].selected = true;\n    });\n    setList(newList, this.sortable, store);\n  }\n\n  onDeselect(evt: MultiDragEvent): void {\n    const { list, setList } = this.props;\n    const newList = list.map((item) => ({ ...item, selected: false }));\n    evt.newIndicies.forEach((curr) => {\n      const index = curr.index;\n      if (index === -1) return;\n      newList[index].selected = true;\n    });\n    setList(newList, this.sortable, store);\n  }\n}\n\n// everything below this point can be removed\n// once @types has been merged. PR submited\ninterface MultiIndices {\n  multiDragElement: HTMLElement;\n  index: number;\n}\n\nexport interface MultiDragEvent extends SortableEvent {\n  // @todo - add this to @types\n  clones: HTMLElement[];\n  oldIndicies: MultiIndices[];\n  newIndicies: MultiIndices[];\n  swapItem: HTMLElement | null;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}