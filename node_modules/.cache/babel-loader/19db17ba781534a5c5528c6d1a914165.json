{"ast":null,"code":"/* eslint-disable promise/prefer-await-to-then */\n\nconst methodMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'],\n// New WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Old WebKit\n['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'], ['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'], ['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];\nconst nativeAPI = (() => {\n  if (typeof document === 'undefined') {\n    return false;\n  }\n  const unprefixedMethods = methodMap[0];\n  const returnValue = {};\n  for (const methodList of methodMap) {\n    const exitFullscreenMethod = methodList === null || methodList === void 0 ? void 0 : methodList[1];\n    if (exitFullscreenMethod in document) {\n      for (const [index, method] of methodList.entries()) {\n        returnValue[unprefixedMethods[index]] = method;\n      }\n      return returnValue;\n    }\n  }\n  return false;\n})();\nconst eventNameMap = {\n  change: nativeAPI.fullscreenchange,\n  error: nativeAPI.fullscreenerror\n};\n\n// eslint-disable-next-line import/no-mutable-exports\nlet screenfull = {\n  // eslint-disable-next-line default-param-last\n  request() {\n    let element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document.documentElement;\n    let options = arguments.length > 1 ? arguments[1] : undefined;\n    return new Promise((resolve, reject) => {\n      const onFullScreenEntered = () => {\n        screenfull.off('change', onFullScreenEntered);\n        resolve();\n      };\n      screenfull.on('change', onFullScreenEntered);\n      const returnPromise = element[nativeAPI.requestFullscreen](options);\n      if (returnPromise instanceof Promise) {\n        returnPromise.then(onFullScreenEntered).catch(reject);\n      }\n    });\n  },\n  exit() {\n    return new Promise((resolve, reject) => {\n      if (!screenfull.isFullscreen) {\n        resolve();\n        return;\n      }\n      const onFullScreenExit = () => {\n        screenfull.off('change', onFullScreenExit);\n        resolve();\n      };\n      screenfull.on('change', onFullScreenExit);\n      const returnPromise = document[nativeAPI.exitFullscreen]();\n      if (returnPromise instanceof Promise) {\n        returnPromise.then(onFullScreenExit).catch(reject);\n      }\n    });\n  },\n  toggle(element, options) {\n    return screenfull.isFullscreen ? screenfull.exit() : screenfull.request(element, options);\n  },\n  onchange(callback) {\n    screenfull.on('change', callback);\n  },\n  onerror(callback) {\n    screenfull.on('error', callback);\n  },\n  on(event, callback) {\n    const eventName = eventNameMap[event];\n    if (eventName) {\n      document.addEventListener(eventName, callback, false);\n    }\n  },\n  off(event, callback) {\n    const eventName = eventNameMap[event];\n    if (eventName) {\n      document.removeEventListener(eventName, callback, false);\n    }\n  },\n  raw: nativeAPI\n};\nObject.defineProperties(screenfull, {\n  isFullscreen: {\n    get: () => Boolean(document[nativeAPI.fullscreenElement])\n  },\n  element: {\n    enumerable: true,\n    get: () => {\n      var _document$nativeAPI$f;\n      return (_document$nativeAPI$f = document[nativeAPI.fullscreenElement]) !== null && _document$nativeAPI$f !== void 0 ? _document$nativeAPI$f : undefined;\n    }\n  },\n  isEnabled: {\n    enumerable: true,\n    // Coerce to boolean in case of old WebKit.\n    get: () => Boolean(document[nativeAPI.fullscreenEnabled])\n  }\n});\nif (!nativeAPI) {\n  screenfull = {\n    isEnabled: false\n  };\n}\nexport default screenfull;","map":{"version":3,"names":["methodMap","nativeAPI","document","unprefixedMethods","returnValue","methodList","exitFullscreenMethod","index","method","entries","eventNameMap","change","fullscreenchange","error","fullscreenerror","screenfull","request","element","arguments","length","undefined","documentElement","options","Promise","resolve","reject","onFullScreenEntered","off","on","returnPromise","requestFullscreen","then","catch","exit","isFullscreen","onFullScreenExit","exitFullscreen","toggle","onchange","callback","onerror","event","eventName","addEventListener","removeEventListener","raw","Object","defineProperties","get","Boolean","fullscreenElement","enumerable","_document$nativeAPI$f","isEnabled","fullscreenEnabled"],"sources":["C:/Users/Hai Hong/Desktop/EXAI/EXAI/node_modules/screenfull/index.js"],"sourcesContent":["/* eslint-disable promise/prefer-await-to-then */\r\n\r\nconst methodMap = [\r\n\t[\r\n\t\t'requestFullscreen',\r\n\t\t'exitFullscreen',\r\n\t\t'fullscreenElement',\r\n\t\t'fullscreenEnabled',\r\n\t\t'fullscreenchange',\r\n\t\t'fullscreenerror',\r\n\t],\r\n\t// New WebKit\r\n\t[\r\n\t\t'webkitRequestFullscreen',\r\n\t\t'webkitExitFullscreen',\r\n\t\t'webkitFullscreenElement',\r\n\t\t'webkitFullscreenEnabled',\r\n\t\t'webkitfullscreenchange',\r\n\t\t'webkitfullscreenerror',\r\n\r\n\t],\r\n\t// Old WebKit\r\n\t[\r\n\t\t'webkitRequestFullScreen',\r\n\t\t'webkitCancelFullScreen',\r\n\t\t'webkitCurrentFullScreenElement',\r\n\t\t'webkitCancelFullScreen',\r\n\t\t'webkitfullscreenchange',\r\n\t\t'webkitfullscreenerror',\r\n\r\n\t],\r\n\t[\r\n\t\t'mozRequestFullScreen',\r\n\t\t'mozCancelFullScreen',\r\n\t\t'mozFullScreenElement',\r\n\t\t'mozFullScreenEnabled',\r\n\t\t'mozfullscreenchange',\r\n\t\t'mozfullscreenerror',\r\n\t],\r\n\t[\r\n\t\t'msRequestFullscreen',\r\n\t\t'msExitFullscreen',\r\n\t\t'msFullscreenElement',\r\n\t\t'msFullscreenEnabled',\r\n\t\t'MSFullscreenChange',\r\n\t\t'MSFullscreenError',\r\n\t],\r\n];\r\n\r\nconst nativeAPI = (() => {\r\n\tif (typeof document === 'undefined') {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tconst unprefixedMethods = methodMap[0];\r\n\tconst returnValue = {};\r\n\r\n\tfor (const methodList of methodMap) {\r\n\t\tconst exitFullscreenMethod = methodList?.[1];\r\n\t\tif (exitFullscreenMethod in document) {\r\n\t\t\tfor (const [index, method] of methodList.entries()) {\r\n\t\t\t\treturnValue[unprefixedMethods[index]] = method;\r\n\t\t\t}\r\n\r\n\t\t\treturn returnValue;\r\n\t\t}\r\n\t}\r\n\r\n\treturn false;\r\n})();\r\n\r\nconst eventNameMap = {\r\n\tchange: nativeAPI.fullscreenchange,\r\n\terror: nativeAPI.fullscreenerror,\r\n};\r\n\r\n// eslint-disable-next-line import/no-mutable-exports\r\nlet screenfull = {\r\n\t// eslint-disable-next-line default-param-last\r\n\trequest(element = document.documentElement, options) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst onFullScreenEntered = () => {\r\n\t\t\t\tscreenfull.off('change', onFullScreenEntered);\r\n\t\t\t\tresolve();\r\n\t\t\t};\r\n\r\n\t\t\tscreenfull.on('change', onFullScreenEntered);\r\n\r\n\t\t\tconst returnPromise = element[nativeAPI.requestFullscreen](options);\r\n\r\n\t\t\tif (returnPromise instanceof Promise) {\r\n\t\t\t\treturnPromise.then(onFullScreenEntered).catch(reject);\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\texit() {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tif (!screenfull.isFullscreen) {\r\n\t\t\t\tresolve();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst onFullScreenExit = () => {\r\n\t\t\t\tscreenfull.off('change', onFullScreenExit);\r\n\t\t\t\tresolve();\r\n\t\t\t};\r\n\r\n\t\t\tscreenfull.on('change', onFullScreenExit);\r\n\r\n\t\t\tconst returnPromise = document[nativeAPI.exitFullscreen]();\r\n\r\n\t\t\tif (returnPromise instanceof Promise) {\r\n\t\t\t\treturnPromise.then(onFullScreenExit).catch(reject);\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\ttoggle(element, options) {\r\n\t\treturn screenfull.isFullscreen ? screenfull.exit() : screenfull.request(element, options);\r\n\t},\r\n\tonchange(callback) {\r\n\t\tscreenfull.on('change', callback);\r\n\t},\r\n\tonerror(callback) {\r\n\t\tscreenfull.on('error', callback);\r\n\t},\r\n\ton(event, callback) {\r\n\t\tconst eventName = eventNameMap[event];\r\n\t\tif (eventName) {\r\n\t\t\tdocument.addEventListener(eventName, callback, false);\r\n\t\t}\r\n\t},\r\n\toff(event, callback) {\r\n\t\tconst eventName = eventNameMap[event];\r\n\t\tif (eventName) {\r\n\t\t\tdocument.removeEventListener(eventName, callback, false);\r\n\t\t}\r\n\t},\r\n\traw: nativeAPI,\r\n};\r\n\r\nObject.defineProperties(screenfull, {\r\n\tisFullscreen: {\r\n\t\tget: () => Boolean(document[nativeAPI.fullscreenElement]),\r\n\t},\r\n\telement: {\r\n\t\tenumerable: true,\r\n\t\tget: () => document[nativeAPI.fullscreenElement] ?? undefined,\r\n\t},\r\n\tisEnabled: {\r\n\t\tenumerable: true,\r\n\t\t// Coerce to boolean in case of old WebKit.\r\n\t\tget: () => Boolean(document[nativeAPI.fullscreenEnabled]),\r\n\t},\r\n});\r\n\r\nif (!nativeAPI) {\r\n\tscreenfull = {isEnabled: false};\r\n}\r\n\r\nexport default screenfull;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}