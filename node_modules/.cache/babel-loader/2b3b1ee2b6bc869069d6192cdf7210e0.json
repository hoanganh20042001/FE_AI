{"ast":null,"code":"// ** Redux Imports\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// ** Axios Imports\nimport axios from 'axios';\nexport const getMails = createAsyncThunk('appEmail/getMails', async params => {\n  const response = await axios.get('/apps/email/emails', {\n    params\n  });\n  return {\n    params,\n    data: response.data\n  };\n});\nexport const updateMails = createAsyncThunk('appEmail/updateMails', async (_ref, _ref2) => {\n  let {\n    emailIds,\n    dataToUpdate\n  } = _ref;\n  let {\n    dispatch,\n    getState\n  } = _ref2;\n  const response = await axios.post('/apps/email/update-emails', {\n    emailIds,\n    dataToUpdate\n  });\n  await dispatch(getMails(getState().email.params));\n  return {\n    emailIds,\n    dataToUpdate,\n    data: response.data\n  };\n});\nexport const updateMailLabel = createAsyncThunk('appEmail/updateMailLabel', async (_ref3, _ref4) => {\n  let {\n    emailIds,\n    label\n  } = _ref3;\n  let {\n    dispatch,\n    getState\n  } = _ref4;\n  const response = await axios.post('/apps/email/update-emails-label', {\n    emailIds,\n    label\n  });\n  await dispatch(getMails(getState().email.params));\n  return response.data;\n});\nexport const paginateMail = createAsyncThunk('appEmail/paginateMail', async _ref5 => {\n  let {\n    dir,\n    emailId\n  } = _ref5;\n  const response = await axios.get('/apps/email/paginate-email', {\n    params: {\n      dir,\n      emailId\n    }\n  });\n  return response.data;\n});\nexport const selectCurrentMail = createAsyncThunk('appEmail/selectCurrentMail', async id => {\n  const response = await axios.get('/apps/email/get-email', {\n    id\n  });\n  return response.data;\n});\nexport const appEmailSlice = createSlice({\n  name: 'appEmail',\n  initialState: {\n    mails: [],\n    params: {},\n    emailsMeta: {},\n    selectedMails: [],\n    currentMail: null\n  },\n  reducers: {\n    selectMail: (state, action) => {\n      const selectedMails = state.selectedMails;\n      if (!selectedMails.includes(action.payload)) {\n        selectedMails.push(action.payload);\n      } else {\n        selectedMails.splice(selectedMails.indexOf(action.payload), 1);\n      }\n      state.selectedMails = selectedMails;\n    },\n    selectAllMail: (state, action) => {\n      const selectAllMailsArr = [];\n      if (action.payload) {\n        selectAllMailsArr.length = 0;\n        state.mails.forEach(mail => selectAllMailsArr.push(mail.id));\n      } else {\n        selectAllMailsArr.length = 0;\n      }\n      state.selectedMails = selectAllMailsArr;\n    },\n    resetSelectedMail: state => {\n      state.selectedMails = [];\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getMails.fulfilled, (state, action) => {\n      let currMail = null;\n      if (state.currentMail !== null && state.currentMail !== undefined) {\n        currMail = action.payload.data.emails.find(i => i.id === state.currentMail.id);\n      }\n      state.currentMail = currMail;\n      state.params = action.payload.params;\n      state.mails = action.payload.data.emails;\n      state.emailsMeta = action.payload.data.emailsMeta;\n    }).addCase(updateMails.fulfilled, (state, action) => {\n      function updateMailData(email) {\n        Object.assign(email, action.payload.dataToUpdate);\n      }\n      state.mails.forEach(email => {\n        if (action.payload.emailIds.includes(email.id)) {\n          updateMailData(email);\n        }\n      });\n    }).addCase(paginateMail.fulfilled, (state, action) => {\n      const data = action.payload;\n      const dataIndex = state.mails.findIndex(i => i.id === data.id);\n      dataIndex === 0 ? data.hasPreviousMail = false : data.hasPreviousMail = true;\n      dataIndex === state.mails.length - 1 ? data.hasNextMail = false : data.hasNextMail = true;\n      state.currentMail = data;\n    }).addCase(selectCurrentMail.fulfilled, (state, action) => {\n      state.currentMail = action.payload;\n    });\n  }\n});\nexport const {\n  selectMail,\n  selectAllMail,\n  resetSelectedMail\n} = appEmailSlice.actions;\nexport default appEmailSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","getMails","params","response","get","data","updateMails","_ref","_ref2","emailIds","dataToUpdate","dispatch","getState","post","email","updateMailLabel","_ref3","_ref4","label","paginateMail","_ref5","dir","emailId","selectCurrentMail","id","appEmailSlice","name","initialState","mails","emailsMeta","selectedMails","currentMail","reducers","selectMail","state","action","includes","payload","push","splice","indexOf","selectAllMail","selectAllMailsArr","length","forEach","mail","resetSelectedMail","extraReducers","builder","addCase","fulfilled","currMail","undefined","emails","find","i","updateMailData","Object","assign","dataIndex","findIndex","hasPreviousMail","hasNextMail","actions","reducer"],"sources":["E:/EXAI/EX-AI/src/views/apps/email/store/index.js"],"sourcesContent":["// ** Redux Imports\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\n\n// ** Axios Imports\nimport axios from 'axios'\n\nexport const getMails = createAsyncThunk('appEmail/getMails', async params => {\n  const response = await axios.get('/apps/email/emails', { params })\n  return {\n    params,\n    data: response.data\n  }\n})\n\nexport const updateMails = createAsyncThunk(\n  'appEmail/updateMails',\n  async ({ emailIds, dataToUpdate }, { dispatch, getState }) => {\n    const response = await axios.post('/apps/email/update-emails', { emailIds, dataToUpdate })\n    await dispatch(getMails(getState().email.params))\n    return {\n      emailIds,\n      dataToUpdate,\n      data: response.data\n    }\n  }\n)\n\nexport const updateMailLabel = createAsyncThunk(\n  'appEmail/updateMailLabel',\n  async ({ emailIds, label }, { dispatch, getState }) => {\n    const response = await axios.post('/apps/email/update-emails-label', { emailIds, label })\n    await dispatch(getMails(getState().email.params))\n    return response.data\n  }\n)\n\nexport const paginateMail = createAsyncThunk('appEmail/paginateMail', async ({ dir, emailId }) => {\n  const response = await axios.get('/apps/email/paginate-email', { params: { dir, emailId } })\n  return response.data\n})\n\nexport const selectCurrentMail = createAsyncThunk('appEmail/selectCurrentMail', async id => {\n  const response = await axios.get('/apps/email/get-email', { id })\n  return response.data\n})\n\nexport const appEmailSlice = createSlice({\n  name: 'appEmail',\n  initialState: {\n    mails: [],\n    params: {},\n    emailsMeta: {},\n    selectedMails: [],\n    currentMail: null\n  },\n  reducers: {\n    selectMail: (state, action) => {\n      const selectedMails = state.selectedMails\n      if (!selectedMails.includes(action.payload)) {\n        selectedMails.push(action.payload)\n      } else {\n        selectedMails.splice(selectedMails.indexOf(action.payload), 1)\n      }\n      state.selectedMails = selectedMails\n    },\n    selectAllMail: (state, action) => {\n      const selectAllMailsArr = []\n      if (action.payload) {\n        selectAllMailsArr.length = 0\n        state.mails.forEach(mail => selectAllMailsArr.push(mail.id))\n      } else {\n        selectAllMailsArr.length = 0\n      }\n      state.selectedMails = selectAllMailsArr\n    },\n    resetSelectedMail: state => {\n      state.selectedMails = []\n    }\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(getMails.fulfilled, (state, action) => {\n        let currMail = null\n        if (state.currentMail !== null && state.currentMail !== undefined) {\n          currMail = action.payload.data.emails.find(i => i.id === state.currentMail.id)\n        }\n        state.currentMail = currMail\n        state.params = action.payload.params\n        state.mails = action.payload.data.emails\n        state.emailsMeta = action.payload.data.emailsMeta\n      })\n      .addCase(updateMails.fulfilled, (state, action) => {\n        function updateMailData(email) {\n          Object.assign(email, action.payload.dataToUpdate)\n        }\n        state.mails.forEach(email => {\n          if (action.payload.emailIds.includes(email.id)) {\n            updateMailData(email)\n          }\n        })\n      })\n      .addCase(paginateMail.fulfilled, (state, action) => {\n        const data = action.payload\n        const dataIndex = state.mails.findIndex(i => i.id === data.id)\n        dataIndex === 0 ? (data.hasPreviousMail = false) : (data.hasPreviousMail = true)\n        dataIndex === state.mails.length - 1 ? (data.hasNextMail = false) : (data.hasNextMail = true)\n        state.currentMail = data\n      })\n      .addCase(selectCurrentMail.fulfilled, (state, action) => {\n        state.currentMail = action.payload\n      })\n  }\n})\n\nexport const { selectMail, selectAllMail, resetSelectedMail } = appEmailSlice.actions\n\nexport default appEmailSlice.reducer\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}