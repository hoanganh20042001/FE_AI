{"ast":null,"code":"import mock from '../mock';\n\n// ** Utils\nimport { paginateArray } from '../utils';\nconst data = {\n  permissions: [{\n    id: 1,\n    name: 'Management',\n    assignedTo: ['administrator'],\n    createdDate: '14 Apr 2021, 8:43 PM'\n  }, {\n    id: 2,\n    assignedTo: ['administrator'],\n    name: 'Manage Billing & Roles',\n    createdDate: '16 Sep 2021, 5:20 PM'\n  }, {\n    id: 3,\n    name: 'Add & Remove Users',\n    createdDate: '14 Oct 2021, 10:20 AM',\n    assignedTo: ['administrator', 'manager']\n  }, {\n    id: 4,\n    name: 'Project Planning',\n    createdDate: '14 Oct 2021, 10:20 AM',\n    assignedTo: ['administrator', 'user', 'support']\n  }, {\n    id: 5,\n    name: 'Manage Email Sequences',\n    createdDate: '23 Aug 2021, 2:00 PM',\n    assignedTo: ['administrator', 'user', 'support']\n  }, {\n    id: 6,\n    name: 'Client Communication',\n    createdDate: '15 Apr 2021, 11:30 AM',\n    assignedTo: ['administrator', 'manager']\n  }, {\n    id: 7,\n    name: 'Only View',\n    createdDate: '04 Dec 2021, 8:15 PM',\n    assignedTo: ['administrator', 'restricted-user']\n  }, {\n    id: 8,\n    name: 'Financial Management',\n    createdDate: '25 Feb 2021, 10:30 AM',\n    assignedTo: ['administrator', 'manager']\n  }, {\n    id: 9,\n    name: 'Manage Others’ Tasks',\n    createdDate: '04 Nov 2021, 11:45 AM',\n    assignedTo: ['administrator', 'support']\n  }]\n};\n\n// ------------------------------------------------\n// GET: Return Permissions List\n// ------------------------------------------------\nmock.onGet('/apps/permissions/data').reply(config => {\n  const {\n    q = '',\n    perPage = 10,\n    page = 1,\n    assignedTo = ''\n  } = config.params;\n  const queryLowered = q.toLowerCase();\n  const filteredData = data.permissions.filter(permission => {\n    if (assignedTo !== '') {\n      return (permission.name.toLowerCase().includes(queryLowered) || permission.createdDate.toLowerCase().includes(queryLowered)) && permission.assignedTo.includes(assignedTo);\n    } else {\n      return permission.name.toLowerCase().includes(queryLowered) || permission.createdDate.toLowerCase().includes(queryLowered);\n    }\n  });\n  return [200, {\n    params: config.params,\n    allData: data.permissions,\n    total: filteredData.length,\n    permissions: paginateArray(filteredData, perPage, page)\n  }];\n});\n\n// POST: Add new permission\nmock.onPost('/apps/permissions/add-permission').reply(config => {\n  // Get permission from post data\n  const permission = JSON.parse(config.data).permission;\n  const {\n    length\n  } = data.permissions;\n  let lastIndex = 0;\n  if (length) {\n    lastIndex = data.permissions[length - 1].id;\n  }\n  permission.id = lastIndex + 1;\n  permission.assignedTo = ['administrator'];\n  const now = new Date();\n  const months = now.toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  }).replace(',', '');\n  const time = now.toLocaleString('en-US', {\n    hour: 'numeric',\n    minute: 'numeric',\n    hour12: true\n  });\n  const monthsArr = months.split(' ');\n  /*eslint-disable */\n  const moveElement = (array, sourceIndex, destinationIndex) => {\n    return array.map(a => a === sourceIndex ? array.find(a => a === destinationIndex) : a === destinationIndex ? array.find(a => a === sourceIndex) : a);\n  };\n  const finalDate = moveElement(monthsArr, monthsArr[0], monthsArr[1]).join(' ');\n  permission.createdDate = \"\".concat(finalDate, \", \").concat(time);\n  data.permissions.unshift(permission);\n  return [201, {\n    permission\n  }];\n});\nmock.onPost('/apps/permissions/update-permission').reply(config => {\n  // Get permission from post data\n  const {\n    id,\n    name\n  } = JSON.parse(config.data);\n  data.permissions.find(i => {\n    if (i.id === id) {\n      i.name = name;\n    }\n  });\n  return [201];\n});\n\n// DELETE: Deletes Permissions\nmock.onDelete('/apps/permissions/delete').reply(config => {\n  // Get  id from URL\n  let permissionID = config.id;\n\n  // Convert Id to number\n  permissionID = Number(permissionID);\n  const permissionIndex = data.permissions.findIndex(t => t.id === permissionID);\n  data.permissions.splice(permissionIndex, 1);\n  return [200];\n});","map":{"version":3,"names":["mock","paginateArray","data","permissions","id","name","assignedTo","createdDate","onGet","reply","config","q","perPage","page","params","queryLowered","toLowerCase","filteredData","filter","permission","includes","allData","total","length","onPost","JSON","parse","lastIndex","now","Date","months","toLocaleDateString","year","month","day","replace","time","toLocaleString","hour","minute","hour12","monthsArr","split","moveElement","array","sourceIndex","destinationIndex","map","a","find","finalDate","join","concat","unshift","i","onDelete","permissionID","Number","permissionIndex","findIndex","t","splice"],"sources":["C:/Users/Hai Hong/Desktop/EXAI/EXAI/src/@fake-db/apps/permissionsList.js"],"sourcesContent":["import mock from '../mock'\r\n\r\n// ** Utils\r\nimport { paginateArray } from '../utils'\r\n\r\nconst data = {\r\n  permissions: [\r\n    {\r\n      id: 1,\r\n      name: 'Management',\r\n      assignedTo: ['administrator'],\r\n      createdDate: '14 Apr 2021, 8:43 PM'\r\n    },\r\n    {\r\n      id: 2,\r\n      assignedTo: ['administrator'],\r\n      name: 'Manage Billing & Roles',\r\n      createdDate: '16 Sep 2021, 5:20 PM'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Add & Remove Users',\r\n      createdDate: '14 Oct 2021, 10:20 AM',\r\n      assignedTo: ['administrator', 'manager']\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Project Planning',\r\n      createdDate: '14 Oct 2021, 10:20 AM',\r\n      assignedTo: ['administrator', 'user', 'support']\r\n    },\r\n    {\r\n      id: 5,\r\n      name: 'Manage Email Sequences',\r\n      createdDate: '23 Aug 2021, 2:00 PM',\r\n      assignedTo: ['administrator', 'user', 'support']\r\n    },\r\n    {\r\n      id: 6,\r\n      name: 'Client Communication',\r\n      createdDate: '15 Apr 2021, 11:30 AM',\r\n      assignedTo: ['administrator', 'manager']\r\n    },\r\n    {\r\n      id: 7,\r\n      name: 'Only View',\r\n      createdDate: '04 Dec 2021, 8:15 PM',\r\n      assignedTo: ['administrator', 'restricted-user']\r\n    },\r\n    {\r\n      id: 8,\r\n      name: 'Financial Management',\r\n      createdDate: '25 Feb 2021, 10:30 AM',\r\n      assignedTo: ['administrator', 'manager']\r\n    },\r\n    {\r\n      id: 9,\r\n      name: 'Manage Others’ Tasks',\r\n      createdDate: '04 Nov 2021, 11:45 AM',\r\n      assignedTo: ['administrator', 'support']\r\n    }\r\n  ]\r\n}\r\n\r\n// ------------------------------------------------\r\n// GET: Return Permissions List\r\n// ------------------------------------------------\r\nmock.onGet('/apps/permissions/data').reply(config => {\r\n  const { q = '', perPage = 10, page = 1, assignedTo = '' } = config.params\r\n  const queryLowered = q.toLowerCase()\r\n  const filteredData = data.permissions.filter(permission => {\r\n    if (assignedTo !== '') {\r\n      return (\r\n        (permission.name.toLowerCase().includes(queryLowered) ||\r\n          permission.createdDate.toLowerCase().includes(queryLowered)) &&\r\n        permission.assignedTo.includes(assignedTo)\r\n      )\r\n    } else {\r\n      return (\r\n        permission.name.toLowerCase().includes(queryLowered) ||\r\n        permission.createdDate.toLowerCase().includes(queryLowered)\r\n      )\r\n    }\r\n  })\r\n\r\n  return [\r\n    200,\r\n    {\r\n      params: config.params,\r\n      allData: data.permissions,\r\n      total: filteredData.length,\r\n      permissions: paginateArray(filteredData, perPage, page)\r\n    }\r\n  ]\r\n})\r\n\r\n// POST: Add new permission\r\nmock.onPost('/apps/permissions/add-permission').reply(config => {\r\n  // Get permission from post data\r\n  const permission = JSON.parse(config.data).permission\r\n\r\n  const { length } = data.permissions\r\n  let lastIndex = 0\r\n  if (length) {\r\n    lastIndex = data.permissions[length - 1].id\r\n  }\r\n  permission.id = lastIndex + 1\r\n\r\n  permission.assignedTo = ['administrator']\r\n\r\n  const now = new Date()\r\n  const months = now\r\n    .toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric'\r\n    })\r\n    .replace(',', '')\r\n  const time = now.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })\r\n\r\n  const monthsArr = months.split(' ')\r\n  /*eslint-disable */\r\n  const moveElement = (array, sourceIndex, destinationIndex) => {\r\n    return array.map(a =>\r\n      a === sourceIndex\r\n        ? array.find(a => a === destinationIndex)\r\n        : a === destinationIndex\r\n        ? array.find(a => a === sourceIndex)\r\n        : a\r\n    )\r\n  }\r\n\r\n  const finalDate = moveElement(monthsArr, monthsArr[0], monthsArr[1]).join(' ')\r\n\r\n  permission.createdDate = `${finalDate}, ${time}`\r\n\r\n  data.permissions.unshift(permission)\r\n\r\n  return [201, { permission }]\r\n})\r\n\r\nmock.onPost('/apps/permissions/update-permission').reply(config => {\r\n  // Get permission from post data\r\n  const { id, name } = JSON.parse(config.data)\r\n\r\n  data.permissions.find(i => {\r\n    if (i.id === id) {\r\n      i.name = name\r\n    }\r\n  })\r\n\r\n  return [201]\r\n})\r\n\r\n// DELETE: Deletes Permissions\r\nmock.onDelete('/apps/permissions/delete').reply(config => {\r\n  // Get  id from URL\r\n  let permissionID = config.id\r\n\r\n  // Convert Id to number\r\n  permissionID = Number(permissionID)\r\n\r\n  const permissionIndex = data.permissions.findIndex(t => t.id === permissionID)\r\n  data.permissions.splice(permissionIndex, 1)\r\n\r\n  return [200]\r\n})\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}