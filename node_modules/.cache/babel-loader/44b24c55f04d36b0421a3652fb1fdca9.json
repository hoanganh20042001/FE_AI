{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hai Hong\\\\Desktop\\\\EXAI\\\\EXAI\\\\src\\\\views\\\\apps\\\\invoice\\\\add\\\\steps-with-validation\\\\PersonalInfo.js\",\n  _s = $RefreshSig$();\n// // ** React Imports\n// import { Fragment, useState, useEffect } from 'react'\n\n// // ** Third Party Components\n// import Select from 'react-select'\n// import { useForm, Controller } from 'react-hook-form'\n// import { ArrowLeft, ArrowRight } from 'react-feather'\n\n// // ** Utils\n// import { selectThemeColors } from '@utils'\n// import { useSelector, useDispatch } from 'react-redux'\n// // ** Reactstrap Imports\n// import { Label, Row, Col, Button, Form, Input, FormFeedback, CardText, Modal, ModalBody, ModalHeader } from 'reactstrap'\n// import FileUploaderSingle from './FileUploaderSingle'\n// import { getListModelBySoftID } from '@store/action/model'\n// // ** Styles\n// import '@styles/react/libs/react-select/_react-select.scss'\n\n// const defaultValues = {\n//   lastName: '',\n//   firstName: ''\n// }\n\n// const PersonalInfo = ({ stepper, infoExp, changeInfo }) => {\n//   // ** Hooks\n//   const dispatch = useDispatch()\n//   const [checkbox1, setCheckBox1] = useState(true)\n//   const [enable, setEnable] = useState(true)\n\n//   const [displaySelect, setDisplay] = useState(false)\n//   const [displayUpload, setDisplayUpload] = useState('none')\n//   const [display, setDisplayModal] = useState(false)\n//   const toggleModal = () => setDisplayModal(!display)\n//   const [displayTur, setDisplayModalTur] = useState(false)\n//   const toggleModalTur = () => setDisplayModalTur(!displayTur)\n//   const [infoData, setData] = useState({\n//     id: 1,\n//     modelfiletutorial: '',\n//     modeldescription: '',\n//     modelname: '',\n//     modeleventtype: null,\n//   })\n//   // ** Hooks\n//   const {\n//     handleSubmit\n//   } = useForm({ defaultValues })\n//   const dataModel = useSelector((state) => {\n//     return state.model.dataModel\n//   })\n//   const onSubmit = () => {\n//     // if (Object.values(data).every(field => field.length > 0)) {\n//     stepper.next()\n\n//   }\n//   const HandleClick1 = () => {\n//     setCheckBox1(true)\n//     setCheckBox2(false)\n//     setDisplay(false)\n//     setDisplayUpload('none')\n//   }\n//   const HandleClick2 = () => {\n//     setCheckBox1(false)\n//     setCheckBox2(true)\n//     setDisplay(true)\n//     setDisplayUpload('block')\n//   }\n//   const handleSelect = (e) => {\n//     setData(e.value)\n//   }\n//   const ChangeLisModel = (dataDataset) => {\n//     const list = []\n//     dataDataset.map(item => {\n//       list.push({\n//         value: JSON.stringify({\n//           id: item.modelid,\n//           modelfiletutorial: item.modelfiletutorial,\n//           modeldescription: item.modeldescription,\n//           modelname: item.modelname,\n//           modeleventtype: item.modeleventtype,\n//           default_json_Paramsconfigs: item.default_json_Paramsconfigs\n//         }),\n//         label: item.modelname\n//       })\n//     })\n//     return list\n//   }\n//   const handleOnChangeData = (value, pop) => {\n//     const infoModel = JSON.parse(value)\n//     setData(infoModel)\n//     setEnable(false)\n//     changeInfo(infoModel.id, pop)\n//     changeInfo(infoModel.default_json_Paramsconfigs, 'paramsconfigs_json')\n//   }\n//   useEffect(() => {\n//     dispatch(getListModelBySoftID({\n//       pageSize: 10,\n//       page: 1,\n//       id_softlib: infoExp.expsoftwarelibid\n//     }))\n\n//   }, [dispatch, infoExp.expsoftwarelibid])\n\n//   return (\n//     <Fragment>\n//       <div className='content-header'>\n\n//         <Row>\n//           <Col className='p-0' xl='8'>\n//             <div className='content-header'>\n//               <h5 className='mb-0'>Chọn mô hình <span style={{color: 'red'}}>*</span></h5>\n//             </div>\n//           </Col>\n//         </Row>\n//       </div>\n//       <Form onSubmit={handleSubmit(onSubmit)}>\n//         <Row>\n//           <Col md='8' className='mb-1'>\n//             <Select\n//               isMulti={false}\n//               isClearable={false}\n//               theme={selectThemeColors}\n//               placeholder={'Chọn mô hình'}\n//               id={`language`}\n//               options={ChangeLisModel(dataModel)}\n//               className='react-select'\n//               classNamePrefix='select'\n//               isDisabled={displaySelect}\n//               onChange={(e) => handleOnChangeData(e.value, \"expmodelid\")}\n//             />\n//           </Col>\n//         </Row>\n//         <Row>\n//           <Col className='p-0' xl='4' style={{ marginLeft: '15px' }}>\n//             <h6 className='mb-2'>Thông tin mô hình: {infoData.modelname}</h6>\n//             <CardText className='mb-25'>Loại: {infoData.modeleventtype}</CardText>\n//             <CardText className='mb-25' style={{ color: 'blue', cursor: infoData.modelname !== '' ? 'pointer' : 'none' }} onClick={e => { if (infoData.modelname !== '')  { setDisplayModal(e) } }}>Mô tả</CardText>\n//             <CardText className='mb-25' style={{ color: 'blue', cursor: infoData.modelname !== '' ? 'pointer' : 'none' }} onClick={e => { if (infoData.modelname !== '')  { setDisplayModalTur(e) } }}>Hướng dẫn cấu hình</CardText>\n//           </Col>\n//         </Row>\n//         <div className='d-flex justify-content-between'>\n//           <Button type='button' color='primary' className='btn-prev' onClick={() => stepper.previous()}>\n//             <ArrowLeft size={14} className='align-middle me-sm-25 me-0'></ArrowLeft>\n//             <span className='align-middle d-sm-inline-block d-none'>Previous</span>\n//           </Button>\n//           <Button className='btn' style={{ marginRight: '15px' }} onClick={(e) => history.back()}>\n//             <span className='align-middle d-sm-inline-block d-none'>Hủy</span>\n//           </Button>\n//           <Button type='submit' color='primary' className='btn-next' disabled={enable}>\n//             <span className='align-middle d-sm-inline-block d-none' >Next</span>\n//             <ArrowRight size={14} className='align-middle ms-sm-25 ms-0'></ArrowRight>\n//           </Button>\n//         </div>\n//       </Form>\n//       <Modal isOpen={display} toggle={toggleModal} size='lg'>\n//         <ModalHeader>THÔNG TIN MÔ TẢ</ModalHeader>\n//         <ModalBody>\n//           {infoData.modeldescription}\n//         </ModalBody>\n//       </Modal>\n//       <Modal isOpen={displayTur} toggle={toggleModalTur} size='lg'>\n//         <ModalHeader>Hướng dẫn cấu hình</ModalHeader>\n//         <ModalBody>\n//           {infoData.modelfiletutorial}\n//         </ModalBody>\n//       </Modal>\n//     </Fragment>\n//   )\n// }\n\n// export default PersonalInfo\nimport React, { Fragment, useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport { useForm } from 'react-hook-form';\nimport { ArrowLeft, ArrowRight } from 'react-feather';\nimport { Label, Row, Col, Button, Form, FormFeedback, CardText, Modal, ModalBody, ModalHeader } from 'reactstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getListModelBySoftID } from '@store/action/model';\nimport { selectThemeColors } from '@utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PersonalInfo = _ref => {\n  _s();\n  let {\n    stepper,\n    infoExp,\n    changeInfo\n  } = _ref;\n  const dispatch = useDispatch();\n  const [isDropdownSelected, setIsDropdownSelected] = useState(false);\n  const [enable, setEnable] = useState(true);\n  const [displaySelect, setDisplay] = useState(false);\n  const [infoData, setData] = useState({\n    id: 1,\n    modelfiletutorial: '',\n    modeldescription: '',\n    modelname: '',\n    modeleventtype: null\n  });\n  const dataModel = useSelector(state => state.model.dataModel);\n  const {\n    handleSubmit\n  } = useForm();\n  const onSubmit = () => {\n    if (!isDropdownSelected) {\n      alert(\"Vui lòng chọn một mô hình trước khi tiếp tục.\");\n      return;\n    }\n    stepper.next();\n  };\n  const handleSelect = selectedOption => {\n    if (selectedOption) {\n      setIsDropdownSelected(true);\n      setData(selectedOption.value);\n      setEnable(false);\n      changeInfo(selectedOption.value.id, \"expmodelid\");\n      changeInfo(selectedOption.value.default_json_Paramsconfigs, \"paramsconfigs_json\");\n    } else {\n      setIsDropdownSelected(false);\n    }\n  };\n  const ChangeListModel = dataDataset => {\n    return dataDataset.map(item => ({\n      value: {\n        id: item.modelid,\n        modelfiletutorial: item.modelfiletutorial,\n        modeldescription: item.modeldescription,\n        modelname: item.modelname,\n        modeleventtype: item.modeleventtype,\n        default_json_Paramsconfigs: item.default_json_Paramsconfigs\n      },\n      label: item.modelname\n    }));\n  };\n  useEffect(() => {\n    dispatch(getListModelBySoftID({\n      pageSize: 10,\n      page: 1,\n      id_softlib: infoExp.expsoftwarelibid\n    }));\n  }, [dispatch, infoExp.expsoftwarelibid]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-header\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          className: \"p-0\",\n          xl: \"8\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mb-0\",\n              children: [\"Ch\\u1ECDn m\\xF4 h\\xECnh \", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'red'\n                },\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"8\",\n          className: \"mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Select, {\n            isClearable: true,\n            theme: selectThemeColors,\n            placeholder: 'Chọn mô hình',\n            id: \"language\",\n            options: ChangeListModel(dataModel),\n            className: \"react-select\",\n            classNamePrefix: \"select\",\n            isDisabled: displaySelect,\n            onChange: handleSelect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormFeedback, {\n            children: \"Vui l\\xF2ng ch\\u1ECDn m\\u1ED9t m\\xF4 h\\xECnh.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          color: \"primary\",\n          className: \"btn-prev\",\n          onClick: () => stepper.previous(),\n          children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n            size: 14,\n            className: \"align-middle me-sm-25 me-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"align-middle d-sm-inline-block d-none\",\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          color: \"secondary\",\n          className: \"btn\",\n          style: {\n            marginRight: '15px'\n          },\n          onClick: () => stepper.previous(),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"align-middle d-sm-inline-block d-none\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          color: \"primary\",\n          className: \"btn-next\",\n          disabled: enable,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"align-middle d-sm-inline-block d-none\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ArrowRight, {\n            size: 14,\n            className: \"align-middle ms-sm-25 ms-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 5\n  }, this);\n};\n_s(PersonalInfo, \"1KHjth7nT6wiGvcXme0+cyJdIO8=\", false, function () {\n  return [useDispatch, useSelector, useForm];\n});\n_c = PersonalInfo;\nexport default PersonalInfo;\nvar _c;\n$RefreshReg$(_c, \"PersonalInfo\");","map":{"version":3,"names":["React","Fragment","useState","useEffect","Select","useForm","ArrowLeft","ArrowRight","Label","Row","Col","Button","Form","FormFeedback","CardText","Modal","ModalBody","ModalHeader","useSelector","useDispatch","getListModelBySoftID","selectThemeColors","jsxDEV","_jsxDEV","PersonalInfo","_ref","_s","stepper","infoExp","changeInfo","dispatch","isDropdownSelected","setIsDropdownSelected","enable","setEnable","displaySelect","setDisplay","infoData","setData","id","modelfiletutorial","modeldescription","modelname","modeleventtype","dataModel","state","model","handleSubmit","onSubmit","alert","next","handleSelect","selectedOption","value","default_json_Paramsconfigs","ChangeListModel","dataDataset","map","item","modelid","label","pageSize","page","id_softlib","expsoftwarelibid","children","className","xl","style","color","fileName","_jsxFileName","lineNumber","columnNumber","md","isClearable","theme","placeholder","options","classNamePrefix","isDisabled","onChange","type","onClick","previous","size","marginRight","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Hai Hong/Desktop/EXAI/EXAI/src/views/apps/invoice/add/steps-with-validation/PersonalInfo.js"],"sourcesContent":["// // ** React Imports\r\n// import { Fragment, useState, useEffect } from 'react'\r\n\r\n// // ** Third Party Components\r\n// import Select from 'react-select'\r\n// import { useForm, Controller } from 'react-hook-form'\r\n// import { ArrowLeft, ArrowRight } from 'react-feather'\r\n\r\n// // ** Utils\r\n// import { selectThemeColors } from '@utils'\r\n// import { useSelector, useDispatch } from 'react-redux'\r\n// // ** Reactstrap Imports\r\n// import { Label, Row, Col, Button, Form, Input, FormFeedback, CardText, Modal, ModalBody, ModalHeader } from 'reactstrap'\r\n// import FileUploaderSingle from './FileUploaderSingle'\r\n// import { getListModelBySoftID } from '@store/action/model'\r\n// // ** Styles\r\n// import '@styles/react/libs/react-select/_react-select.scss'\r\n\r\n// const defaultValues = {\r\n//   lastName: '',\r\n//   firstName: ''\r\n// }\r\n\r\n// const PersonalInfo = ({ stepper, infoExp, changeInfo }) => {\r\n//   // ** Hooks\r\n//   const dispatch = useDispatch()\r\n//   const [checkbox1, setCheckBox1] = useState(true)\r\n//   const [enable, setEnable] = useState(true)\r\n\r\n//   const [displaySelect, setDisplay] = useState(false)\r\n//   const [displayUpload, setDisplayUpload] = useState('none')\r\n//   const [display, setDisplayModal] = useState(false)\r\n//   const toggleModal = () => setDisplayModal(!display)\r\n//   const [displayTur, setDisplayModalTur] = useState(false)\r\n//   const toggleModalTur = () => setDisplayModalTur(!displayTur)\r\n//   const [infoData, setData] = useState({\r\n//     id: 1,\r\n//     modelfiletutorial: '',\r\n//     modeldescription: '',\r\n//     modelname: '',\r\n//     modeleventtype: null,\r\n//   })\r\n//   // ** Hooks\r\n//   const {\r\n//     handleSubmit\r\n//   } = useForm({ defaultValues })\r\n//   const dataModel = useSelector((state) => {\r\n//     return state.model.dataModel\r\n//   })\r\n//   const onSubmit = () => {\r\n//     // if (Object.values(data).every(field => field.length > 0)) {\r\n//     stepper.next()\r\n\r\n//   }\r\n//   const HandleClick1 = () => {\r\n//     setCheckBox1(true)\r\n//     setCheckBox2(false)\r\n//     setDisplay(false)\r\n//     setDisplayUpload('none')\r\n//   }\r\n//   const HandleClick2 = () => {\r\n//     setCheckBox1(false)\r\n//     setCheckBox2(true)\r\n//     setDisplay(true)\r\n//     setDisplayUpload('block')\r\n//   }\r\n//   const handleSelect = (e) => {\r\n//     setData(e.value)\r\n//   }\r\n//   const ChangeLisModel = (dataDataset) => {\r\n//     const list = []\r\n//     dataDataset.map(item => {\r\n//       list.push({\r\n//         value: JSON.stringify({\r\n//           id: item.modelid,\r\n//           modelfiletutorial: item.modelfiletutorial,\r\n//           modeldescription: item.modeldescription,\r\n//           modelname: item.modelname,\r\n//           modeleventtype: item.modeleventtype,\r\n//           default_json_Paramsconfigs: item.default_json_Paramsconfigs\r\n//         }),\r\n//         label: item.modelname\r\n//       })\r\n//     })\r\n//     return list\r\n//   }\r\n//   const handleOnChangeData = (value, pop) => {\r\n//     const infoModel = JSON.parse(value)\r\n//     setData(infoModel)\r\n//     setEnable(false)\r\n//     changeInfo(infoModel.id, pop)\r\n//     changeInfo(infoModel.default_json_Paramsconfigs, 'paramsconfigs_json')\r\n//   }\r\n//   useEffect(() => {\r\n//     dispatch(getListModelBySoftID({\r\n//       pageSize: 10,\r\n//       page: 1,\r\n//       id_softlib: infoExp.expsoftwarelibid\r\n//     }))\r\n\r\n//   }, [dispatch, infoExp.expsoftwarelibid])\r\n\r\n//   return (\r\n//     <Fragment>\r\n//       <div className='content-header'>\r\n\r\n//         <Row>\r\n//           <Col className='p-0' xl='8'>\r\n//             <div className='content-header'>\r\n//               <h5 className='mb-0'>Chọn mô hình <span style={{color: 'red'}}>*</span></h5>\r\n//             </div>\r\n//           </Col>\r\n//         </Row>\r\n//       </div>\r\n//       <Form onSubmit={handleSubmit(onSubmit)}>\r\n//         <Row>\r\n//           <Col md='8' className='mb-1'>\r\n//             <Select\r\n//               isMulti={false}\r\n//               isClearable={false}\r\n//               theme={selectThemeColors}\r\n//               placeholder={'Chọn mô hình'}\r\n//               id={`language`}\r\n//               options={ChangeLisModel(dataModel)}\r\n//               className='react-select'\r\n//               classNamePrefix='select'\r\n//               isDisabled={displaySelect}\r\n//               onChange={(e) => handleOnChangeData(e.value, \"expmodelid\")}\r\n//             />\r\n//           </Col>\r\n//         </Row>\r\n//         <Row>\r\n//           <Col className='p-0' xl='4' style={{ marginLeft: '15px' }}>\r\n//             <h6 className='mb-2'>Thông tin mô hình: {infoData.modelname}</h6>\r\n//             <CardText className='mb-25'>Loại: {infoData.modeleventtype}</CardText>\r\n//             <CardText className='mb-25' style={{ color: 'blue', cursor: infoData.modelname !== '' ? 'pointer' : 'none' }} onClick={e => { if (infoData.modelname !== '')  { setDisplayModal(e) } }}>Mô tả</CardText>\r\n//             <CardText className='mb-25' style={{ color: 'blue', cursor: infoData.modelname !== '' ? 'pointer' : 'none' }} onClick={e => { if (infoData.modelname !== '')  { setDisplayModalTur(e) } }}>Hướng dẫn cấu hình</CardText>\r\n//           </Col>\r\n//         </Row>\r\n//         <div className='d-flex justify-content-between'>\r\n//           <Button type='button' color='primary' className='btn-prev' onClick={() => stepper.previous()}>\r\n//             <ArrowLeft size={14} className='align-middle me-sm-25 me-0'></ArrowLeft>\r\n//             <span className='align-middle d-sm-inline-block d-none'>Previous</span>\r\n//           </Button>\r\n//           <Button className='btn' style={{ marginRight: '15px' }} onClick={(e) => history.back()}>\r\n//             <span className='align-middle d-sm-inline-block d-none'>Hủy</span>\r\n//           </Button>\r\n//           <Button type='submit' color='primary' className='btn-next' disabled={enable}>\r\n//             <span className='align-middle d-sm-inline-block d-none' >Next</span>\r\n//             <ArrowRight size={14} className='align-middle ms-sm-25 ms-0'></ArrowRight>\r\n//           </Button>\r\n//         </div>\r\n//       </Form>\r\n//       <Modal isOpen={display} toggle={toggleModal} size='lg'>\r\n//         <ModalHeader>THÔNG TIN MÔ TẢ</ModalHeader>\r\n//         <ModalBody>\r\n//           {infoData.modeldescription}\r\n//         </ModalBody>\r\n//       </Modal>\r\n//       <Modal isOpen={displayTur} toggle={toggleModalTur} size='lg'>\r\n//         <ModalHeader>Hướng dẫn cấu hình</ModalHeader>\r\n//         <ModalBody>\r\n//           {infoData.modelfiletutorial}\r\n//         </ModalBody>\r\n//       </Modal>\r\n//     </Fragment>\r\n//   )\r\n// }\r\n\r\n// export default PersonalInfo\r\nimport React, { Fragment, useState, useEffect } from 'react'\r\nimport Select from 'react-select'\r\nimport { useForm } from 'react-hook-form'\r\nimport { ArrowLeft, ArrowRight } from 'react-feather'\r\nimport { Label, Row, Col, Button, Form, FormFeedback, CardText, Modal, ModalBody, ModalHeader } from 'reactstrap'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getListModelBySoftID } from '@store/action/model'\r\nimport { selectThemeColors } from '@utils'\r\n\r\nconst PersonalInfo = ({ stepper, infoExp, changeInfo }) => {\r\n  const dispatch = useDispatch()\r\n  const [isDropdownSelected, setIsDropdownSelected] = useState(false)\r\n  const [enable, setEnable] = useState(true)\r\n  const [displaySelect, setDisplay] = useState(false)\r\n  const [infoData, setData] = useState({\r\n    id: 1,\r\n    modelfiletutorial: '',\r\n    modeldescription: '',\r\n    modelname: '',\r\n    modeleventtype: null,\r\n  })\r\n\r\n  const dataModel = useSelector((state) => state.model.dataModel)\r\n  const { handleSubmit } = useForm()\r\n\r\n  const onSubmit = () => {\r\n    if (!isDropdownSelected) {\r\n      alert(\"Vui lòng chọn một mô hình trước khi tiếp tục.\")\r\n      return\r\n    }\r\n    stepper.next()\r\n  }\r\n\r\n  const handleSelect = (selectedOption) => {\r\n    if (selectedOption) {\r\n      setIsDropdownSelected(true)\r\n      setData(selectedOption.value)\r\n      setEnable(false)\r\n      changeInfo(selectedOption.value.id, \"expmodelid\")\r\n      changeInfo(selectedOption.value.default_json_Paramsconfigs, \"paramsconfigs_json\")\r\n    } else {\r\n      setIsDropdownSelected(false)\r\n    }\r\n  }\r\n\r\n  const ChangeListModel = (dataDataset) => {\r\n    return dataDataset.map((item) => ({\r\n      value: {\r\n        id: item.modelid,\r\n        modelfiletutorial: item.modelfiletutorial,\r\n        modeldescription: item.modeldescription,\r\n        modelname: item.modelname,\r\n        modeleventtype: item.modeleventtype,\r\n        default_json_Paramsconfigs: item.default_json_Paramsconfigs\r\n      },\r\n      label: item.modelname\r\n    }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getListModelBySoftID({\r\n      pageSize: 10,\r\n      page: 1,\r\n      id_softlib: infoExp.expsoftwarelibid\r\n    }))\r\n  }, [dispatch, infoExp.expsoftwarelibid])\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='content-header'>\r\n        <Row>\r\n          <Col className='p-0' xl='8'>\r\n            <div className='content-header'>\r\n              <h5 className='mb-0'>Chọn mô hình <span style={{color: 'red'}}>*</span></h5>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Row>\r\n          <Col md='8' className='mb-1'>\r\n            <Select\r\n              isClearable\r\n              theme={selectThemeColors}\r\n              placeholder={'Chọn mô hình'}\r\n              id={`language`}\r\n              options={ChangeListModel(dataModel)}\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n              isDisabled={displaySelect}\r\n              onChange={handleSelect}\r\n            />\r\n            <FormFeedback>Vui lòng chọn một mô hình.</FormFeedback>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          {/* Phần hiển thị thông tin mô hình */}\r\n        </Row>\r\n        <div className='d-flex justify-content-between'>\r\n          <Button type='button' color='primary' className='btn-prev' onClick={() => stepper.previous()}>\r\n            <ArrowLeft size={14} className='align-middle me-sm-25 me-0'></ArrowLeft>\r\n            <span className='align-middle d-sm-inline-block d-none'>Previous</span>\r\n          </Button>\r\n          <Button type='button' color='secondary' className='btn' style={{ marginRight: '15px' }} onClick={() => stepper.previous()}>\r\n            <span className='align-middle d-sm-inline-block d-none'>Cancel</span>\r\n          </Button>\r\n          <Button type='submit' color='primary' className='btn-next' disabled={enable}>\r\n            <span className='align-middle d-sm-inline-block d-none' >Next</span>\r\n            <ArrowRight size={14} className='align-middle ms-sm-25 ms-0'></ArrowRight>\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n      {/* Modals */}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default PersonalInfo\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC5D,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,SAAS,EAAEC,UAAU,QAAQ,eAAe;AACrD,SAASC,KAAK,EAAEC,GAAG,EAAEC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEC,YAAY,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,SAAS,EAAEC,WAAW,QAAQ,YAAY;AACjH,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,oBAAoB,QAAQ,qBAAqB;AAC1D,SAASC,iBAAiB,QAAQ,QAAQ;AAAA,SAAAC,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","ignoreList":[]},"metadata":{},"sourceType":"module"}