{"ast":null,"code":"var _s = $RefreshSig$();\n// ** Store Imports\nimport { handleNavbarColor } from '@store/reducers/layout';\nimport { useDispatch, useSelector } from 'react-redux';\nexport const useNavbarColor = () => {\n  _s();\n  // ** Hooks\n  const dispatch = useDispatch();\n  const store = useSelector(state => state.layout);\n\n  // ** Return a wrapped version of useState's setter function\n  const setNavbarColor = value => {\n    dispatch(handleNavbarColor(value));\n  };\n  return {\n    navbarColor: store.navbarColor,\n    setNavbarColor\n  };\n};\n_s(useNavbarColor, \"zw25nIk3XDUGgPuAbVy/YKvKJS8=\", false, function () {\n  return [useDispatch, useSelector];\n});","map":{"version":3,"names":["handleNavbarColor","useDispatch","useSelector","useNavbarColor","_s","dispatch","store","state","layout","setNavbarColor","value","navbarColor"],"sources":["E:/EXAI/EX-AI/src/utility/hooks/useNavbarColor.js"],"sourcesContent":["// ** Store Imports\nimport { handleNavbarColor } from '@store/reducers/layout'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport const useNavbarColor = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.layout)\n\n  // ** Return a wrapped version of useState's setter function\n  const setNavbarColor = value => {\n    dispatch(handleNavbarColor(value))\n  }\n\n  return { navbarColor: store.navbarColor, setNavbarColor }\n}\n"],"mappings":";AAAA;AACA,SAASA,iBAAiB,QAAQ,wBAAwB;AAC1D,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC;EACA,MAAMC,QAAQ,GAAGJ,WAAW,CAAC,CAAC;EAC9B,MAAMK,KAAK,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,MAAM,CAAC;;EAEhD;EACA,MAAMC,cAAc,GAAGC,KAAK,IAAI;IAC9BL,QAAQ,CAACL,iBAAiB,CAACU,KAAK,CAAC,CAAC;EACpC,CAAC;EAED,OAAO;IAAEC,WAAW,EAAEL,KAAK,CAACK,WAAW;IAAEF;EAAe,CAAC;AAC3D,CAAC;AAAAL,EAAA,CAXYD,cAAc;EAAA,QAERF,WAAW,EACdC,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}