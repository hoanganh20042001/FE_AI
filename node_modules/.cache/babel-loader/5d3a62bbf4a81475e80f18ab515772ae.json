{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hai Hong\\\\Desktop\\\\EXAI\\\\EXAI\\\\src\\\\views\\\\apps\\\\roles-permissions\\\\permissions\\\\columns.js\";\n// ** React Imports\nimport { Link } from 'react-router-dom';\n\n// ** Third Party Components\nimport classnames from 'classnames';\n\n// ** Reactstrap Imports\nimport { Badge } from 'reactstrap';\n\n// ** Vars\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colors = {\n  support: 'light-info',\n  user: 'light-success',\n  manager: 'light-warning',\n  administrator: 'light-primary',\n  'restricted-user': 'light-danger'\n};\nexport const columns = [{\n  name: 'Name',\n  sortable: true,\n  minWidth: '350px',\n  cell: _ref => {\n    let {\n      name\n    } = _ref;\n    return name;\n  },\n  selector: row => row.name\n}, {\n  sortable: true,\n  minWidth: '350px',\n  name: 'Assigned To',\n  cell: _ref2 => {\n    let {\n      assignedTo\n    } = _ref2;\n    if (assignedTo) {\n      return assignedTo.map((assignee, index) => {\n        const isLastBadge = assignedTo[assignedTo.length - 1] === index;\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/apps/user/list\",\n          className: classnames({\n            'me-50': !isLastBadge\n          }),\n          children: /*#__PURE__*/_jsxDEV(Badge, {\n            pill: true,\n            color: colors[assignee],\n            className: \"text-capitalize\",\n            children: assignee.replace('-', ' ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)\n        }, \"\".concat(assignee, \"-\").concat(index), false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this);\n      });\n    } else {\n      return null;\n    }\n  }\n}, {\n  sortable: true,\n  minWidth: '350px',\n  name: 'Created Date',\n  selector: row => row.createdDate,\n  cell: _ref3 => {\n    let {\n      createdDate\n    } = _ref3;\n    return createdDate;\n  },\n  sortFunction: (rowA, rowB) => {\n    return new Date(rowB.createdDate) - new Date(rowA.createdDate);\n  }\n}];","map":{"version":3,"names":["Link","classnames","Badge","jsxDEV","_jsxDEV","colors","support","user","manager","administrator","columns","name","sortable","minWidth","cell","_ref","selector","row","_ref2","assignedTo","map","assignee","index","isLastBadge","length","to","className","children","pill","color","replace","fileName","_jsxFileName","lineNumber","columnNumber","concat","createdDate","_ref3","sortFunction","rowA","rowB","Date"],"sources":["C:/Users/Hai Hong/Desktop/EXAI/EXAI/src/views/apps/roles-permissions/permissions/columns.js"],"sourcesContent":["// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\n// ** Vars\r\nconst colors = {\r\n  support: 'light-info',\r\n  user: 'light-success',\r\n  manager: 'light-warning',\r\n  administrator: 'light-primary',\r\n  'restricted-user': 'light-danger'\r\n}\r\n\r\nexport const columns = [\r\n  {\r\n    name: 'Name',\r\n    sortable: true,\r\n    minWidth: '350px',\r\n    cell: ({ name }) => name,\r\n    selector: row => row.name\r\n  },\r\n  {\r\n    sortable: true,\r\n    minWidth: '350px',\r\n    name: 'Assigned To',\r\n    cell: ({ assignedTo }) => {\r\n      if (assignedTo) {\r\n        return assignedTo.map((assignee, index) => {\r\n          const isLastBadge = assignedTo[assignedTo.length - 1] === index\r\n          return (\r\n            <Link key={`${assignee}-${index}`} to='/apps/user/list' className={classnames({ 'me-50': !isLastBadge })}>\r\n              <Badge pill color={colors[assignee]} className='text-capitalize'>\r\n                {assignee.replace('-', ' ')}\r\n              </Badge>\r\n            </Link>\r\n          )\r\n        })\r\n      } else {\r\n        return null\r\n      }\r\n    }\r\n  },\r\n  {\r\n    sortable: true,\r\n    minWidth: '350px',\r\n    name: 'Created Date',\r\n    selector: row => row.createdDate,\r\n    cell: ({ createdDate }) => createdDate,\r\n    sortFunction: (rowA, rowB) => {\r\n      return new Date(rowB.createdDate) - new Date(rowA.createdDate)\r\n    }\r\n  }\r\n]\r\n"],"mappings":";AAAA;AACA,SAASA,IAAI,QAAQ,kBAAkB;;AAEvC;AACA,OAAOC,UAAU,MAAM,YAAY;;AAEnC;AACA,SAASC,KAAK,QAAQ,YAAY;;AAElC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GAAG;EACbC,OAAO,EAAE,YAAY;EACrBC,IAAI,EAAE,eAAe;EACrBC,OAAO,EAAE,eAAe;EACxBC,aAAa,EAAE,eAAe;EAC9B,iBAAiB,EAAE;AACrB,CAAC;AAED,OAAO,MAAMC,OAAO,GAAG,CACrB;EACEC,IAAI,EAAE,MAAM;EACZC,QAAQ,EAAE,IAAI;EACdC,QAAQ,EAAE,OAAO;EACjBC,IAAI,EAAEC,IAAA;IAAA,IAAC;MAAEJ;IAAK,CAAC,GAAAI,IAAA;IAAA,OAAKJ,IAAI;EAAA;EACxBK,QAAQ,EAAEC,GAAG,IAAIA,GAAG,CAACN;AACvB,CAAC,EACD;EACEC,QAAQ,EAAE,IAAI;EACdC,QAAQ,EAAE,OAAO;EACjBF,IAAI,EAAE,aAAa;EACnBG,IAAI,EAAEI,KAAA,IAAoB;IAAA,IAAnB;MAAEC;IAAW,CAAC,GAAAD,KAAA;IACnB,IAAIC,UAAU,EAAE;MACd,OAAOA,UAAU,CAACC,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAK;QACzC,MAAMC,WAAW,GAAGJ,UAAU,CAACA,UAAU,CAACK,MAAM,GAAG,CAAC,CAAC,KAAKF,KAAK;QAC/D,oBACElB,OAAA,CAACJ,IAAI;UAA8ByB,EAAE,EAAC,iBAAiB;UAACC,SAAS,EAAEzB,UAAU,CAAC;YAAE,OAAO,EAAE,CAACsB;UAAY,CAAC,CAAE;UAAAI,QAAA,eACvGvB,OAAA,CAACF,KAAK;YAAC0B,IAAI;YAACC,KAAK,EAAExB,MAAM,CAACgB,QAAQ,CAAE;YAACK,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAC7DN,QAAQ,CAACS,OAAO,CAAC,GAAG,EAAE,GAAG;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB;QAAC,MAAAC,MAAA,CAHId,QAAQ,OAAAc,MAAA,CAAIb,KAAK;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIzB,CAAC;MAEX,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,OAAO,IAAI;IACb;EACF;AACF,CAAC,EACD;EACEtB,QAAQ,EAAE,IAAI;EACdC,QAAQ,EAAE,OAAO;EACjBF,IAAI,EAAE,cAAc;EACpBK,QAAQ,EAAEC,GAAG,IAAIA,GAAG,CAACmB,WAAW;EAChCtB,IAAI,EAAEuB,KAAA;IAAA,IAAC;MAAED;IAAY,CAAC,GAAAC,KAAA;IAAA,OAAKD,WAAW;EAAA;EACtCE,YAAY,EAAEA,CAACC,IAAI,EAAEC,IAAI,KAAK;IAC5B,OAAO,IAAIC,IAAI,CAACD,IAAI,CAACJ,WAAW,CAAC,GAAG,IAAIK,IAAI,CAACF,IAAI,CAACH,WAAW,CAAC;EAChE;AACF,CAAC,CACF","ignoreList":[]},"metadata":{},"sourceType":"module"}