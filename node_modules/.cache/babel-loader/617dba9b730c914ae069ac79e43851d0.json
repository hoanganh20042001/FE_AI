{"ast":null,"code":"// ** Returns paginated array\nexport const paginateArray = (array, perPage, page) => array.slice((page - 1) * perPage, page * perPage);\n\n// ** Returns sorted array\nexport const sortCompare = key => (a, b) => {\n  const fieldA = a[key];\n  const fieldB = b[key];\n  let comparison = 0;\n  if (fieldA > fieldB) {\n    comparison = 1;\n  } else if (fieldA < fieldB) {\n    comparison = -1;\n  }\n  return comparison;\n};\n\n// ** Returns number range\nexport const getRandomInt = (min, max) => {\n  if (min > max) {\n    const temp = max;\n    /* eslint-disable no-param-reassign */\n    max = min;\n    min = temp;\n    /* eslint-enable */\n  }\n  if (min <= 0) {\n    return Math.floor(Math.random() * (max + Math.abs(min) + 1)) + min;\n  }\n  return Math.floor(Math.random() * max) + min;\n};\n\n// ** Returns random date\nexport const randomDate = (start, end) => {\n  const diff = end.getTime() - start.getTime();\n  const newDiff = diff * Math.random();\n  const date = new Date(start.getTime() + newDiff);\n  return date;\n};","map":{"version":3,"names":["paginateArray","array","perPage","page","slice","sortCompare","key","a","b","fieldA","fieldB","comparison","getRandomInt","min","max","temp","Math","floor","random","abs","randomDate","start","end","diff","getTime","newDiff","date","Date"],"sources":["C:/Users/Hai Hong/Desktop/EXAI/EXAI/src/@fake-db/utils.js"],"sourcesContent":["// ** Returns paginated array\r\nexport const paginateArray = (array, perPage, page) => array.slice((page - 1) * perPage, page * perPage)\r\n\r\n// ** Returns sorted array\r\nexport const sortCompare = key => (a, b) => {\r\n  const fieldA = a[key]\r\n  const fieldB = b[key]\r\n\r\n  let comparison = 0\r\n  if (fieldA > fieldB) {\r\n    comparison = 1\r\n  } else if (fieldA < fieldB) {\r\n    comparison = -1\r\n  }\r\n  return comparison\r\n}\r\n\r\n// ** Returns number range\r\nexport const getRandomInt = (min, max) => {\r\n  if (min > max) {\r\n    const temp = max\r\n    /* eslint-disable no-param-reassign */\r\n    max = min\r\n    min = temp\r\n    /* eslint-enable */\r\n  }\r\n\r\n  if (min <= 0) {\r\n    return Math.floor(Math.random() * (max + Math.abs(min) + 1)) + min\r\n  }\r\n  return Math.floor(Math.random() * max) + min\r\n}\r\n\r\n// ** Returns random date\r\nexport const randomDate = (start, end) => {\r\n  const diff = end.getTime() - start.getTime()\r\n  const newDiff = diff * Math.random()\r\n  const date = new Date(start.getTime() + newDiff)\r\n  return date\r\n}\r\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,aAAa,GAAGA,CAACC,KAAK,EAAEC,OAAO,EAAEC,IAAI,KAAKF,KAAK,CAACG,KAAK,CAAC,CAACD,IAAI,GAAG,CAAC,IAAID,OAAO,EAAEC,IAAI,GAAGD,OAAO,CAAC;;AAExG;AACA,OAAO,MAAMG,WAAW,GAAGC,GAAG,IAAI,CAACC,CAAC,EAAEC,CAAC,KAAK;EAC1C,MAAMC,MAAM,GAAGF,CAAC,CAACD,GAAG,CAAC;EACrB,MAAMI,MAAM,GAAGF,CAAC,CAACF,GAAG,CAAC;EAErB,IAAIK,UAAU,GAAG,CAAC;EAClB,IAAIF,MAAM,GAAGC,MAAM,EAAE;IACnBC,UAAU,GAAG,CAAC;EAChB,CAAC,MAAM,IAAIF,MAAM,GAAGC,MAAM,EAAE;IAC1BC,UAAU,GAAG,CAAC,CAAC;EACjB;EACA,OAAOA,UAAU;AACnB,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAK;EACxC,IAAID,GAAG,GAAGC,GAAG,EAAE;IACb,MAAMC,IAAI,GAAGD,GAAG;IAChB;IACAA,GAAG,GAAGD,GAAG;IACTA,GAAG,GAAGE,IAAI;IACV;EACF;EAEA,IAAIF,GAAG,IAAI,CAAC,EAAE;IACZ,OAAOG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIJ,GAAG,GAAGE,IAAI,CAACG,GAAG,CAACN,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG;EACpE;EACA,OAAOG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGJ,GAAG,CAAC,GAAGD,GAAG;AAC9C,CAAC;;AAED;AACA,OAAO,MAAMO,UAAU,GAAGA,CAACC,KAAK,EAAEC,GAAG,KAAK;EACxC,MAAMC,IAAI,GAAGD,GAAG,CAACE,OAAO,CAAC,CAAC,GAAGH,KAAK,CAACG,OAAO,CAAC,CAAC;EAC5C,MAAMC,OAAO,GAAGF,IAAI,GAAGP,IAAI,CAACE,MAAM,CAAC,CAAC;EACpC,MAAMQ,IAAI,GAAG,IAAIC,IAAI,CAACN,KAAK,CAACG,OAAO,CAAC,CAAC,GAAGC,OAAO,CAAC;EAChD,OAAOC,IAAI;AACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}