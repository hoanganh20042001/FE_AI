{"ast":null,"code":"var _jsxFileName = \"E:\\\\EXAI\\\\EX-AI\\\\src\\\\views\\\\components\\\\modal\\\\ModalThemes.js\",\n  _s = $RefreshSig$();\n// ** React Imports\nimport { useState } from 'react';\n\n// ** Reactstrap Imports\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalConfig = [{\n  id: 1,\n  title: 'Primary',\n  modalColor: 'modal-primary',\n  btnColor: 'primary'\n}, {\n  id: 2,\n  title: 'Secondary',\n  modalColor: 'modal-secondary',\n  btnColor: 'secondary'\n}, {\n  id: 3,\n  title: 'Success',\n  modalColor: 'modal-success',\n  btnColor: 'success'\n}, {\n  id: 4,\n  title: 'Danger',\n  modalColor: 'modal-danger',\n  btnColor: 'danger'\n}, {\n  id: 5,\n  title: 'Warning',\n  modalColor: 'modal-warning',\n  btnColor: 'warning'\n}, {\n  id: 6,\n  title: 'Info',\n  modalColor: 'modal-info',\n  btnColor: 'info'\n}, {\n  id: 7,\n  title: 'Dark',\n  modalColor: 'modal-dark',\n  btnColor: 'dark'\n}];\nconst ModalTheme = () => {\n  _s();\n  // ** State\n  const [modal, setModal] = useState(null);\n  const toggleModal = id => {\n    if (modal !== id) {\n      setModal(id);\n    } else {\n      setModal(null);\n    }\n  };\n  const renderModal = ModalConfig.map(item => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"theme-\".concat(item.modalColor),\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: item.btnColor,\n        onClick: () => toggleModal(item.id),\n        outline: true,\n        children: item.title\n      }, item.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: modal === item.id,\n        toggle: () => toggleModal(item.id),\n        className: \"modal-dialog-centered\",\n        modalClassName: item.modalColor,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          toggle: () => toggleModal(item.id),\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: \"Tart lemon drops macaroon oat cake chocolate toffee chocolate bar icing. Pudding jelly beans carrot cake pastry gummies cheesecake lollipop. I love cookie lollipop cake I love sweet gummi bears cupcake dessert.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: item.btnColor,\n            onClick: () => toggleModal(item.id),\n            children: \"Accept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"demo-inline-spacing\",\n    children: renderModal\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 10\n  }, this);\n};\n_s(ModalTheme, \"+2xwMS3J0RcBA0qWw62dnTGSPTE=\");\n_c = ModalTheme;\nexport default ModalTheme;\nvar _c;\n$RefreshReg$(_c, \"ModalTheme\");","map":{"version":3,"names":["useState","Button","Modal","ModalHeader","ModalBody","ModalFooter","jsxDEV","_jsxDEV","ModalConfig","id","title","modalColor","btnColor","ModalTheme","_s","modal","setModal","toggleModal","renderModal","map","item","className","concat","children","color","onClick","outline","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","toggle","modalClassName","_c","$RefreshReg$"],"sources":["E:/EXAI/EX-AI/src/views/components/modal/ModalThemes.js"],"sourcesContent":["// ** React Imports\nimport { useState } from 'react'\n\n// ** Reactstrap Imports\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'\n\nconst ModalConfig = [\n  {\n    id: 1,\n    title: 'Primary',\n    modalColor: 'modal-primary',\n    btnColor: 'primary'\n  },\n  {\n    id: 2,\n    title: 'Secondary',\n    modalColor: 'modal-secondary',\n    btnColor: 'secondary'\n  },\n  {\n    id: 3,\n    title: 'Success',\n    modalColor: 'modal-success',\n    btnColor: 'success'\n  },\n  {\n    id: 4,\n    title: 'Danger',\n    modalColor: 'modal-danger',\n    btnColor: 'danger'\n  },\n  {\n    id: 5,\n    title: 'Warning',\n    modalColor: 'modal-warning',\n    btnColor: 'warning'\n  },\n  {\n    id: 6,\n    title: 'Info',\n    modalColor: 'modal-info',\n    btnColor: 'info'\n  },\n  {\n    id: 7,\n    title: 'Dark',\n    modalColor: 'modal-dark',\n    btnColor: 'dark'\n  }\n]\n\nconst ModalTheme = () => {\n  // ** State\n  const [modal, setModal] = useState(null)\n\n  const toggleModal = id => {\n    if (modal !== id) {\n      setModal(id)\n    } else {\n      setModal(null)\n    }\n  }\n\n  const renderModal = ModalConfig.map(item => {\n    return (\n      <div className={`theme-${item.modalColor}`} key={item.id}>\n        <Button color={item.btnColor} onClick={() => toggleModal(item.id)} key={item.title} outline>\n          {item.title}\n        </Button>\n        <Modal\n          isOpen={modal === item.id}\n          toggle={() => toggleModal(item.id)}\n          className='modal-dialog-centered'\n          modalClassName={item.modalColor}\n          key={item.id}\n        >\n          <ModalHeader toggle={() => toggleModal(item.id)}>{item.title}</ModalHeader>\n          <ModalBody>\n            Tart lemon drops macaroon oat cake chocolate toffee chocolate bar icing. Pudding jelly beans carrot cake\n            pastry gummies cheesecake lollipop. I love cookie lollipop cake I love sweet gummi bears cupcake dessert.\n          </ModalBody>\n          <ModalFooter>\n            <Button color={item.btnColor} onClick={() => toggleModal(item.id)}>\n              Accept\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    )\n  })\n\n  return <div className='demo-inline-spacing'>{renderModal}</div>\n}\nexport default ModalTheme\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}