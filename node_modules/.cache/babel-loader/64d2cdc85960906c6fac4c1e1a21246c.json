{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hai Hong\\\\Desktop\\\\EXAI\\\\EXAI\\\\src\\\\views\\\\components\\\\accordion\\\\AccordionControlled.js\",\n  _s = $RefreshSig$();\n// ** React Imports\nimport { useState } from 'react';\n\n// ** Reactstrap Imports\nimport { Accordion, AccordionBody, AccordionHeader, AccordionItem } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccordionControlled = () => {\n  _s();\n  // ** State\n  const [open, setOpen] = useState('1');\n  const toggle = id => {\n    open === id ? setOpen() : setOpen(id);\n  };\n  return /*#__PURE__*/_jsxDEV(Accordion, {\n    open: open,\n    toggle: toggle,\n    children: [/*#__PURE__*/_jsxDEV(AccordionItem, {\n      children: [/*#__PURE__*/_jsxDEV(AccordionHeader, {\n        targetId: \"1\",\n        children: \"Accordion Item 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AccordionBody, {\n        accordionId: \"1\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"This is the first item's accordion body.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), \" You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"<AccordionBody>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), \", though the transition does limit overflow.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccordionItem, {\n      children: [/*#__PURE__*/_jsxDEV(AccordionHeader, {\n        targetId: \"2\",\n        children: \"Accordion Item 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AccordionBody, {\n        accordionId: \"2\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"This is the second item's accordion body.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), \" You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"<AccordionBody>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), \", though the transition does limit overflow.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccordionItem, {\n      children: [/*#__PURE__*/_jsxDEV(AccordionHeader, {\n        targetId: \"3\",\n        children: \"Accordion Item 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AccordionBody, {\n        accordionId: \"3\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"This is the third item's accordion body.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), \" You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"<AccordionBody>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), \", though the transition does limit overflow.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(AccordionControlled, \"xAIfVgvFJ6GAJ9vUUusRBV+vZ1E=\");\n_c = AccordionControlled;\nexport default AccordionControlled;\nvar _c;\n$RefreshReg$(_c, \"AccordionControlled\");","map":{"version":3,"names":["useState","Accordion","AccordionBody","AccordionHeader","AccordionItem","jsxDEV","_jsxDEV","AccordionControlled","_s","open","setOpen","toggle","id","children","targetId","fileName","_jsxFileName","lineNumber","columnNumber","accordionId","_c","$RefreshReg$"],"sources":["C:/Users/Hai Hong/Desktop/EXAI/EXAI/src/views/components/accordion/AccordionControlled.js"],"sourcesContent":["// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Accordion, AccordionBody, AccordionHeader, AccordionItem } from 'reactstrap'\r\n\r\nconst AccordionControlled = () => {\r\n  // ** State\r\n  const [open, setOpen] = useState('1')\r\n\r\n  const toggle = id => {\r\n    open === id ? setOpen() : setOpen(id)\r\n  }\r\n\r\n  return (\r\n    <Accordion open={open} toggle={toggle}>\r\n      <AccordionItem>\r\n        <AccordionHeader targetId='1'>Accordion Item 1</AccordionHeader>\r\n        <AccordionBody accordionId='1'>\r\n          <strong>This is the first item's accordion body.</strong> You can modify any of this with custom CSS or\r\n          overriding our default variables. It's also worth noting that just about any HTML can go within the{' '}\r\n          <code>&lt;AccordionBody&gt;</code>, though the transition does limit overflow.\r\n        </AccordionBody>\r\n      </AccordionItem>\r\n      <AccordionItem>\r\n        <AccordionHeader targetId='2'>Accordion Item 2</AccordionHeader>\r\n        <AccordionBody accordionId='2'>\r\n          <strong>This is the second item's accordion body.</strong> You can modify any of this with custom CSS or\r\n          overriding our default variables. It's also worth noting that just about any HTML can go within the{' '}\r\n          <code>&lt;AccordionBody&gt;</code>, though the transition does limit overflow.\r\n        </AccordionBody>\r\n      </AccordionItem>\r\n      <AccordionItem>\r\n        <AccordionHeader targetId='3'>Accordion Item 3</AccordionHeader>\r\n        <AccordionBody accordionId='3'>\r\n          <strong>This is the third item's accordion body.</strong> You can modify any of this with custom CSS or\r\n          overriding our default variables. It's also worth noting that just about any HTML can go within the{' '}\r\n          <code>&lt;AccordionBody&gt;</code>, though the transition does limit overflow.\r\n        </AccordionBody>\r\n      </AccordionItem>\r\n    </Accordion>\r\n  )\r\n}\r\n\r\nexport default AccordionControlled\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}