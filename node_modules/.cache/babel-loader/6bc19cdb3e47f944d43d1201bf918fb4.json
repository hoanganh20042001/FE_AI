{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hai Hong\\\\Desktop\\\\EXAI\\\\EXAI\\\\src\\\\views\\\\apps\\\\calendar\\\\index.js\",\n  _s = $RefreshSig$();\n// ** React Imports\nimport { Fragment, useState, useEffect } from 'react';\n\n// ** Third Party Components\nimport classnames from 'classnames';\nimport { Row, Col } from 'reactstrap';\n\n// ** Calendar App Component Imports\nimport Calendar from './Calendar';\nimport SidebarLeft from './SidebarLeft';\nimport AddEventSidebar from './AddEventSidebar';\n\n// ** Custom Hooks\nimport { useRTL } from '@hooks/useRTL';\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchEvents, selectEvent, updateEvent, updateFilter, updateAllFilters, addEvent, removeEvent } from './store';\n\n// ** Styles\nimport '@styles/react/apps/app-calendar.scss';\n\n// ** CalendarColors\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst calendarsColor = {\n  Business: 'primary',\n  Holiday: 'success',\n  Personal: 'danger',\n  Family: 'warning',\n  ETC: 'info'\n};\nconst CalendarComponent = () => {\n  _s();\n  // ** Variables\n  const dispatch = useDispatch();\n  const store = useSelector(state => state.calendar);\n\n  // ** states\n  const [calendarApi, setCalendarApi] = useState(null);\n  const [addSidebarOpen, setAddSidebarOpen] = useState(false);\n  const [leftSidebarOpen, setLeftSidebarOpen] = useState(false);\n\n  // ** Hooks\n  const [isRtl] = useRTL();\n\n  // ** AddEventSidebar Toggle Function\n  const handleAddEventSidebar = () => setAddSidebarOpen(!addSidebarOpen);\n\n  // ** LeftSidebar Toggle Function\n  const toggleSidebar = val => setLeftSidebarOpen(val);\n\n  // ** Blank Event Object\n  const blankEvent = {\n    title: '',\n    start: '',\n    end: '',\n    allDay: false,\n    url: '',\n    extendedProps: {\n      calendar: '',\n      guests: [],\n      location: '',\n      description: ''\n    }\n  };\n\n  // ** refetchEvents\n  const refetchEvents = () => {\n    if (calendarApi !== null) {\n      calendarApi.refetchEvents();\n    }\n  };\n\n  // ** Fetch Events On Mount\n  useEffect(() => {\n    dispatch(fetchEvents(store.selectedCalendars));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-calendar overflow-hidden border\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"g-0\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          id: \"app-calendar-sidebar\",\n          className: classnames('col app-calendar-sidebar flex-grow-0 overflow-hidden d-flex flex-column', {\n            show: leftSidebarOpen\n          }),\n          children: /*#__PURE__*/_jsxDEV(SidebarLeft, {\n            store: store,\n            dispatch: dispatch,\n            updateFilter: updateFilter,\n            toggleSidebar: toggleSidebar,\n            updateAllFilters: updateAllFilters,\n            handleAddEventSidebar: handleAddEventSidebar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"position-relative\",\n          children: /*#__PURE__*/_jsxDEV(Calendar, {\n            isRtl: isRtl,\n            store: store,\n            dispatch: dispatch,\n            blankEvent: blankEvent,\n            calendarApi: calendarApi,\n            selectEvent: selectEvent,\n            updateEvent: updateEvent,\n            toggleSidebar: toggleSidebar,\n            calendarsColor: calendarsColor,\n            setCalendarApi: setCalendarApi,\n            handleAddEventSidebar: handleAddEventSidebar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classnames('body-content-overlay', {\n            show: leftSidebarOpen === true\n          }),\n          onClick: () => toggleSidebar(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddEventSidebar, {\n      store: store,\n      dispatch: dispatch,\n      addEvent: addEvent,\n      open: addSidebarOpen,\n      selectEvent: selectEvent,\n      updateEvent: updateEvent,\n      removeEvent: removeEvent,\n      calendarApi: calendarApi,\n      refetchEvents: refetchEvents,\n      calendarsColor: calendarsColor,\n      handleAddEventSidebar: handleAddEventSidebar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(CalendarComponent, \"8xZfriqfrVAj9k8c5jPa4w/ZBac=\", false, function () {\n  return [useDispatch, useSelector, useRTL];\n});\n_c = CalendarComponent;\nexport default CalendarComponent;\nvar _c;\n$RefreshReg$(_c, \"CalendarComponent\");","map":{"version":3,"names":["Fragment","useState","useEffect","classnames","Row","Col","Calendar","SidebarLeft","AddEventSidebar","useRTL","useSelector","useDispatch","fetchEvents","selectEvent","updateEvent","updateFilter","updateAllFilters","addEvent","removeEvent","jsxDEV","_jsxDEV","calendarsColor","Business","Holiday","Personal","Family","ETC","CalendarComponent","_s","dispatch","store","state","calendar","calendarApi","setCalendarApi","addSidebarOpen","setAddSidebarOpen","leftSidebarOpen","setLeftSidebarOpen","isRtl","handleAddEventSidebar","toggleSidebar","val","blankEvent","title","start","end","allDay","url","extendedProps","guests","location","description","refetchEvents","selectedCalendars","children","className","id","show","fileName","_jsxFileName","lineNumber","columnNumber","onClick","open","_c","$RefreshReg$"],"sources":["C:/Users/Hai Hong/Desktop/EXAI/EXAI/src/views/apps/calendar/index.js"],"sourcesContent":["// ** React Imports\r\nimport { Fragment, useState, useEffect } from 'react'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Calendar App Component Imports\r\nimport Calendar from './Calendar'\r\nimport SidebarLeft from './SidebarLeft'\r\nimport AddEventSidebar from './AddEventSidebar'\r\n\r\n// ** Custom Hooks\r\nimport { useRTL } from '@hooks/useRTL'\r\n\r\n// ** Store & Actions\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { fetchEvents, selectEvent, updateEvent, updateFilter, updateAllFilters, addEvent, removeEvent } from './store'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-calendar.scss'\r\n\r\n// ** CalendarColors\r\nconst calendarsColor = {\r\n  Business: 'primary',\r\n  Holiday: 'success',\r\n  Personal: 'danger',\r\n  Family: 'warning',\r\n  ETC: 'info'\r\n}\r\n\r\nconst CalendarComponent = () => {\r\n  // ** Variables\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.calendar)\r\n\r\n  // ** states\r\n  const [calendarApi, setCalendarApi] = useState(null)\r\n  const [addSidebarOpen, setAddSidebarOpen] = useState(false)\r\n  const [leftSidebarOpen, setLeftSidebarOpen] = useState(false)\r\n\r\n  // ** Hooks\r\n  const [isRtl] = useRTL()\r\n\r\n  // ** AddEventSidebar Toggle Function\r\n  const handleAddEventSidebar = () => setAddSidebarOpen(!addSidebarOpen)\r\n\r\n  // ** LeftSidebar Toggle Function\r\n  const toggleSidebar = val => setLeftSidebarOpen(val)\r\n\r\n  // ** Blank Event Object\r\n  const blankEvent = {\r\n    title: '',\r\n    start: '',\r\n    end: '',\r\n    allDay: false,\r\n    url: '',\r\n    extendedProps: {\r\n      calendar: '',\r\n      guests: [],\r\n      location: '',\r\n      description: ''\r\n    }\r\n  }\r\n\r\n  // ** refetchEvents\r\n  const refetchEvents = () => {\r\n    if (calendarApi !== null) {\r\n      calendarApi.refetchEvents()\r\n    }\r\n  }\r\n\r\n  // ** Fetch Events On Mount\r\n  useEffect(() => {\r\n    dispatch(fetchEvents(store.selectedCalendars))\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='app-calendar overflow-hidden border'>\r\n        <Row className='g-0'>\r\n          <Col\r\n            id='app-calendar-sidebar'\r\n            className={classnames('col app-calendar-sidebar flex-grow-0 overflow-hidden d-flex flex-column', {\r\n              show: leftSidebarOpen\r\n            })}\r\n          >\r\n            <SidebarLeft\r\n              store={store}\r\n              dispatch={dispatch}\r\n              updateFilter={updateFilter}\r\n              toggleSidebar={toggleSidebar}\r\n              updateAllFilters={updateAllFilters}\r\n              handleAddEventSidebar={handleAddEventSidebar}\r\n            />\r\n          </Col>\r\n          <Col className='position-relative'>\r\n            <Calendar\r\n              isRtl={isRtl}\r\n              store={store}\r\n              dispatch={dispatch}\r\n              blankEvent={blankEvent}\r\n              calendarApi={calendarApi}\r\n              selectEvent={selectEvent}\r\n              updateEvent={updateEvent}\r\n              toggleSidebar={toggleSidebar}\r\n              calendarsColor={calendarsColor}\r\n              setCalendarApi={setCalendarApi}\r\n              handleAddEventSidebar={handleAddEventSidebar}\r\n            />\r\n          </Col>\r\n          <div\r\n            className={classnames('body-content-overlay', {\r\n              show: leftSidebarOpen === true\r\n            })}\r\n            onClick={() => toggleSidebar(false)}\r\n          ></div>\r\n        </Row>\r\n      </div>\r\n      <AddEventSidebar\r\n        store={store}\r\n        dispatch={dispatch}\r\n        addEvent={addEvent}\r\n        open={addSidebarOpen}\r\n        selectEvent={selectEvent}\r\n        updateEvent={updateEvent}\r\n        removeEvent={removeEvent}\r\n        calendarApi={calendarApi}\r\n        refetchEvents={refetchEvents}\r\n        calendarsColor={calendarsColor}\r\n        handleAddEventSidebar={handleAddEventSidebar}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default CalendarComponent\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}