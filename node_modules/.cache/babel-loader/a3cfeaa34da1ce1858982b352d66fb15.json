{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n/* eslint-disable implicit-arrow-linebreak */\n// ** React Imports\nimport { useContext } from 'react';\nimport { AbilityContext } from '@src/utility/context/Can';\n\n/**\r\n * Return which component to render based on it's data/context\r\n * @param {Object} item nav menu item\r\n */\nexport const resolveVerticalNavMenuItemComponent = item => {\n  if (item.header) return 'VerticalNavMenuSectionHeader';\n  if (item.children) return 'VerticalNavMenuGroup';\n  return 'VerticalNavMenuLink';\n};\n\n/**\r\n * Return which component to render based on it's data/context\r\n * @param {Object} item nav menu item\r\n */\nexport const resolveHorizontalNavMenuItemComponent = item => {\n  if (item.children) return 'HorizontalNavMenuGroup';\n  return 'HorizontalNavMenuLink';\n};\n\n/**\r\n * Check if nav-link is active\r\n * @param {Object} link nav-link object\r\n */\nexport const isNavLinkActive = (link, currentURL, routerProps) => {\n  return currentURL === link || routerProps && routerProps.meta && routerProps.meta.navLink && routerProps.meta.navLink === link;\n  // return currentURL === link\n};\n\n/**\r\n * Check if the given item has the given url\r\n * in one of its children\r\n *\r\n * @param item\r\n * @param activeItem\r\n */\nexport const hasActiveChild = (item, currentUrl) => {\n  const {\n    children\n  } = item;\n  if (!children) {\n    return false;\n  }\n  for (const child of children) {\n    if (child.children) {\n      if (hasActiveChild(child, currentUrl)) {\n        return true;\n      }\n    }\n\n    // Check if the child has a link and is active\n    if (child && child.navLink && currentUrl && (child.navLink === currentUrl || currentUrl.includes(child.navLink))) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\r\n * Check if this is a children\r\n * of the given item\r\n *\r\n * @param children\r\n * @param openGroup\r\n * @param currentActiveGroup\r\n */\nexport const removeChildren = (children, openGroup, currentActiveGroup) => {\n  children.forEach(child => {\n    if (!currentActiveGroup.includes(child.id)) {\n      const index = openGroup.indexOf(child.id);\n      if (index > -1) openGroup.splice(index, 1);\n      if (child.children) removeChildren(child.children, openGroup, currentActiveGroup);\n    }\n  });\n};\nconst checkForVisibleChild = (arr, ability) => {\n  return arr.some(i => {\n    if (i.children) {\n      return checkForVisibleChild(i.children, ability);\n    } else {\n      return ability.can(i.action, i.resource);\n    }\n  });\n};\nexport const canViewMenuGroup = item => {\n  _s();\n  const ability = useContext(AbilityContext);\n  // ! This same logic is used in canViewHorizontalNavMenuGroup and canViewHorizontalNavMenuHeaderGroup. So make sure to update logic in them as well\n  const hasAnyVisibleChild = item.children && checkForVisibleChild(item.children, ability);\n\n  // ** If resource and action is defined in item => Return based on children visibility (Hide group if no child is visible)\n  // ** Else check for ability using provided resource and action along with checking if has any visible child\n  if (!(item.action && item.resource)) {\n    return hasAnyVisibleChild;\n  }\n  return ability.can(item.action, item.resource) && hasAnyVisibleChild;\n};\n_s(canViewMenuGroup, \"Mgx70MHFOjWkgzuKcjn1pYPEx8o=\");\nexport const canViewMenuItem = item => {\n  _s2();\n  const ability = useContext(AbilityContext);\n  return ability.can(item.action, item.resource);\n};\n_s2(canViewMenuItem, \"Mgx70MHFOjWkgzuKcjn1pYPEx8o=\");","map":{"version":3,"names":["useContext","AbilityContext","resolveVerticalNavMenuItemComponent","item","header","children","resolveHorizontalNavMenuItemComponent","isNavLinkActive","link","currentURL","routerProps","meta","navLink","hasActiveChild","currentUrl","child","includes","removeChildren","openGroup","currentActiveGroup","forEach","id","index","indexOf","splice","checkForVisibleChild","arr","ability","some","i","can","action","resource","canViewMenuGroup","_s","hasAnyVisibleChild","canViewMenuItem","_s2"],"sources":["C:/Users/Hai Hong/Desktop/EXAI/EXAI/src/@core/layouts/utils.js"],"sourcesContent":["/* eslint-disable implicit-arrow-linebreak */\r\n// ** React Imports\r\nimport { useContext } from 'react'\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\n\r\n/**\r\n * Return which component to render based on it's data/context\r\n * @param {Object} item nav menu item\r\n */\r\nexport const resolveVerticalNavMenuItemComponent = item => {\r\n  if (item.header) return 'VerticalNavMenuSectionHeader'\r\n  if (item.children) return 'VerticalNavMenuGroup'\r\n  return 'VerticalNavMenuLink'\r\n}\r\n\r\n/**\r\n * Return which component to render based on it's data/context\r\n * @param {Object} item nav menu item\r\n */\r\nexport const resolveHorizontalNavMenuItemComponent = item => {\r\n  if (item.children) return 'HorizontalNavMenuGroup'\r\n  return 'HorizontalNavMenuLink'\r\n}\r\n\r\n/**\r\n * Check if nav-link is active\r\n * @param {Object} link nav-link object\r\n */\r\nexport const isNavLinkActive = (link, currentURL, routerProps) => {\r\n  return (\r\n    currentURL === link ||\r\n    (routerProps && routerProps.meta && routerProps.meta.navLink && routerProps.meta.navLink === link)\r\n  )\r\n  // return currentURL === link\r\n}\r\n\r\n/**\r\n * Check if the given item has the given url\r\n * in one of its children\r\n *\r\n * @param item\r\n * @param activeItem\r\n */\r\nexport const hasActiveChild = (item, currentUrl) => {\r\n  const { children } = item\r\n\r\n  if (!children) {\r\n    return false\r\n  }\r\n\r\n  for (const child of children) {\r\n    if (child.children) {\r\n      if (hasActiveChild(child, currentUrl)) {\r\n        return true\r\n      }\r\n    }\r\n\r\n    // Check if the child has a link and is active\r\n    if (child && child.navLink && currentUrl && (child.navLink === currentUrl || currentUrl.includes(child.navLink))) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n/**\r\n * Check if this is a children\r\n * of the given item\r\n *\r\n * @param children\r\n * @param openGroup\r\n * @param currentActiveGroup\r\n */\r\nexport const removeChildren = (children, openGroup, currentActiveGroup) => {\r\n  children.forEach(child => {\r\n    if (!currentActiveGroup.includes(child.id)) {\r\n      const index = openGroup.indexOf(child.id)\r\n      if (index > -1) openGroup.splice(index, 1)\r\n      if (child.children) removeChildren(child.children, openGroup, currentActiveGroup)\r\n    }\r\n  })\r\n}\r\n\r\nconst checkForVisibleChild = (arr, ability) => {\r\n  return arr.some(i => {\r\n    if (i.children) {\r\n      return checkForVisibleChild(i.children, ability)\r\n    } else {\r\n      return ability.can(i.action, i.resource)\r\n    }\r\n  })\r\n}\r\n\r\nexport const canViewMenuGroup = item => {\r\n  const ability = useContext(AbilityContext)\r\n  // ! This same logic is used in canViewHorizontalNavMenuGroup and canViewHorizontalNavMenuHeaderGroup. So make sure to update logic in them as well\r\n  const hasAnyVisibleChild = item.children && checkForVisibleChild(item.children, ability)\r\n\r\n  // ** If resource and action is defined in item => Return based on children visibility (Hide group if no child is visible)\r\n  // ** Else check for ability using provided resource and action along with checking if has any visible child\r\n  if (!(item.action && item.resource)) {\r\n    return hasAnyVisibleChild\r\n  }\r\n  return ability.can(item.action, item.resource) && hasAnyVisibleChild\r\n}\r\n\r\nexport const canViewMenuItem = item => {\r\n  const ability = useContext(AbilityContext)\r\n  return ability.can(item.action, item.resource)\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}