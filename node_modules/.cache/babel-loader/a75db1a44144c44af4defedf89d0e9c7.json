{"ast":null,"code":"var _jsxFileName = \"E:\\\\EXAI\\\\EX-AI\\\\src\\\\views\\\\components\\\\modal\\\\ModalUnmount.js\",\n  _s = $RefreshSig$();\n// ** React Imports\nimport { Fragment, useState } from 'react';\n\n// ** Reactstrap Imports\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Form, Row, Col } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalDestructuring = () => {\n  _s();\n  // ** States\n  const [visibility, setVisibility] = useState(false);\n  const [unmountOnClose, setUnmountOnClose] = useState(true);\n  const changeUnmountOnClose = e => {\n    const value = e.target.value;\n    setUnmountOnClose(JSON.parse(value));\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: e => e.preventDefault(),\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          className: \"mb-sm-0 mb-1\",\n          sm: \"6\",\n          md: \"4\",\n          lg: \"2\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"select\",\n            name: \"unmountOnClose\",\n            id: \"unmountOnClose\",\n            onChange: e => changeUnmountOnClose(e),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"true\",\n              children: \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"false\",\n              children: \"false\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: \"6\",\n          md: \"4\",\n          lg: \"2\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"success\",\n            onClick: () => setVisibility(!visibility),\n            outline: true,\n            children: \"Launch Modal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: visibility,\n      toggle: () => setVisibility(!visibility),\n      unmountOnClose: unmountOnClose,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => setVisibility(!visibility),\n        children: \"Modal title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"textarea\",\n          placeholder: \"Write something (data should remain in modal if unmountOnClose is set to false)\",\n          rows: 5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: () => setVisibility(!visibility),\n          outline: true,\n          children: \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(ModalDestructuring, \"pJqNVTM4aFX4YydsMp2N85ModXI=\");\n_c = ModalDestructuring;\nexport default ModalDestructuring;\nvar _c;\n$RefreshReg$(_c, \"ModalDestructuring\");","map":{"version":3,"names":["Fragment","useState","Button","Modal","ModalHeader","ModalBody","ModalFooter","Input","Form","Row","Col","jsxDEV","_jsxDEV","ModalDestructuring","_s","visibility","setVisibility","unmountOnClose","setUnmountOnClose","changeUnmountOnClose","e","value","target","JSON","parse","children","onSubmit","preventDefault","className","sm","md","lg","type","name","id","onChange","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","outline","isOpen","toggle","placeholder","rows","_c","$RefreshReg$"],"sources":["E:/EXAI/EX-AI/src/views/components/modal/ModalUnmount.js"],"sourcesContent":["// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Reactstrap Imports\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Form, Row, Col } from 'reactstrap'\n\nconst ModalDestructuring = () => {\n  // ** States\n  const [visibility, setVisibility] = useState(false)\n  const [unmountOnClose, setUnmountOnClose] = useState(true)\n\n  const changeUnmountOnClose = e => {\n    const value = e.target.value\n    setUnmountOnClose(JSON.parse(value))\n  }\n\n  return (\n    <Fragment>\n      <Form onSubmit={e => e.preventDefault()}>\n        <Row>\n          <Col className='mb-sm-0 mb-1' sm='6' md='4' lg='2'>\n            <Input type='select' name='unmountOnClose' id='unmountOnClose' onChange={e => changeUnmountOnClose(e)}>\n              <option value='true'>true</option>\n              <option value='false'>false</option>\n            </Input>\n          </Col>\n          <Col sm='6' md='4' lg='2'>\n            <Button color='success' onClick={() => setVisibility(!visibility)} outline>\n              Launch Modal\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n      <Modal isOpen={visibility} toggle={() => setVisibility(!visibility)} unmountOnClose={unmountOnClose}>\n        <ModalHeader toggle={() => setVisibility(!visibility)}>Modal title</ModalHeader>\n        <ModalBody>\n          <Input\n            type='textarea'\n            placeholder='Write something (data should remain in modal if unmountOnClose is set to false)'\n            rows={5}\n          />\n        </ModalBody>\n        <ModalFooter>\n          <Button color='primary' onClick={() => setVisibility(!visibility)} outline>\n            Accept\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </Fragment>\n  )\n}\nexport default ModalDestructuring\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}