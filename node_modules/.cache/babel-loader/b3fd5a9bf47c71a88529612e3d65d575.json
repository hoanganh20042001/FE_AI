{"ast":null,"code":"var inherits = require('inherits');\nvar Buffer = require('buffer').Buffer;\nvar DERDecoder = require('./der');\nfunction PEMDecoder(entity) {\n  DERDecoder.call(this, entity);\n  this.enc = 'pem';\n}\n;\ninherits(PEMDecoder, DERDecoder);\nmodule.exports = PEMDecoder;\nPEMDecoder.prototype.decode = function decode(data, options) {\n  var lines = data.toString().split(/[\\r\\n]+/g);\n  var label = options.label.toUpperCase();\n  var re = /^-----(BEGIN|END) ([^-]+)-----$/;\n  var start = -1;\n  var end = -1;\n  for (var i = 0; i < lines.length; i++) {\n    var match = lines[i].match(re);\n    if (match === null) continue;\n    if (match[2] !== label) continue;\n    if (start === -1) {\n      if (match[1] !== 'BEGIN') break;\n      start = i;\n    } else {\n      if (match[1] !== 'END') break;\n      end = i;\n      break;\n    }\n  }\n  if (start === -1 || end === -1) throw new Error('PEM section not found for: ' + label);\n  var base64 = lines.slice(start + 1, end).join('');\n  // Remove excessive symbols\n  base64.replace(/[^a-z0-9\\+\\/=]+/gi, '');\n  var input = new Buffer(base64, 'base64');\n  return DERDecoder.prototype.decode.call(this, input, options);\n};","map":{"version":3,"names":["inherits","require","Buffer","DERDecoder","PEMDecoder","entity","call","enc","module","exports","prototype","decode","data","options","lines","toString","split","label","toUpperCase","re","start","end","i","length","match","Error","base64","slice","join","replace","input"],"sources":["C:/Users/Hai Hong/Desktop/EXAI/EXAI/node_modules/asn1.js/lib/asn1/decoders/pem.js"],"sourcesContent":["var inherits = require('inherits');\r\nvar Buffer = require('buffer').Buffer;\r\n\r\nvar DERDecoder = require('./der');\r\n\r\nfunction PEMDecoder(entity) {\r\n  DERDecoder.call(this, entity);\r\n  this.enc = 'pem';\r\n};\r\ninherits(PEMDecoder, DERDecoder);\r\nmodule.exports = PEMDecoder;\r\n\r\nPEMDecoder.prototype.decode = function decode(data, options) {\r\n  var lines = data.toString().split(/[\\r\\n]+/g);\r\n\r\n  var label = options.label.toUpperCase();\r\n\r\n  var re = /^-----(BEGIN|END) ([^-]+)-----$/;\r\n  var start = -1;\r\n  var end = -1;\r\n  for (var i = 0; i < lines.length; i++) {\r\n    var match = lines[i].match(re);\r\n    if (match === null)\r\n      continue;\r\n\r\n    if (match[2] !== label)\r\n      continue;\r\n\r\n    if (start === -1) {\r\n      if (match[1] !== 'BEGIN')\r\n        break;\r\n      start = i;\r\n    } else {\r\n      if (match[1] !== 'END')\r\n        break;\r\n      end = i;\r\n      break;\r\n    }\r\n  }\r\n  if (start === -1 || end === -1)\r\n    throw new Error('PEM section not found for: ' + label);\r\n\r\n  var base64 = lines.slice(start + 1, end).join('');\r\n  // Remove excessive symbols\r\n  base64.replace(/[^a-z0-9\\+\\/=]+/gi, '');\r\n\r\n  var input = new Buffer(base64, 'base64');\r\n  return DERDecoder.prototype.decode.call(this, input, options);\r\n};\r\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AAClC,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM;AAErC,IAAIC,UAAU,GAAGF,OAAO,CAAC,OAAO,CAAC;AAEjC,SAASG,UAAUA,CAACC,MAAM,EAAE;EAC1BF,UAAU,CAACG,IAAI,CAAC,IAAI,EAAED,MAAM,CAAC;EAC7B,IAAI,CAACE,GAAG,GAAG,KAAK;AAClB;AAAC;AACDP,QAAQ,CAACI,UAAU,EAAED,UAAU,CAAC;AAChCK,MAAM,CAACC,OAAO,GAAGL,UAAU;AAE3BA,UAAU,CAACM,SAAS,CAACC,MAAM,GAAG,SAASA,MAAMA,CAACC,IAAI,EAAEC,OAAO,EAAE;EAC3D,IAAIC,KAAK,GAAGF,IAAI,CAACG,QAAQ,CAAC,CAAC,CAACC,KAAK,CAAC,UAAU,CAAC;EAE7C,IAAIC,KAAK,GAAGJ,OAAO,CAACI,KAAK,CAACC,WAAW,CAAC,CAAC;EAEvC,IAAIC,EAAE,GAAG,iCAAiC;EAC1C,IAAIC,KAAK,GAAG,CAAC,CAAC;EACd,IAAIC,GAAG,GAAG,CAAC,CAAC;EACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,KAAK,CAACS,MAAM,EAAED,CAAC,EAAE,EAAE;IACrC,IAAIE,KAAK,GAAGV,KAAK,CAACQ,CAAC,CAAC,CAACE,KAAK,CAACL,EAAE,CAAC;IAC9B,IAAIK,KAAK,KAAK,IAAI,EAChB;IAEF,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAKP,KAAK,EACpB;IAEF,IAAIG,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAII,KAAK,CAAC,CAAC,CAAC,KAAK,OAAO,EACtB;MACFJ,KAAK,GAAGE,CAAC;IACX,CAAC,MAAM;MACL,IAAIE,KAAK,CAAC,CAAC,CAAC,KAAK,KAAK,EACpB;MACFH,GAAG,GAAGC,CAAC;MACP;IACF;EACF;EACA,IAAIF,KAAK,KAAK,CAAC,CAAC,IAAIC,GAAG,KAAK,CAAC,CAAC,EAC5B,MAAM,IAAII,KAAK,CAAC,6BAA6B,GAAGR,KAAK,CAAC;EAExD,IAAIS,MAAM,GAAGZ,KAAK,CAACa,KAAK,CAACP,KAAK,GAAG,CAAC,EAAEC,GAAG,CAAC,CAACO,IAAI,CAAC,EAAE,CAAC;EACjD;EACAF,MAAM,CAACG,OAAO,CAAC,mBAAmB,EAAE,EAAE,CAAC;EAEvC,IAAIC,KAAK,GAAG,IAAI5B,MAAM,CAACwB,MAAM,EAAE,QAAQ,CAAC;EACxC,OAAOvB,UAAU,CAACO,SAAS,CAACC,MAAM,CAACL,IAAI,CAAC,IAAI,EAAEwB,KAAK,EAAEjB,OAAO,CAAC;AAC/D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}