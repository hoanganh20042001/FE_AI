{"ast":null,"code":"var _jsxFileName = \"E:\\\\EXAI\\\\EX-AI\\\\src\\\\views\\\\apps\\\\todo\\\\TaskSidebar.js\",\n  _s = $RefreshSig$();\n// ** React Imports\nimport { useState, Fragment } from 'react';\n\n// ** Third Party Components\nimport classnames from 'classnames';\nimport Flatpickr from 'react-flatpickr';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { X, Star, Trash } from 'react-feather';\nimport Select, { components } from 'react-select'; //eslint-disable-line\nimport { useForm, Controller } from 'react-hook-form';\nimport { EditorState, ContentState } from 'draft-js';\n\n// ** Reactstrap Imports\nimport { Modal, ModalBody, Button, Form, Input, Label, FormFeedback } from 'reactstrap';\n\n// ** Utils\nimport { isObjEmpty, selectThemeColors } from '@utils';\n\n// ** Assignee Avatars\nimport img1 from '@src/assets/images/portrait/small/avatar-s-3.jpg';\nimport img2 from '@src/assets/images/portrait/small/avatar-s-1.jpg';\nimport img3 from '@src/assets/images/portrait/small/avatar-s-4.jpg';\nimport img4 from '@src/assets/images/portrait/small/avatar-s-6.jpg';\nimport img5 from '@src/assets/images/portrait/small/avatar-s-2.jpg';\nimport img6 from '@src/assets/images/portrait/small/avatar-s-11.jpg';\n\n// ** Styles Imports\nimport '@styles/react/libs/editor/editor.scss';\nimport '@styles/react/libs/flatpickr/flatpickr.scss';\nimport '@styles/react/libs/react-select/_react-select.scss';\n\n// ** Function to capitalize the first letter of string\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst capitalize = string => string.charAt(0).toUpperCase() + string.slice(1);\n\n// ** Modal Header\nconst ModalHeader = props => {\n  // ** Props\n  const {\n    children,\n    store,\n    handleTaskSidebar,\n    setDeleted,\n    deleted,\n    important,\n    setImportant,\n    deleteTask,\n    dispatch\n  } = props;\n\n  // ** Function to delete task\n  const handleDeleteTask = () => {\n    setDeleted(!deleted);\n    dispatch(deleteTask(store.selectedTask.id));\n    handleTaskSidebar();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-header d-flex align-items-center justify-content-between mb-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"modal-title\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-item-action d-flex align-items-center\",\n      children: [store && !isObjEmpty(store.selectedTask) ? /*#__PURE__*/_jsxDEV(Trash, {\n        className: \"cursor-pointer mt-25\",\n        size: 16,\n        onClick: () => handleDeleteTask()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"todo-item-favorite cursor-pointer mx-75\",\n        children: /*#__PURE__*/_jsxDEV(Star, {\n          size: 16,\n          onClick: () => setImportant(!important),\n          className: classnames({\n            'text-warning': important === true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(X, {\n        className: \"fw-normal mt-25\",\n        size: 16,\n        onClick: handleTaskSidebar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_c = ModalHeader;\nconst TaskSidebar = props => {\n  _s();\n  // ** Props\n  const {\n    open,\n    handleTaskSidebar,\n    store,\n    dispatch,\n    updateTask,\n    selectTask,\n    addTask,\n    deleteTask\n  } = props;\n\n  // ** States\n  const [assignee, setAssignee] = useState({\n    value: 'pheobe',\n    label: 'Pheobe Buffay',\n    img: img1\n  });\n  const [tags, setTags] = useState([]);\n  const [desc, setDesc] = useState(EditorState.createEmpty());\n  const [completed, setCompleted] = useState(false);\n  const [important, setImportant] = useState(false);\n  const [deleted, setDeleted] = useState(false);\n  const [dueDate, setDueDate] = useState(new Date());\n  const {\n    control,\n    setError,\n    setValue,\n    clearErrors,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      title: ''\n    }\n  });\n\n  // ** Assignee Select Options\n  const assigneeOptions = [{\n    value: 'pheobe',\n    label: 'Pheobe Buffay',\n    img: img1\n  }, {\n    value: 'chandler',\n    label: 'Chandler Bing',\n    img: img2\n  }, {\n    value: 'ross',\n    label: 'Ross Geller',\n    img: img3\n  }, {\n    value: 'monica',\n    label: 'Monica Geller',\n    img: img4\n  }, {\n    value: 'joey',\n    label: 'Joey Tribbiani',\n    img: img5\n  }, {\n    value: 'Rachel',\n    label: 'Rachel Green',\n    img: img6\n  }];\n\n  // ** Tag Select Options\n  const tagOptions = [{\n    value: 'team',\n    label: 'Team'\n  }, {\n    value: 'low',\n    label: 'Low'\n  }, {\n    value: 'medium',\n    label: 'Medium'\n  }, {\n    value: 'high',\n    label: 'High'\n  }, {\n    value: 'update',\n    label: 'Update'\n  }];\n\n  // ** Custom Assignee Component\n  const AssigneeComponent = _ref => {\n    let {\n      data,\n      ...props\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(components.Option, {\n      ...props,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"d-block rounded-circle me-50\",\n          src: data.img,\n          height: \"26\",\n          width: \"26\",\n          alt: data.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-0\",\n          children: data.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n  };\n\n  // ** Returns sidebar title\n  const handleSidebarTitle = () => {\n    if (store && !isObjEmpty(store.selectedTask)) {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        outline: true,\n        size: \"sm\",\n        onClick: () => setCompleted(!completed),\n        color: completed === true ? 'success' : 'secondary',\n        children: completed === true ? 'Completed' : 'Mark Complete'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this);\n    } else {\n      return 'Add Task';\n    }\n  };\n\n  // ** Function to run when sidebar opens\n  const handleSidebarOpened = () => {\n    const {\n      selectedTask\n    } = store;\n    if (!isObjEmpty(selectedTask)) {\n      setValue('title', selectedTask.title);\n      setCompleted(selectedTask.isCompleted);\n      setImportant(selectedTask.isImportant);\n      setAssignee([{\n        value: selectedTask.assignee.fullName,\n        label: selectedTask.assignee.fullName,\n        img: selectedTask.assignee.avatar\n      }]);\n      setDueDate(selectedTask.dueDate);\n      if (typeof selectedTask.description === 'string') {\n        setDesc(EditorState.createWithContent(ContentState.createFromText(selectedTask.description)));\n      } else {\n        const obj = selectedTask.description._immutable.currentContent.blockMap;\n        const property = Object.keys(obj).map(val => val);\n        setDesc(EditorState.createWithContent(ContentState.createFromText(obj[property].text)));\n      }\n      if (selectedTask.tags.length) {\n        const tags = [];\n        selectedTask.tags.map(tag => {\n          tags.push({\n            value: tag,\n            label: capitalize(tag)\n          });\n        });\n        setTags(tags);\n      }\n    }\n  };\n\n  // ** Function to run when sidebar closes\n  const handleSidebarClosed = () => {\n    setTags([]);\n    setDesc('');\n    setValue('title', '');\n    setAssignee({\n      value: 'pheobe',\n      label: 'Pheobe Buffay',\n      img: img1\n    });\n    setCompleted(false);\n    setImportant(false);\n    setDueDate(new Date());\n    dispatch(selectTask({}));\n    clearErrors();\n  };\n\n  // ** Function to reset fields\n  const handleResetFields = () => {\n    const descValue = EditorState.createWithContent(ContentState.createFromText(store.selectedTask.description));\n    setValue('title', store.selectedTask.title);\n    setDesc(descValue);\n    setCompleted(store.selectedTask.isCompleted);\n    setImportant(store.selectedTask.isImportant);\n    setDeleted(store.selectedTask.isDeleted);\n    setDueDate(store.selectedTask.dueDate);\n    if (store.selectedTask.assignee.fullName !== assignee.label) {\n      setAssignee({\n        value: store.selectedTask.assignee.fullName,\n        label: store.selectedTask.assignee.fullName,\n        img: store.selectedTask.assignee.avatar\n      });\n    }\n    if (store.selectedTask.tags.length) {\n      const tags = [];\n      store.selectedTask.tags.map(tag => {\n        tags.push({\n          value: tag,\n          label: capitalize(tag)\n        });\n      });\n      setTags(tags);\n    }\n  };\n\n  // ** Renders Footer Buttons\n  const renderFooterButtons = () => {\n    if (store && !isObjEmpty(store.selectedTask)) {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          className: \"update-btn update-todo-item me-1\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          onClick: handleResetFields,\n          outline: true,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          className: \"add-todo-item me-1\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          onClick: handleTaskSidebar,\n          outline: true,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  const onSubmit = data => {\n    const newTaskTag = [];\n    const doesInclude = !isObjEmpty(store.selectedTask) && assignee.label === store.selectedTask.assignee.fullName;\n    if (tags.length) {\n      tags.map(tag => newTaskTag.push(tag.value));\n    }\n    const newAssignee = {\n      fullName: assignee.label,\n      avatar: assignee.img\n    };\n    const state = {\n      dueDate,\n      title: data.title,\n      tags: newTaskTag,\n      description: desc,\n      isCompleted: completed,\n      isDeleted: deleted,\n      isImportant: important,\n      assignee: doesInclude || assignee.label === undefined ? store.selectedTask.assignee : newAssignee\n    };\n    if (data.title.length) {\n      if (isObjEmpty(errors)) {\n        if (isObjEmpty(store.selectedTask) || !isObjEmpty(store.selectedTask) && !store.selectedTask.title.length) {\n          dispatch(addTask(state));\n        } else {\n          dispatch(updateTask({\n            ...state,\n            id: store.selectedTask.id\n          }));\n        }\n        handleTaskSidebar();\n      }\n    } else {\n      setError('title', {\n        type: 'manual'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: open,\n    toggle: handleTaskSidebar,\n    className: \"sidebar-lg\",\n    contentClassName: \"p-0\",\n    onOpened: handleSidebarOpened,\n    onClosed: handleSidebarClosed,\n    modalClassName: \"modal-slide-in sidebar-todo-modal\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      id: \"form-modal-todo\",\n      className: \"todo-modal\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        store: store,\n        deleted: deleted,\n        dispatch: dispatch,\n        important: important,\n        deleteTask: deleteTask,\n        setDeleted: setDeleted,\n        setImportant: setImportant,\n        handleTaskSidebar: handleTaskSidebar,\n        children: handleSidebarTitle()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        className: \"flex-grow-1 pb-sm-0 pb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"form-label\",\n            for: \"task-title\",\n            children: [\"Title \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"title\",\n            control: control,\n            render: _ref2 => {\n              let {\n                field\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(Input, {\n                id: \"task-title\",\n                placeholder: \"Title\",\n                className: \"new-todo-item-title\",\n                invalid: errors.title && true,\n                ...field\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this), errors.title && /*#__PURE__*/_jsxDEV(FormFeedback, {\n            children: \"Please enter a valid task title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"form-label\",\n            for: \"task-assignee\",\n            children: \"Assignee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            id: \"task-assignee\",\n            className: \"react-select\",\n            classNamePrefix: \"select\",\n            isClearable: false,\n            options: assigneeOptions,\n            theme: selectThemeColors,\n            value: assignee,\n            onChange: data => setAssignee(data),\n            components: {\n              Option: AssigneeComponent\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"form-label\",\n            for: \"due-date\",\n            children: \"Due Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Flatpickr, {\n            id: \"due-date\",\n            name: \"due-date\",\n            className: \"form-control\",\n            onChange: date => setDueDate(date[0]),\n            value: dueDate,\n            options: {\n              dateFormat: 'Y-m-d'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"form-label\",\n            for: \"task-tags\",\n            children: \"Tags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            isMulti: true,\n            id: \"task-tags\",\n            className: \"react-select\",\n            classNamePrefix: \"select\",\n            isClearable: false,\n            options: tagOptions,\n            theme: selectThemeColors,\n            value: tags,\n            onChange: data => {\n              setTags(data !== null ? [...data] : []);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"task-desc\",\n            className: \"form-label\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Editor, {\n            editorState: desc,\n            wrapperClassName: \"toolbar-bottom\",\n            toolbar: {\n              options: ['inline', 'textAlign'],\n              inline: {\n                inDropdown: false,\n                options: ['bold', 'italic', 'underline']\n              }\n            },\n            onEditorStateChange: data => setDesc(data)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: renderFooterButtons()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 283,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskSidebar, \"cW9qKq1NDLMFK1pdqOpJEHcYavM=\", false, function () {\n  return [useForm];\n});\n_c2 = TaskSidebar;\nexport default TaskSidebar;\nvar _c, _c2;\n$RefreshReg$(_c, \"ModalHeader\");\n$RefreshReg$(_c2, \"TaskSidebar\");","map":{"version":3,"names":["useState","Fragment","classnames","Flatpickr","Editor","X","Star","Trash","Select","components","useForm","Controller","EditorState","ContentState","Modal","ModalBody","Button","Form","Input","Label","FormFeedback","isObjEmpty","selectThemeColors","img1","img2","img3","img4","img5","img6","jsxDEV","_jsxDEV","capitalize","string","charAt","toUpperCase","slice","ModalHeader","props","children","store","handleTaskSidebar","setDeleted","deleted","important","setImportant","deleteTask","dispatch","handleDeleteTask","selectedTask","id","className","fileName","_jsxFileName","lineNumber","columnNumber","size","onClick","_c","TaskSidebar","_s","open","updateTask","selectTask","addTask","assignee","setAssignee","value","label","img","tags","setTags","desc","setDesc","createEmpty","completed","setCompleted","dueDate","setDueDate","Date","control","setError","setValue","clearErrors","handleSubmit","formState","errors","defaultValues","title","assigneeOptions","tagOptions","AssigneeComponent","_ref","data","Option","src","height","width","alt","handleSidebarTitle","outline","color","handleSidebarOpened","isCompleted","isImportant","fullName","avatar","description","createWithContent","createFromText","obj","_immutable","currentContent","blockMap","property","Object","keys","map","val","text","length","tag","push","handleSidebarClosed","handleResetFields","descValue","isDeleted","renderFooterButtons","onSubmit","newTaskTag","doesInclude","newAssignee","state","undefined","type","isOpen","toggle","contentClassName","onOpened","onClosed","modalClassName","for","name","render","_ref2","field","placeholder","invalid","classNamePrefix","isClearable","options","theme","onChange","date","dateFormat","isMulti","editorState","wrapperClassName","toolbar","inline","inDropdown","onEditorStateChange","_c2","$RefreshReg$"],"sources":["E:/EXAI/EX-AI/src/views/apps/todo/TaskSidebar.js"],"sourcesContent":["// ** React Imports\nimport { useState, Fragment } from 'react'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport Flatpickr from 'react-flatpickr'\nimport { Editor } from 'react-draft-wysiwyg'\nimport { X, Star, Trash } from 'react-feather'\nimport Select, { components } from 'react-select' //eslint-disable-line\nimport { useForm, Controller } from 'react-hook-form'\nimport { EditorState, ContentState } from 'draft-js'\n\n// ** Reactstrap Imports\nimport { Modal, ModalBody, Button, Form, Input, Label, FormFeedback } from 'reactstrap'\n\n// ** Utils\nimport { isObjEmpty, selectThemeColors } from '@utils'\n\n// ** Assignee Avatars\nimport img1 from '@src/assets/images/portrait/small/avatar-s-3.jpg'\nimport img2 from '@src/assets/images/portrait/small/avatar-s-1.jpg'\nimport img3 from '@src/assets/images/portrait/small/avatar-s-4.jpg'\nimport img4 from '@src/assets/images/portrait/small/avatar-s-6.jpg'\nimport img5 from '@src/assets/images/portrait/small/avatar-s-2.jpg'\nimport img6 from '@src/assets/images/portrait/small/avatar-s-11.jpg'\n\n// ** Styles Imports\nimport '@styles/react/libs/editor/editor.scss'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/react/libs/react-select/_react-select.scss'\n\n// ** Function to capitalize the first letter of string\nconst capitalize = string => string.charAt(0).toUpperCase() + string.slice(1)\n\n// ** Modal Header\nconst ModalHeader = props => {\n  // ** Props\n  const { children, store, handleTaskSidebar, setDeleted, deleted, important, setImportant, deleteTask, dispatch } =\n    props\n\n  // ** Function to delete task\n  const handleDeleteTask = () => {\n    setDeleted(!deleted)\n    dispatch(deleteTask(store.selectedTask.id))\n    handleTaskSidebar()\n  }\n\n  return (\n    <div className='modal-header d-flex align-items-center justify-content-between mb-1'>\n      <h5 className='modal-title'>{children}</h5>\n      <div className='todo-item-action d-flex align-items-center'>\n        {store && !isObjEmpty(store.selectedTask) ? (\n          <Trash className='cursor-pointer mt-25' size={16} onClick={() => handleDeleteTask()} />\n        ) : null}\n        <span className='todo-item-favorite cursor-pointer mx-75'>\n          <Star\n            size={16}\n            onClick={() => setImportant(!important)}\n            className={classnames({\n              'text-warning': important === true\n            })}\n          />\n        </span>\n        <X className='fw-normal mt-25' size={16} onClick={handleTaskSidebar} />\n      </div>\n    </div>\n  )\n}\n\nconst TaskSidebar = props => {\n  // ** Props\n  const { open, handleTaskSidebar, store, dispatch, updateTask, selectTask, addTask, deleteTask } = props\n\n  // ** States\n  const [assignee, setAssignee] = useState({ value: 'pheobe', label: 'Pheobe Buffay', img: img1 })\n  const [tags, setTags] = useState([])\n  const [desc, setDesc] = useState(EditorState.createEmpty())\n  const [completed, setCompleted] = useState(false)\n  const [important, setImportant] = useState(false)\n  const [deleted, setDeleted] = useState(false)\n  const [dueDate, setDueDate] = useState(new Date())\n\n  const {\n    control,\n    setError,\n    setValue,\n    clearErrors,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({\n    defaultValues: { title: '' }\n  })\n\n  // ** Assignee Select Options\n  const assigneeOptions = [\n    { value: 'pheobe', label: 'Pheobe Buffay', img: img1 },\n    { value: 'chandler', label: 'Chandler Bing', img: img2 },\n    { value: 'ross', label: 'Ross Geller', img: img3 },\n    { value: 'monica', label: 'Monica Geller', img: img4 },\n    { value: 'joey', label: 'Joey Tribbiani', img: img5 },\n    { value: 'Rachel', label: 'Rachel Green', img: img6 }\n  ]\n\n  // ** Tag Select Options\n  const tagOptions = [\n    { value: 'team', label: 'Team' },\n    { value: 'low', label: 'Low' },\n    { value: 'medium', label: 'Medium' },\n    { value: 'high', label: 'High' },\n    { value: 'update', label: 'Update' }\n  ]\n\n  // ** Custom Assignee Component\n  const AssigneeComponent = ({ data, ...props }) => {\n    return (\n      <components.Option {...props}>\n        <div className='d-flex align-items-center'>\n          <img className='d-block rounded-circle me-50' src={data.img} height='26' width='26' alt={data.label} />\n          <p className='mb-0'>{data.label}</p>\n        </div>\n      </components.Option>\n    )\n  }\n\n  // ** Returns sidebar title\n  const handleSidebarTitle = () => {\n    if (store && !isObjEmpty(store.selectedTask)) {\n      return (\n        <Button\n          outline\n          size='sm'\n          onClick={() => setCompleted(!completed)}\n          color={completed === true ? 'success' : 'secondary'}\n        >\n          {completed === true ? 'Completed' : 'Mark Complete'}\n        </Button>\n      )\n    } else {\n      return 'Add Task'\n    }\n  }\n\n  // ** Function to run when sidebar opens\n  const handleSidebarOpened = () => {\n    const { selectedTask } = store\n    if (!isObjEmpty(selectedTask)) {\n      setValue('title', selectedTask.title)\n      setCompleted(selectedTask.isCompleted)\n      setImportant(selectedTask.isImportant)\n      setAssignee([\n        {\n          value: selectedTask.assignee.fullName,\n          label: selectedTask.assignee.fullName,\n          img: selectedTask.assignee.avatar\n        }\n      ])\n      setDueDate(selectedTask.dueDate)\n      if (typeof selectedTask.description === 'string') {\n        setDesc(EditorState.createWithContent(ContentState.createFromText(selectedTask.description)))\n      } else {\n        const obj = selectedTask.description._immutable.currentContent.blockMap\n        const property = Object.keys(obj).map(val => val)\n\n        setDesc(EditorState.createWithContent(ContentState.createFromText(obj[property].text)))\n      }\n\n      if (selectedTask.tags.length) {\n        const tags = []\n        selectedTask.tags.map(tag => {\n          tags.push({ value: tag, label: capitalize(tag) })\n        })\n        setTags(tags)\n      }\n    }\n  }\n\n  // ** Function to run when sidebar closes\n  const handleSidebarClosed = () => {\n    setTags([])\n    setDesc('')\n    setValue('title', '')\n    setAssignee({ value: 'pheobe', label: 'Pheobe Buffay', img: img1 })\n    setCompleted(false)\n    setImportant(false)\n    setDueDate(new Date())\n    dispatch(selectTask({}))\n    clearErrors()\n  }\n\n  // ** Function to reset fields\n  const handleResetFields = () => {\n    const descValue = EditorState.createWithContent(ContentState.createFromText(store.selectedTask.description))\n\n    setValue('title', store.selectedTask.title)\n    setDesc(descValue)\n    setCompleted(store.selectedTask.isCompleted)\n    setImportant(store.selectedTask.isImportant)\n    setDeleted(store.selectedTask.isDeleted)\n    setDueDate(store.selectedTask.dueDate)\n    if (store.selectedTask.assignee.fullName !== assignee.label) {\n      setAssignee({\n        value: store.selectedTask.assignee.fullName,\n        label: store.selectedTask.assignee.fullName,\n        img: store.selectedTask.assignee.avatar\n      })\n    }\n    if (store.selectedTask.tags.length) {\n      const tags = []\n      store.selectedTask.tags.map(tag => {\n        tags.push({ value: tag, label: capitalize(tag) })\n      })\n      setTags(tags)\n    }\n  }\n\n  // ** Renders Footer Buttons\n  const renderFooterButtons = () => {\n    if (store && !isObjEmpty(store.selectedTask)) {\n      return (\n        <Fragment>\n          <Button color='primary' className='update-btn update-todo-item me-1'>\n            Update\n          </Button>\n          <Button color='secondary' onClick={handleResetFields} outline>\n            Reset\n          </Button>\n        </Fragment>\n      )\n    } else {\n      return (\n        <Fragment>\n          <Button color='primary' className='add-todo-item me-1'>\n            Add\n          </Button>\n          <Button color='secondary' onClick={handleTaskSidebar} outline>\n            Cancel\n          </Button>\n        </Fragment>\n      )\n    }\n  }\n\n  const onSubmit = data => {\n    const newTaskTag = []\n\n    const doesInclude = !isObjEmpty(store.selectedTask) && assignee.label === store.selectedTask.assignee.fullName\n\n    if (tags.length) {\n      tags.map(tag => newTaskTag.push(tag.value))\n    }\n\n    const newAssignee = {\n      fullName: assignee.label,\n      avatar: assignee.img\n    }\n    const state = {\n      dueDate,\n      title: data.title,\n      tags: newTaskTag,\n      description: desc,\n      isCompleted: completed,\n      isDeleted: deleted,\n      isImportant: important,\n      assignee: doesInclude || assignee.label === undefined ? store.selectedTask.assignee : newAssignee\n    }\n\n    if (data.title.length) {\n      if (isObjEmpty(errors)) {\n        if (isObjEmpty(store.selectedTask) || (!isObjEmpty(store.selectedTask) && !store.selectedTask.title.length)) {\n          dispatch(addTask(state))\n        } else {\n          dispatch(updateTask({ ...state, id: store.selectedTask.id }))\n        }\n        handleTaskSidebar()\n      }\n    } else {\n      setError('title', {\n        type: 'manual'\n      })\n    }\n  }\n  return (\n    <Modal\n      isOpen={open}\n      toggle={handleTaskSidebar}\n      className='sidebar-lg'\n      contentClassName='p-0'\n      onOpened={handleSidebarOpened}\n      onClosed={handleSidebarClosed}\n      modalClassName='modal-slide-in sidebar-todo-modal'\n    >\n      <Form id='form-modal-todo' className='todo-modal' onSubmit={handleSubmit(onSubmit)}>\n        <ModalHeader\n          store={store}\n          deleted={deleted}\n          dispatch={dispatch}\n          important={important}\n          deleteTask={deleteTask}\n          setDeleted={setDeleted}\n          setImportant={setImportant}\n          handleTaskSidebar={handleTaskSidebar}\n        >\n          {handleSidebarTitle()}\n        </ModalHeader>\n        <ModalBody className='flex-grow-1 pb-sm-0 pb-3'>\n          <div className='mb-1'>\n            <Label className='form-label' for='task-title'>\n              Title <span className='text-danger'>*</span>\n            </Label>\n            <Controller\n              name='title'\n              control={control}\n              render={({ field }) => (\n                <Input\n                  id='task-title'\n                  placeholder='Title'\n                  className='new-todo-item-title'\n                  invalid={errors.title && true}\n                  {...field}\n                />\n              )}\n            />\n            {errors.title && <FormFeedback>Please enter a valid task title</FormFeedback>}\n          </div>\n          <div className='mb-1'>\n            <Label className='form-label' for='task-assignee'>\n              Assignee\n            </Label>\n            <Select\n              id='task-assignee'\n              className='react-select'\n              classNamePrefix='select'\n              isClearable={false}\n              options={assigneeOptions}\n              theme={selectThemeColors}\n              value={assignee}\n              onChange={data => setAssignee(data)}\n              components={{ Option: AssigneeComponent }}\n            />\n          </div>\n          <div className='mb-1'>\n            <Label className='form-label' for='due-date'>\n              Due Date\n            </Label>\n            <Flatpickr\n              id='due-date'\n              name='due-date'\n              className='form-control'\n              onChange={date => setDueDate(date[0])}\n              value={dueDate}\n              options={{ dateFormat: 'Y-m-d' }}\n            />\n          </div>\n          <div className='mb-1'>\n            <Label className='form-label' for='task-tags'>\n              Tags\n            </Label>\n            <Select\n              isMulti\n              id='task-tags'\n              className='react-select'\n              classNamePrefix='select'\n              isClearable={false}\n              options={tagOptions}\n              theme={selectThemeColors}\n              value={tags}\n              onChange={data => {\n                setTags(data !== null ? [...data] : [])\n              }}\n            />\n          </div>\n          <div className='mb-1'>\n            <Label for='task-desc' className='form-label'>\n              Description\n            </Label>\n            <Editor\n              editorState={desc}\n              wrapperClassName='toolbar-bottom'\n              toolbar={{\n                options: ['inline', 'textAlign'],\n                inline: {\n                  inDropdown: false,\n                  options: ['bold', 'italic', 'underline']\n                }\n              }}\n              onEditorStateChange={data => setDesc(data)}\n            />\n          </div>\n          <div>{renderFooterButtons()}</div>\n        </ModalBody>\n      </Form>\n    </Modal>\n  )\n}\n\nexport default TaskSidebar\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}