{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hai Hong\\\\Desktop\\\\EXAI\\\\EXAI\\\\src\\\\views\\\\apps\\\\email\\\\index.js\",\n  _s = $RefreshSig$();\n// ** React Imports\nimport { useParams } from 'react-router-dom';\nimport { Fragment, useEffect, useState } from 'react';\n\n// ** Email App Component Imports\nimport Mails from './Mails';\nimport Sidebar from './Sidebar';\n\n// ** Third Party Components\nimport classnames from 'classnames';\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getMails, selectMail, updateMails, paginateMail, selectAllMail, updateMailLabel, resetSelectedMail, selectCurrentMail } from './store';\n\n// ** Styles\nimport '@styles/react/apps/app-email.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailApp = () => {\n  _s();\n  // ** States\n  const [query, setQuery] = useState('');\n  const [openMail, setOpenMail] = useState(false);\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const [composeOpen, setComposeOpen] = useState(false);\n\n  // ** Toggle Compose Function\n  const toggleCompose = () => setComposeOpen(!composeOpen);\n\n  // ** Store Variables\n  const dispatch = useDispatch();\n  const store = useSelector(state => state.email);\n\n  // ** Vars\n  const params = useParams();\n\n  // ** UseEffect: GET initial data on Mount\n  useEffect(() => {\n    dispatch(getMails({\n      q: query || '',\n      folder: params.folder || 'inbox',\n      label: params.label || ''\n    }));\n  }, [query, params.folder, params.label]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      store: store,\n      dispatch: dispatch,\n      getMails: getMails,\n      setOpenMail: setOpenMail,\n      sidebarOpen: sidebarOpen,\n      toggleCompose: toggleCompose,\n      setSidebarOpen: setSidebarOpen,\n      resetSelectedMail: resetSelectedMail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-right\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classnames('body-content-overlay', {\n            show: sidebarOpen\n          }),\n          onClick: () => setSidebarOpen(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Mails, {\n          store: store,\n          query: query,\n          setQuery: setQuery,\n          dispatch: dispatch,\n          getMails: getMails,\n          openMail: openMail,\n          selectMail: selectMail,\n          setOpenMail: setOpenMail,\n          updateMails: updateMails,\n          composeOpen: composeOpen,\n          paginateMail: paginateMail,\n          selectAllMail: selectAllMail,\n          toggleCompose: toggleCompose,\n          setSidebarOpen: setSidebarOpen,\n          updateMailLabel: updateMailLabel,\n          selectCurrentMail: selectCurrentMail,\n          resetSelectedMail: resetSelectedMail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(EmailApp, \"Gr2AE+GSZi46XSIxod3Gr/vb4XI=\", false, function () {\n  return [useDispatch, useSelector, useParams];\n});\n_c = EmailApp;\nexport default EmailApp;\nvar _c;\n$RefreshReg$(_c, \"EmailApp\");","map":{"version":3,"names":["useParams","Fragment","useEffect","useState","Mails","Sidebar","classnames","useDispatch","useSelector","getMails","selectMail","updateMails","paginateMail","selectAllMail","updateMailLabel","resetSelectedMail","selectCurrentMail","jsxDEV","_jsxDEV","EmailApp","_s","query","setQuery","openMail","setOpenMail","sidebarOpen","setSidebarOpen","composeOpen","setComposeOpen","toggleCompose","dispatch","store","state","email","params","q","folder","label","children","fileName","_jsxFileName","lineNumber","columnNumber","className","show","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Hai Hong/Desktop/EXAI/EXAI/src/views/apps/email/index.js"],"sourcesContent":["// ** React Imports\r\nimport { useParams } from 'react-router-dom'\r\nimport { Fragment, useEffect, useState } from 'react'\r\n\r\n// ** Email App Component Imports\r\nimport Mails from './Mails'\r\nimport Sidebar from './Sidebar'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  getMails,\r\n  selectMail,\r\n  updateMails,\r\n  paginateMail,\r\n  selectAllMail,\r\n  updateMailLabel,\r\n  resetSelectedMail,\r\n  selectCurrentMail\r\n} from './store'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-email.scss'\r\n\r\nconst EmailApp = () => {\r\n  // ** States\r\n  const [query, setQuery] = useState('')\r\n  const [openMail, setOpenMail] = useState(false)\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [composeOpen, setComposeOpen] = useState(false)\r\n\r\n  // ** Toggle Compose Function\r\n  const toggleCompose = () => setComposeOpen(!composeOpen)\r\n\r\n  // ** Store Variables\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.email)\r\n\r\n  // ** Vars\r\n  const params = useParams()\r\n\r\n  // ** UseEffect: GET initial data on Mount\r\n  useEffect(() => {\r\n    dispatch(getMails({ q: query || '', folder: params.folder || 'inbox', label: params.label || '' }))\r\n  }, [query, params.folder, params.label])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Sidebar\r\n        store={store}\r\n        dispatch={dispatch}\r\n        getMails={getMails}\r\n        setOpenMail={setOpenMail}\r\n        sidebarOpen={sidebarOpen}\r\n        toggleCompose={toggleCompose}\r\n        setSidebarOpen={setSidebarOpen}\r\n        resetSelectedMail={resetSelectedMail}\r\n      />\r\n      <div className='content-right'>\r\n        <div className='content-body'>\r\n          <div\r\n            className={classnames('body-content-overlay', {\r\n              show: sidebarOpen\r\n            })}\r\n            onClick={() => setSidebarOpen(false)}\r\n          ></div>\r\n          <Mails\r\n            store={store}\r\n            query={query}\r\n            setQuery={setQuery}\r\n            dispatch={dispatch}\r\n            getMails={getMails}\r\n            openMail={openMail}\r\n            selectMail={selectMail}\r\n            setOpenMail={setOpenMail}\r\n            updateMails={updateMails}\r\n            composeOpen={composeOpen}\r\n            paginateMail={paginateMail}\r\n            selectAllMail={selectAllMail}\r\n            toggleCompose={toggleCompose}\r\n            setSidebarOpen={setSidebarOpen}\r\n            updateMailLabel={updateMailLabel}\r\n            selectCurrentMail={selectCurrentMail}\r\n            resetSelectedMail={resetSelectedMail}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default EmailApp\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}