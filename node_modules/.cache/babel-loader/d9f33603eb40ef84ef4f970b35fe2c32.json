{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hai Hong\\\\Desktop\\\\EXAI\\\\EXAI\\\\src\\\\router\\\\routes\\\\index.js\";\n// ** React Imports\nimport { Fragment } from 'react';\n\n// ** Routes Imports\nimport AppRoutes from './Apps';\nimport FormRoutes from './Forms';\nimport PagesRoutes from './Pages';\nimport TablesRoutes from './Tables';\nimport ChartsRoutes from './Charts';\nimport DashboardRoutes from './Dashboards';\nimport UiElementRoutes from './UiElements';\nimport ExtensionsRoutes from './Extensions';\nimport PageLayoutsRoutes from './PageLayouts';\nimport AuthenticationRoutes from './Authentication';\n\n// ** Layouts\nimport BlankLayout from '@layouts/BlankLayout';\nimport VerticalLayout from '@src/layouts/VerticalLayout';\nimport HorizontalLayout from '@src/layouts/HorizontalLayout';\nimport LayoutWrapper from '@src/@core/layouts/components/layout-wrapper';\n\n// ** Route Components\nimport PublicRoute from '@components/routes/PublicRoute';\nimport PrivateRoute from '@components/routes/PrivateRoute';\n\n// ** Utils\nimport { isObjEmpty } from '@utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getLayout = {\n  blank: /*#__PURE__*/_jsxDEV(BlankLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this),\n  vertical: /*#__PURE__*/_jsxDEV(VerticalLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 13\n  }, this),\n  horizontal: /*#__PURE__*/_jsxDEV(HorizontalLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 15\n  }, this)\n};\n\n// ** Document title\nconst TemplateTitle = '%s - Vuexy React Admin Template';\n\n// ** Default Route\nconst DefaultRoute = '/dashboard/ecommerce';\n\n// ** Merge Routes\nconst Routes = [...AuthenticationRoutes, ...DashboardRoutes, ...AppRoutes, ...PagesRoutes, ...UiElementRoutes, ...ExtensionsRoutes, ...PageLayoutsRoutes, ...FormRoutes, ...TablesRoutes, ...ChartsRoutes];\nconst getRouteMeta = route => {\n  if (isObjEmpty(route.element.props)) {\n    if (route.meta) {\n      return {\n        routeMeta: route.meta\n      };\n    } else {\n      return {};\n    }\n  }\n};\n\n// ** Return Filtered Array of Routes & Paths\nconst MergeLayoutRoutes = (layout, defaultLayout) => {\n  const LayoutRoutes = [];\n  if (Routes) {\n    Routes.filter(route => {\n      let isBlank = false;\n      // ** Checks if Route layout or Default layout matches current layout\n      if (route.meta && route.meta.layout && route.meta.layout === layout || (route.meta === undefined || route.meta.layout === undefined) && defaultLayout === layout) {\n        let RouteTag = PrivateRoute;\n\n        // ** Check for public or private route\n        if (route.meta) {\n          route.meta.layout === 'blank' ? isBlank = true : isBlank = false;\n          RouteTag = route.meta.publicRoute ? PublicRoute : PrivateRoute;\n        }\n        if (route.element) {\n          const Wrapper =\n          // eslint-disable-next-line multiline-ternary\n          isObjEmpty(route.element.props) && isBlank === false ?\n          // eslint-disable-next-line multiline-ternary\n          LayoutWrapper : Fragment;\n          route.element = /*#__PURE__*/_jsxDEV(Wrapper, {\n            ...(isBlank === false ? getRouteMeta(route) : {}),\n            children: /*#__PURE__*/_jsxDEV(RouteTag, {\n              route: route,\n              children: route.element\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this);\n        }\n\n        // Push route to LayoutRoutes\n        LayoutRoutes.push(route);\n      }\n      return LayoutRoutes;\n    });\n  }\n  return LayoutRoutes;\n};\n_c = MergeLayoutRoutes;\nconst getRoutes = layout => {\n  const defaultLayout = layout || 'vertical';\n  const layouts = ['vertical', 'horizontal', 'blank'];\n  const AllRoutes = [];\n  layouts.forEach(layoutItem => {\n    const LayoutRoutes = MergeLayoutRoutes(layoutItem, defaultLayout);\n    AllRoutes.push({\n      path: '/',\n      element: getLayout[layoutItem] || getLayout[defaultLayout],\n      children: LayoutRoutes\n    });\n  });\n  return AllRoutes;\n};\nexport { DefaultRoute, TemplateTitle, Routes, getRoutes };\nvar _c;\n$RefreshReg$(_c, \"MergeLayoutRoutes\");","map":{"version":3,"names":["Fragment","AppRoutes","FormRoutes","PagesRoutes","TablesRoutes","ChartsRoutes","DashboardRoutes","UiElementRoutes","ExtensionsRoutes","PageLayoutsRoutes","AuthenticationRoutes","BlankLayout","VerticalLayout","HorizontalLayout","LayoutWrapper","PublicRoute","PrivateRoute","isObjEmpty","jsxDEV","_jsxDEV","getLayout","blank","fileName","_jsxFileName","lineNumber","columnNumber","vertical","horizontal","TemplateTitle","DefaultRoute","Routes","getRouteMeta","route","element","props","meta","routeMeta","MergeLayoutRoutes","layout","defaultLayout","LayoutRoutes","filter","isBlank","undefined","RouteTag","publicRoute","Wrapper","children","push","_c","getRoutes","layouts","AllRoutes","forEach","layoutItem","path","$RefreshReg$"],"sources":["C:/Users/Hai Hong/Desktop/EXAI/EXAI/src/router/routes/index.js"],"sourcesContent":["// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Routes Imports\r\nimport AppRoutes from './Apps'\r\nimport FormRoutes from './Forms'\r\nimport PagesRoutes from './Pages'\r\nimport TablesRoutes from './Tables'\r\nimport ChartsRoutes from './Charts'\r\nimport DashboardRoutes from './Dashboards'\r\nimport UiElementRoutes from './UiElements'\r\nimport ExtensionsRoutes from './Extensions'\r\nimport PageLayoutsRoutes from './PageLayouts'\r\nimport AuthenticationRoutes from './Authentication'\r\n\r\n// ** Layouts\r\nimport BlankLayout from '@layouts/BlankLayout'\r\nimport VerticalLayout from '@src/layouts/VerticalLayout'\r\nimport HorizontalLayout from '@src/layouts/HorizontalLayout'\r\nimport LayoutWrapper from '@src/@core/layouts/components/layout-wrapper'\r\n\r\n// ** Route Components\r\nimport PublicRoute from '@components/routes/PublicRoute'\r\nimport PrivateRoute from '@components/routes/PrivateRoute'\r\n\r\n// ** Utils\r\nimport { isObjEmpty } from '@utils'\r\n\r\nconst getLayout = {\r\n  blank: <BlankLayout />,\r\n  vertical: <VerticalLayout />,\r\n  horizontal: <HorizontalLayout />\r\n}\r\n\r\n// ** Document title\r\nconst TemplateTitle = '%s - Vuexy React Admin Template'\r\n\r\n// ** Default Route\r\nconst DefaultRoute = '/dashboard/ecommerce'\r\n\r\n// ** Merge Routes\r\nconst Routes = [\r\n  ...AuthenticationRoutes,\r\n  ...DashboardRoutes,\r\n  ...AppRoutes,\r\n  ...PagesRoutes,\r\n  ...UiElementRoutes,\r\n  ...ExtensionsRoutes,\r\n  ...PageLayoutsRoutes,\r\n  ...FormRoutes,\r\n  ...TablesRoutes,\r\n  ...ChartsRoutes\r\n]\r\n\r\nconst getRouteMeta = route => {\r\n  if (isObjEmpty(route.element.props)) {\r\n    if (route.meta) {\r\n      return { routeMeta: route.meta }\r\n    } else {\r\n      return {}\r\n    }\r\n  }\r\n}\r\n\r\n// ** Return Filtered Array of Routes & Paths\r\nconst MergeLayoutRoutes = (layout, defaultLayout) => {\r\n  const LayoutRoutes = []\r\n\r\n  if (Routes) {\r\n    Routes.filter(route => {\r\n      let isBlank = false\r\n      // ** Checks if Route layout or Default layout matches current layout\r\n      if (\r\n        (route.meta && route.meta.layout && route.meta.layout === layout) ||\r\n        ((route.meta === undefined || route.meta.layout === undefined) && defaultLayout === layout)\r\n      ) {\r\n        let RouteTag = PrivateRoute\r\n\r\n        // ** Check for public or private route\r\n        if (route.meta) {\r\n          route.meta.layout === 'blank' ? (isBlank = true) : (isBlank = false)\r\n          RouteTag = route.meta.publicRoute ? PublicRoute : PrivateRoute\r\n        }\r\n        if (route.element) {\r\n          const Wrapper =\r\n            // eslint-disable-next-line multiline-ternary\r\n            isObjEmpty(route.element.props) && isBlank === false\r\n              ? // eslint-disable-next-line multiline-ternary\r\n                LayoutWrapper\r\n              : Fragment\r\n\r\n          route.element = (\r\n            <Wrapper {...(isBlank === false ? getRouteMeta(route) : {})}>\r\n              <RouteTag route={route}>{route.element}</RouteTag>\r\n            </Wrapper>\r\n          )\r\n        }\r\n\r\n        // Push route to LayoutRoutes\r\n        LayoutRoutes.push(route)\r\n      }\r\n      return LayoutRoutes\r\n    })\r\n  }\r\n  return LayoutRoutes\r\n}\r\n\r\nconst getRoutes = layout => {\r\n  const defaultLayout = layout || 'vertical'\r\n  const layouts = ['vertical', 'horizontal', 'blank']\r\n\r\n  const AllRoutes = []\r\n\r\n  layouts.forEach(layoutItem => {\r\n    const LayoutRoutes = MergeLayoutRoutes(layoutItem, defaultLayout)\r\n\r\n    AllRoutes.push({\r\n      path: '/',\r\n      element: getLayout[layoutItem] || getLayout[defaultLayout],\r\n      children: LayoutRoutes\r\n    })\r\n  })\r\n  return AllRoutes\r\n}\r\n\r\nexport { DefaultRoute, TemplateTitle, Routes, getRoutes }\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}