{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hai Hong\\\\Desktop\\\\EXAI\\\\EXAI\\\\src\\\\views\\\\pages\\\\knowledge-base\\\\KnowledgeBaseCategory.js\",\n  _s = $RefreshSig$();\n// ** React Imports\nimport { Link, useParams } from 'react-router-dom';\nimport { Fragment, useState, useEffect } from 'react';\n\n// ** Third Party Components\nimport axios from 'axios';\nimport * as Icon from 'react-feather';\nimport classnames from 'classnames';\n\n// ** Custom Components\nimport Breadcrumbs from '@components/breadcrumbs';\n\n// ** Demo Components\nimport KnowledgeBaseHeader from './KnowledgeBaseHeader';\n\n// ** Reactstrap Imports\nimport { Row, Col, Card, CardBody, ListGroup, ListGroupItem } from 'reactstrap';\n\n// ** Styles\nimport '@styles/base/pages/page-knowledge-base.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KnowledgeBaseCategory = () => {\n  _s();\n  // ** States\n  const [data, setData] = useState(null),\n    [filteredData, setFilteredData] = useState([]),\n    [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    axios.get('/faq/data/category').then(res => setData(res.data));\n  }, []);\n  const params = useParams();\n  const Content = _ref => {\n    let {\n      item\n    } = _ref;\n    const IconTag = Icon[item.icon];\n    return /*#__PURE__*/_jsxDEV(Col, {\n      className: \"kb-search-content\",\n      md: \"4\",\n      sm: \"6\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"kb-title\",\n            children: [/*#__PURE__*/_jsxDEV(IconTag, {\n              size: 20,\n              className: classnames('me-50', {\n                [item.iconColor]: item.iconColor\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [item.title, \" \", \"(\".concat(item.questions.length, \")\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n            className: \"list-group-circle mt-2\",\n            children: item.questions.map(listItem => /*#__PURE__*/_jsxDEV(ListGroupItem, {\n              tag: Link,\n              to: \"/pages/knowledge-base/\".concat(params.category, \"/\").concat(listItem.slug),\n              className: \"text-body\",\n              children: listItem.question\n            }, listItem.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  };\n  const renderContent = () => {\n    const dataToMap = searchTerm.length ? filteredData : data;\n    return dataToMap.map(item => /*#__PURE__*/_jsxDEV(Content, {\n      item: item\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 34\n    }, this));\n  };\n  const handleFilter = e => {\n    const value = e.target.value,\n      knowledgeBaseSearchQueryLower = e.target.value.toLowerCase();\n    setSearchTerm(e.target.value);\n    let arr = [];\n    if (value.length) {\n      arr = data.filter(item => {\n        return item.title.toLowerCase().includes(knowledgeBaseSearchQueryLower) || item.questions.filter(queObj => queObj.question.toLowerCase().includes(knowledgeBaseSearchQueryLower)).length;\n      });\n    }\n    setFilteredData([...arr]);\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n      title: \"Knowledge Base\",\n      data: [{\n        title: 'Pages'\n      }, {\n        title: 'Knowledge Base'\n      }, {\n        title: 'Category'\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(KnowledgeBaseHeader, {\n      searchTerm: searchTerm,\n      setSearchTerm: setSearchTerm,\n      handleFilter: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), data !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"knowledge-base-category\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"kb-search-content-info match-height\",\n        children: renderContent()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(KnowledgeBaseCategory, \"t7qaaIkUu+fRIqqXVeNgFZAM+Wc=\", false, function () {\n  return [useParams];\n});\n_c = KnowledgeBaseCategory;\nexport default KnowledgeBaseCategory;\nvar _c;\n$RefreshReg$(_c, \"KnowledgeBaseCategory\");","map":{"version":3,"names":["Link","useParams","Fragment","useState","useEffect","axios","Icon","classnames","Breadcrumbs","KnowledgeBaseHeader","Row","Col","Card","CardBody","ListGroup","ListGroupItem","jsxDEV","_jsxDEV","KnowledgeBaseCategory","_s","data","setData","filteredData","setFilteredData","searchTerm","setSearchTerm","get","then","res","params","Content","_ref","item","IconTag","icon","className","md","sm","children","size","iconColor","fileName","_jsxFileName","lineNumber","columnNumber","title","concat","questions","length","map","listItem","tag","to","category","slug","question","id","renderContent","dataToMap","handleFilter","e","value","target","knowledgeBaseSearchQueryLower","toLowerCase","arr","filter","includes","queObj","_c","$RefreshReg$"],"sources":["C:/Users/Hai Hong/Desktop/EXAI/EXAI/src/views/pages/knowledge-base/KnowledgeBaseCategory.js"],"sourcesContent":["// ** React Imports\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { Fragment, useState, useEffect } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport * as Icon from 'react-feather'\r\nimport classnames from 'classnames'\r\n\r\n// ** Custom Components\r\nimport Breadcrumbs from '@components/breadcrumbs'\r\n\r\n// ** Demo Components\r\nimport KnowledgeBaseHeader from './KnowledgeBaseHeader'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, Card, CardBody, ListGroup, ListGroupItem } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/base/pages/page-knowledge-base.scss'\r\n\r\nconst KnowledgeBaseCategory = () => {\r\n  // ** States\r\n  const [data, setData] = useState(null),\r\n    [filteredData, setFilteredData] = useState([]),\r\n    [searchTerm, setSearchTerm] = useState('')\r\n\r\n  useEffect(() => {\r\n    axios.get('/faq/data/category').then(res => setData(res.data))\r\n  }, [])\r\n\r\n  const params = useParams()\r\n\r\n  const Content = ({ item }) => {\r\n    const IconTag = Icon[item.icon]\r\n    return (\r\n      <Col className='kb-search-content' md='4' sm='6'>\r\n        <Card>\r\n          <CardBody>\r\n            <h6 className='kb-title'>\r\n              <IconTag\r\n                size={20}\r\n                className={classnames('me-50', {\r\n                  [item.iconColor]: item.iconColor\r\n                })}\r\n              />\r\n              <span>\r\n                {item.title} {`(${item.questions.length})`}\r\n              </span>\r\n            </h6>\r\n            <ListGroup className='list-group-circle mt-2'>\r\n              {item.questions.map(listItem => (\r\n                <ListGroupItem\r\n                  tag={Link}\r\n                  to={`/pages/knowledge-base/${params.category}/${listItem.slug}`}\r\n                  className='text-body'\r\n                  key={listItem.id}\r\n                >\r\n                  {listItem.question}\r\n                </ListGroupItem>\r\n              ))}\r\n            </ListGroup>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    )\r\n  }\r\n\r\n  const renderContent = () => {\r\n    const dataToMap = searchTerm.length ? filteredData : data\r\n\r\n    return dataToMap.map(item => <Content key={item.id} item={item} />)\r\n  }\r\n\r\n  const handleFilter = e => {\r\n    const value = e.target.value,\r\n      knowledgeBaseSearchQueryLower = e.target.value.toLowerCase()\r\n\r\n    setSearchTerm(e.target.value)\r\n\r\n    let arr = []\r\n\r\n    if (value.length) {\r\n      arr = data.filter(item => {\r\n        return (\r\n          item.title.toLowerCase().includes(knowledgeBaseSearchQueryLower) ||\r\n          item.questions.filter(queObj => queObj.question.toLowerCase().includes(knowledgeBaseSearchQueryLower)).length\r\n        )\r\n      })\r\n    }\r\n\r\n    setFilteredData([...arr])\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs\r\n        title='Knowledge Base'\r\n        data={[{ title: 'Pages' }, { title: 'Knowledge Base' }, { title: 'Category' }]}\r\n      />\r\n      <KnowledgeBaseHeader searchTerm={searchTerm} setSearchTerm={setSearchTerm} handleFilter={handleFilter} />\r\n      {data !== null ? (\r\n        <div id='knowledge-base-category'>\r\n          <Row className='kb-search-content-info match-height'>{renderContent()}</Row>\r\n        </div>\r\n      ) : null}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default KnowledgeBaseCategory\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}