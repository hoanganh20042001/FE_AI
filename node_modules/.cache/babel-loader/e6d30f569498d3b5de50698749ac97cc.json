{"ast":null,"code":"import { DefaultRoute } from '../router/routes';\n\n// ** Checks if an object is empty (returns boolean)\nexport const isObjEmpty = obj => Object.keys(obj).length === 0;\n\n// ** Returns K format from a number\nexport const kFormatter = num => num > 999 ? \"\".concat((num / 1000).toFixed(1), \"k\") : num;\n\n// ** Converts HTML to string\nexport const htmlToString = html => html.replace(/<\\/?[^>]+(>|$)/g, '');\n\n// ** Checks if the passed date is today\nconst isToday = date => {\n  const today = new Date();\n  return /* eslint-disable operator-linebreak */(\n    date.getDate() === today.getDate() && date.getMonth() === today.getMonth() && date.getFullYear() === today.getFullYear()\n    /* eslint-enable */\n  );\n};\n\n/**\r\n ** Format and return date in Humanize format\r\n ** Intl docs: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/format\r\n ** Intl Constructor: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat\r\n * @param {String} value date to format\r\n * @param {Object} formatting Intl object to format with\r\n */\nexport const formatDate = function (value) {\n  let formatting = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    month: 'short',\n    day: 'numeric',\n    year: 'numeric'\n  };\n  if (!value) return value;\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value));\n};\n\n// ** Returns short month of passed date\nexport const formatDateToMonthShort = function (value) {\n  let toTimeForCurrentDay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  const date = new Date(value);\n  let formatting = {\n    month: 'short',\n    day: 'numeric'\n  };\n  if (toTimeForCurrentDay && isToday(date)) {\n    formatting = {\n      hour: 'numeric',\n      minute: 'numeric'\n    };\n  }\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value));\n};\n\n/**\r\n ** Return if user is logged in\r\n ** This is completely up to you and how you want to store the token in your frontend application\r\n *  ? e.g. If you are using cookies to store the application please update this function\r\n */\nexport const isUserLoggedIn = () => localStorage.getItem('userData');\nexport const getUserData = () => JSON.parse(localStorage.getItem('userData'));\n\n/**\r\n ** This function is used for demo purpose route navigation\r\n ** In real app you won't need this function because your app will navigate to same route for each users regardless of ability\r\n ** Please note role field is just for showing purpose it's not used by anything in frontend\r\n ** We are checking role just for ease\r\n * ? NOTE: If you have different pages to navigate based on user ability then this function can be useful. However, you need to update it.\r\n * @param {String} userRole Role of user\r\n */\nexport const getHomeRouteForLoggedInUser = userRole => {\n  if (userRole === 'admin') return DefaultRoute;\n  if (userRole === 'client') return '/access-control';\n  return '/login';\n};\n\n// ** React Select Theme Colors\nexport const selectThemeColors = theme => ({\n  ...theme,\n  colors: {\n    ...theme.colors,\n    primary25: '#7367f01a',\n    // for option hover bg-color\n    primary: '#7367f0',\n    // for selected option bg-color\n    neutral10: '#7367f0',\n    // for tags bg-color\n    neutral20: '#ededed',\n    // for input border-color\n    neutral30: '#ededed' // for input hover border-color\n  }\n});\n/*eslint-disable */\nconst formatNumber = function () {\n  let num = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let split = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \",\";\n  return num ? num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, split) : \"\";\n};\nconst formatNumberFloat = function () {\n  let num = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let df = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  let split = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \",\";\n  try {\n    let [inter = 0, float = 0] = \"\".concat(num).split(\".\");\n    return inter.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, split) + \".\" + float;\n  } catch (error) {\n    return df;\n  }\n};\nconst getLoanLimit = loan_limit => {\n  let c = 0;\n  try {\n    const {\n      Amount_Credit = 0,\n      Amount_Debit = 0,\n      Amount_Release = 0\n    } = loan_limit;\n    if (Amount_Credit) c += Amount_Credit;\n    if (Amount_Debit) c += Amount_Debit;\n    if (Amount_Release) c += Amount_Release;\n  } catch (error) {}\n  return c;\n};\nconst moneyToNumber = function () {\n  let num = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let split = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \",\";\n  return num ? num.split(split).join(\"\") : \"\";\n};\nconst toDateString = date => {\n  let today = new Date(date);\n  let dd = String(today.getDate()).padStart(2, \"0\");\n  let mm = String(today.getMonth() + 1).padStart(2, \"0\");\n  let yyyy = today.getFullYear();\n  return dd + \"/\" + mm + \"/\" + yyyy;\n};\nconst toDateString1 = (date, term) => {\n  let today = new Date(date);\n  let termDay = today.getTime() + 1000 * 60 * 60 * 24 * 30 * term;\n  termDay = new Date(termDay);\n  let dd = String(termDay.getDate()).padStart(2, \"0\");\n  let mm = String(termDay.getMonth() + 1).padStart(2, \"0\");\n  let yyyy = termDay.getFullYear();\n  return dd + \"/\" + mm + \"/\" + yyyy;\n};\nconst toDateStringFormat = date => {\n  let today = new Date(date);\n  let dd = String(today.getDate()).padStart(2, \"0\");\n  let mm = String(today.getMonth() + 1).padStart(2, \"0\");\n  let yyyy = today.getFullYear();\n  return dd + \"-\" + mm + \"-\" + yyyy;\n};\nconst toDateStringFormat1 = date => {\n  let today = new Date(date);\n  let dd = String(today.getDate()).padStart(2, \"0\");\n  let mm = String(today.getMonth() + 1).padStart(2, \"0\");\n  let yyyy = today.getFullYear();\n  return yyyy + \"-\" + mm + \"-\" + dd;\n};\nconst toDateTimeString = date => {\n  // let today = new Date(date)\n  // let hh = String(today.getHours()).padStart(2, \"0\")\n  // let dd = String(today.getDate()).padStart(2, \"0\")\n  // let mm = String(today.getMonth() + 1).padStart(2, \"0\")\n  // let yyyy = today.getFullYear()\n\n  // return hh + \" giờ ngày \" + dd + \"/\" + mm + \"/\" + yyyy\n  let today = new Date(date);\n  let hh = String(today.getHours()).padStart(2, \"0\");\n  let MM = String(today.getMinutes()).padStart(2, \"0\");\n  let ss = String(today.getSeconds()).padStart(2, \"0\");\n  let dd = String(today.getDate()).padStart(2, \"0\");\n  let mm = String(today.getMonth() + 1).padStart(2, \"0\");\n  let yyyy = today.getFullYear();\n  return dd + \"/\" + mm + \"/\" + yyyy + \" \" + hh + \":\" + MM + \":\" + ss;\n};\nconst compareDateTimeEx = date => {\n  let end = new Date(date);\n  let start = new Date();\n  //convert to hour remain\n  let hourRemain = (end.getTime() - start.getTime()) / 3600000;\n  // ** if true: warning \n  if (hourRemain <= 12 && hourRemain >= 0) {\n    return true;\n  }\n  return false;\n};\nconst moneyToText = so => {\n  var mangso = [\"không\", \"một\", \"hai\", \"ba\", \"bốn\", \"năm\", \"sáu\", \"bảy\", \"tám\", \"chín\"];\n  const dochangchuc = (so, daydu) => {\n    var chuoi = \"\";\n    var chuc = Math.floor(so / 10);\n    var donvi = so % 10;\n    if (chuc > 1) {\n      chuoi = \" \" + mangso[chuc] + \" mươi\";\n      if (donvi == 1) {\n        chuoi += \" mốt\";\n      }\n    } else if (chuc == 1) {\n      chuoi = \" mười\";\n      if (donvi == 1) {\n        chuoi += \" một\";\n      }\n    } else if (daydu && donvi > 0) {\n      chuoi = \" lẻ\";\n    }\n    if (donvi == 5 && chuc > 1) {\n      chuoi += \" lăm\";\n    } else if (donvi > 1 || donvi == 1 && chuc == 0) {\n      chuoi += \" \" + mangso[donvi];\n    }\n    return chuoi;\n  };\n  const docblock = (so, daydu) => {\n    var chuoi = \"\";\n    var tram = Math.floor(so / 100);\n    so = so % 100;\n    if (daydu || tram > 0) {\n      chuoi = \" \" + mangso[tram] + \" trăm\";\n      chuoi += dochangchuc(so, true);\n    } else {\n      chuoi = dochangchuc(so, false);\n    }\n    return chuoi;\n  };\n  const dochangtrieu = (so, daydu) => {\n    var chuoi = \"\";\n    var trieu = Math.floor(so / 1000000);\n    so = so % 1000000;\n    if (trieu > 0) {\n      chuoi = docblock(trieu, daydu) + \" triệu\";\n      daydu = true;\n    }\n    var nghin = Math.floor(so / 1000);\n    so = so % 1000;\n    if (nghin > 0) {\n      chuoi += docblock(nghin, daydu) + \" nghìn\";\n      daydu = true;\n    }\n    if (so > 0) {\n      chuoi += docblock(so, daydu);\n    }\n    return chuoi;\n  };\n  if (so == 0) return mangso[0];\n  var chuoi = \"\",\n    hauto = \"\";\n  do {\n    var ty = so % 1000000000;\n    so = Math.floor(so / 1000000000);\n    if (so > 0) {\n      chuoi = dochangtrieu(ty, true) + hauto + chuoi;\n    } else {\n      chuoi = dochangtrieu(ty, false) + hauto + chuoi;\n    }\n    hauto = \" tỷ\";\n  } while (so > 0);\n  chuoi = chuoi.trim();\n  if (chuoi.length > 0) chuoi = chuoi[0].toUpperCase() + chuoi.substr(1);\n  return chuoi.trim() + \" đồng\";\n};\nconst getLoanContractStatus = status => {\n  switch (status) {\n    case 1:\n      return {\n        text: \"Đang chờ giải ngân\"\n        // color: colors.primary1\n      };\n    case 2:\n      return {\n        text: \"Đã giải ngân\"\n        // color: colors.primary3\n      };\n    case 3:\n      return {\n        text: \"Đã tất toán\"\n        // color: colors.primary4\n      };\n    case 4:\n      return {\n        text: \"Đã huỷ\"\n        // color: colors.primary5\n      };\n  }\n  return {\n    text: \"\"\n    // color: colors.primary\n  };\n};\nconst getMainLoanContractStatus = status => {\n  switch (status) {\n    case 1:\n      return {\n        text: \"Đang chờ khoản vay được chọn\",\n        color: \"#01a79d\"\n      };\n    case 2:\n      return {\n        text: \"Đang chờ giải ngân\",\n        color: \"#01a79d\"\n      };\n    case 6:\n      return {\n        text: \"Đang chờ tách khoản vay\",\n        color: \"#01a79d\"\n      };\n    case 3:\n      return {\n        text: \"Đã giải ngân\",\n        color: \"#01a79d\"\n      };\n    case 4:\n      return {\n        text: \"Đã tất toán\",\n        color: \"#01a79d\"\n      };\n    case 5:\n      return {\n        text: \"Hủy\",\n        color: \"red\"\n      };\n    case 7:\n      return {\n        text: \"Đang chờ gia hạn\",\n        color: \"#01a79d\"\n      };\n    case 8:\n      return {\n        text: \"Đang làm thủ tục đáo hạn\",\n        color: \"#01a79d\"\n      };\n    case 9:\n      return {\n        text: \"Đã gia hạn\",\n        color: \"#01a79d\"\n      };\n    case 10:\n      return {\n        text: \"Quá hạn\",\n        color: \"#01a79d\"\n      };\n  }\n  return {\n    text: \"\",\n    color: \"#01a79d\"\n  };\n};\nconst getAutoInvestContractStatus = status => {\n  switch (status) {\n    case 1:\n      return {\n        text: \"Đang chờ giới thiệu khoản vay\"\n        // color: colors.primary1\n      };\n    case 2:\n      return {\n        text: \"Đang chờ nhà đầu tư chọn khoản vay\"\n        // color: colors.primary1\n      };\n    case 3:\n      return {\n        text: \"Đã chọn khoản vay\"\n        // color: colors.primary2\n      };\n    case 4:\n      return {\n        text: \"Đang giải ngân\"\n        // color: colors.primary3\n      };\n    case 5:\n      return {\n        text: \"Đã tất toán\"\n        // color: colors.primary4\n      };\n    case 6:\n      return {\n        text: \"Đã huỷ\"\n        // color: colors.primary5\n      };\n  }\n  return {\n    text: \"\"\n    // color: colors.primary\n  };\n};\nconst createArrayRange = function (s, e) {\n  let step = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  let start = s;\n  let end = e;\n  if (!end) {\n    end = start;\n    start = 0;\n  }\n  return Array.from({\n    length: (end - start + step) / step\n  }, (v, k) => k * step).map(e => e + start);\n};\nconst useToDayDate = () => new Date(new Date().toJSON().split(\"T\")[0] + \"T00:00:00.000Z\");\n/*eslint-enable */\nexport { formatNumber, toDateString, moneyToNumber, moneyToText, formatNumberFloat, toDateTimeString, compareDateTimeEx, getLoanContractStatus, getLoanLimit, getMainLoanContractStatus, getAutoInvestContractStatus, createArrayRange, useToDayDate, toDateStringFormat, toDateString1, toDateStringFormat1 };","map":{"version":3,"names":["DefaultRoute","isObjEmpty","obj","Object","keys","length","kFormatter","num","concat","toFixed","htmlToString","html","replace","isToday","date","today","Date","getDate","getMonth","getFullYear","formatDate","value","formatting","arguments","undefined","month","day","year","Intl","DateTimeFormat","format","formatDateToMonthShort","toTimeForCurrentDay","hour","minute","isUserLoggedIn","localStorage","getItem","getUserData","JSON","parse","getHomeRouteForLoggedInUser","userRole","selectThemeColors","theme","colors","primary25","primary","neutral10","neutral20","neutral30","formatNumber","split","toString","formatNumberFloat","df","inter","float","error","getLoanLimit","loan_limit","c","Amount_Credit","Amount_Debit","Amount_Release","moneyToNumber","join","toDateString","dd","String","padStart","mm","yyyy","toDateString1","term","termDay","getTime","toDateStringFormat","toDateStringFormat1","toDateTimeString","hh","getHours","MM","getMinutes","ss","getSeconds","compareDateTimeEx","end","start","hourRemain","moneyToText","so","mangso","dochangchuc","daydu","chuoi","chuc","Math","floor","donvi","docblock","tram","dochangtrieu","trieu","nghin","hauto","ty","trim","toUpperCase","substr","getLoanContractStatus","status","text","getMainLoanContractStatus","color","getAutoInvestContractStatus","createArrayRange","s","e","step","Array","from","v","k","map","useToDayDate","toJSON"],"sources":["C:/Users/Hai Hong/Desktop/EXAI/EXAI/src/utility/Utils.js"],"sourcesContent":["import { DefaultRoute } from '../router/routes'\r\n\r\n// ** Checks if an object is empty (returns boolean)\r\nexport const isObjEmpty = obj => Object.keys(obj).length === 0\r\n\r\n// ** Returns K format from a number\r\nexport const kFormatter = num => (num > 999 ? `${(num / 1000).toFixed(1)}k` : num)\r\n\r\n// ** Converts HTML to string\r\nexport const htmlToString = html => html.replace(/<\\/?[^>]+(>|$)/g, '')\r\n\r\n// ** Checks if the passed date is today\r\nconst isToday = date => {\r\n  const today = new Date()\r\n  return (\r\n    /* eslint-disable operator-linebreak */\r\n    date.getDate() === today.getDate() &&\r\n    date.getMonth() === today.getMonth() &&\r\n    date.getFullYear() === today.getFullYear()\r\n    /* eslint-enable */\r\n  )\r\n}\r\n\r\n/**\r\n ** Format and return date in Humanize format\r\n ** Intl docs: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/format\r\n ** Intl Constructor: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat\r\n * @param {String} value date to format\r\n * @param {Object} formatting Intl object to format with\r\n */\r\nexport const formatDate = (value, formatting = { month: 'short', day: 'numeric', year: 'numeric' }) => {\r\n  if (!value) return value\r\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\r\n}\r\n\r\n// ** Returns short month of passed date\r\nexport const formatDateToMonthShort = (value, toTimeForCurrentDay = true) => {\r\n  const date = new Date(value)\r\n  let formatting = { month: 'short', day: 'numeric' }\r\n\r\n  if (toTimeForCurrentDay && isToday(date)) {\r\n    formatting = { hour: 'numeric', minute: 'numeric' }\r\n  }\r\n\r\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\r\n}\r\n\r\n/**\r\n ** Return if user is logged in\r\n ** This is completely up to you and how you want to store the token in your frontend application\r\n *  ? e.g. If you are using cookies to store the application please update this function\r\n */\r\nexport const isUserLoggedIn = () => localStorage.getItem('userData')\r\nexport const getUserData = () => JSON.parse(localStorage.getItem('userData'))\r\n\r\n/**\r\n ** This function is used for demo purpose route navigation\r\n ** In real app you won't need this function because your app will navigate to same route for each users regardless of ability\r\n ** Please note role field is just for showing purpose it's not used by anything in frontend\r\n ** We are checking role just for ease\r\n * ? NOTE: If you have different pages to navigate based on user ability then this function can be useful. However, you need to update it.\r\n * @param {String} userRole Role of user\r\n */\r\nexport const getHomeRouteForLoggedInUser = userRole => {\r\n  if (userRole === 'admin') return DefaultRoute\r\n  if (userRole === 'client') return '/access-control'\r\n  return '/login'\r\n}\r\n\r\n// ** React Select Theme Colors\r\nexport const selectThemeColors = theme => ({\r\n  ...theme,\r\n  colors: {\r\n    ...theme.colors,\r\n    primary25: '#7367f01a', // for option hover bg-color\r\n    primary: '#7367f0', // for selected option bg-color\r\n    neutral10: '#7367f0', // for tags bg-color\r\n    neutral20: '#ededed', // for input border-color\r\n    neutral30: '#ededed' // for input hover border-color\r\n  }\r\n})\r\n/*eslint-disable */\r\nconst formatNumber = (num = \"\", split = \",\") =>\r\n  num ? num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, split) : \"\"\r\n\r\nconst formatNumberFloat = (num = \"\", df = \"\", split = \",\") => {\r\n  try {\r\n    let [inter = 0, float = 0] = `${num}`.split(\".\")\r\n    return (\r\n      inter.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, split) + \".\" + float\r\n    )\r\n  } catch (error) {\r\n    return df\r\n  }\r\n}\r\n\r\nconst getLoanLimit = loan_limit => {\r\n  let c = 0\r\n\r\n  try {\r\n    const {\r\n      Amount_Credit = 0,\r\n      Amount_Debit = 0,\r\n      Amount_Release = 0\r\n    } = loan_limit\r\n    if (Amount_Credit) c += Amount_Credit\r\n    if (Amount_Debit) c += Amount_Debit\r\n    if (Amount_Release) c += Amount_Release\r\n  } catch (error) { }\r\n  return c\r\n}\r\n\r\nconst moneyToNumber = (num = \"\", split = \",\") =>\r\n  num ? num.split(split).join(\"\") : \"\"\r\n\r\nconst toDateString = date => {\r\n  let today = new Date(date)\r\n  let dd = String(today.getDate()).padStart(2, \"0\")\r\n  let mm = String(today.getMonth() + 1).padStart(2, \"0\")\r\n  let yyyy = today.getFullYear()\r\n\r\n  return dd + \"/\" + mm + \"/\" + yyyy\r\n}\r\nconst toDateString1 = (date, term) => {\r\n\r\n  let today = new Date(date)\r\n  \r\n  let termDay = today.getTime() + 1000 * 60 * 60 * 24 * 30 * term\r\n  termDay = new Date(termDay)\r\n  let dd = String(termDay.getDate()).padStart(2, \"0\")\r\n  let mm = String(termDay.getMonth()+1).padStart(2, \"0\")\r\n  let yyyy = termDay.getFullYear()\r\n\r\n  return dd + \"/\" + mm + \"/\" + yyyy\r\n}\r\nconst toDateStringFormat = date => {\r\n  let today = new Date(date)\r\n  let dd = String(today.getDate()).padStart(2, \"0\")\r\n  let mm = String(today.getMonth() + 1).padStart(2, \"0\")\r\n  let yyyy = today.getFullYear()\r\n\r\n  return dd + \"-\" + mm + \"-\" + yyyy\r\n}\r\nconst toDateStringFormat1 = date => {\r\n  let today = new Date(date)\r\n  let dd = String(today.getDate()).padStart(2, \"0\")\r\n  let mm = String(today.getMonth() + 1).padStart(2, \"0\")\r\n  let yyyy = today.getFullYear()\r\n\r\n  return yyyy + \"-\" + mm + \"-\" + dd\r\n}\r\nconst toDateTimeString = date => {\r\n  // let today = new Date(date)\r\n  // let hh = String(today.getHours()).padStart(2, \"0\")\r\n  // let dd = String(today.getDate()).padStart(2, \"0\")\r\n  // let mm = String(today.getMonth() + 1).padStart(2, \"0\")\r\n  // let yyyy = today.getFullYear()\r\n\r\n  // return hh + \" giờ ngày \" + dd + \"/\" + mm + \"/\" + yyyy\r\n  let today = new Date(date)\r\n  let hh = String(today.getHours()).padStart(2, \"0\")\r\n  let MM = String(today.getMinutes()).padStart(2, \"0\")\r\n  let ss = String(today.getSeconds()).padStart(2, \"0\")\r\n  let dd = String(today.getDate()).padStart(2, \"0\")\r\n  let mm = String(today.getMonth() + 1).padStart(2, \"0\")\r\n  let yyyy = today.getFullYear()\r\n\r\n  return dd + \"/\" + mm + \"/\" + yyyy + \" \" + hh + \":\" + MM + \":\" + ss\r\n}\r\n\r\nconst compareDateTimeEx = date => {\r\n  let end = new Date(date)\r\n  let start = new Date()\r\n  //convert to hour remain\r\n  let hourRemain = (end.getTime() - start.getTime()) / 3600000\r\n  // ** if true: warning \r\n  if (hourRemain <= 12 && hourRemain >= 0) {\r\n    return true\r\n  }\r\n  return false\r\n}\r\nconst moneyToText = so => {\r\n  var mangso = [\r\n    \"không\",\r\n    \"một\",\r\n    \"hai\",\r\n    \"ba\",\r\n    \"bốn\",\r\n    \"năm\",\r\n    \"sáu\",\r\n    \"bảy\",\r\n    \"tám\",\r\n    \"chín\"\r\n  ]\r\n  const dochangchuc = (so, daydu) => {\r\n    var chuoi = \"\"\r\n    var chuc = Math.floor(so / 10)\r\n    var donvi = so % 10\r\n    if (chuc > 1) {\r\n      chuoi = \" \" + mangso[chuc] + \" mươi\"\r\n      if (donvi == 1) {\r\n        chuoi += \" mốt\"\r\n      }\r\n    } else if (chuc == 1) {\r\n      chuoi = \" mười\"\r\n      if (donvi == 1) {\r\n        chuoi += \" một\"\r\n      }\r\n    } else if (daydu && donvi > 0) {\r\n      chuoi = \" lẻ\"\r\n    }\r\n    if (donvi == 5 && chuc > 1) {\r\n      chuoi += \" lăm\"\r\n    } else if (donvi > 1 || (donvi == 1 && chuc == 0)) {\r\n      chuoi += \" \" + mangso[donvi]\r\n    }\r\n    return chuoi\r\n  }\r\n  const docblock = (so, daydu) => {\r\n    var chuoi = \"\"\r\n    var tram = Math.floor(so / 100)\r\n    so = so % 100\r\n    if (daydu || tram > 0) {\r\n      chuoi = \" \" + mangso[tram] + \" trăm\"\r\n      chuoi += dochangchuc(so, true)\r\n    } else {\r\n      chuoi = dochangchuc(so, false)\r\n    }\r\n    return chuoi\r\n  }\r\n  const dochangtrieu = (so, daydu) => {\r\n    var chuoi = \"\"\r\n    var trieu = Math.floor(so / 1000000)\r\n    so = so % 1000000\r\n    if (trieu > 0) {\r\n      chuoi = docblock(trieu, daydu) + \" triệu\"\r\n      daydu = true\r\n    }\r\n    var nghin = Math.floor(so / 1000)\r\n    so = so % 1000\r\n    if (nghin > 0) {\r\n      chuoi += docblock(nghin, daydu) + \" nghìn\"\r\n      daydu = true\r\n    }\r\n    if (so > 0) {\r\n      chuoi += docblock(so, daydu)\r\n    }\r\n    return chuoi\r\n  }\r\n  if (so == 0) return mangso[0]\r\n  var chuoi = \"\",\r\n    hauto = \"\"\r\n  do {\r\n    var ty = so % 1000000000\r\n    so = Math.floor(so / 1000000000)\r\n    if (so > 0) {\r\n      chuoi = dochangtrieu(ty, true) + hauto + chuoi\r\n    } else {\r\n      chuoi = dochangtrieu(ty, false) + hauto + chuoi\r\n    }\r\n    hauto = \" tỷ\"\r\n  } while (so > 0)\r\n  chuoi = chuoi.trim()\r\n  if (chuoi.length > 0) chuoi = chuoi[0].toUpperCase() + chuoi.substr(1)\r\n  return chuoi.trim() + \" đồng\"\r\n}\r\nconst getLoanContractStatus = status => {\r\n  switch (status) {\r\n    case 1:\r\n      return {\r\n        text: \"Đang chờ giải ngân\",\r\n        // color: colors.primary1\r\n      };\r\n    case 2:\r\n      return {\r\n        text: \"Đã giải ngân\",\r\n        // color: colors.primary3\r\n      };\r\n    case 3:\r\n      return {\r\n        text: \"Đã tất toán\",\r\n        // color: colors.primary4\r\n      };\r\n    case 4:\r\n      return {\r\n        text: \"Đã huỷ\",\r\n        // color: colors.primary5\r\n      };\r\n  }\r\n  return {\r\n    text: \"\",\r\n    // color: colors.primary\r\n  };\r\n};\r\n\r\nconst getMainLoanContractStatus = status => {\r\n  switch (status) {\r\n    case 1:\r\n      return {\r\n        text: \"Đang chờ khoản vay được chọn\",\r\n        color: \"#01a79d\"\r\n      };\r\n    case 2:\r\n      return {\r\n        text: \"Đang chờ giải ngân\",\r\n        color: \"#01a79d\"\r\n      };\r\n    case 6:\r\n      return {\r\n        text: \"Đang chờ tách khoản vay\",\r\n        color: \"#01a79d\"\r\n      };\r\n    case 3:\r\n      return {\r\n        text: \"Đã giải ngân\",\r\n        color: \"#01a79d\"\r\n      };\r\n    case 4:\r\n      return {\r\n        text: \"Đã tất toán\",\r\n        color: \"#01a79d\"\r\n      };\r\n    case 5:\r\n      return {\r\n        text: \"Hủy\",\r\n        color: \"red\"\r\n      };\r\n    case 7:\r\n      return {\r\n        text: \"Đang chờ gia hạn\",\r\n        color: \"#01a79d\"\r\n      };\r\n    case 8:\r\n      return {\r\n        text: \"Đang làm thủ tục đáo hạn\",\r\n        color: \"#01a79d\"\r\n      };\r\n    case 9:\r\n      return {\r\n        text: \"Đã gia hạn\",\r\n        color: \"#01a79d\"\r\n      };\r\n    case 10:\r\n      return {\r\n        text: \"Quá hạn\",\r\n        color: \"#01a79d\"\r\n      };\r\n  }\r\n  return {\r\n    text: \"\",\r\n    color: \"#01a79d\"\r\n  };\r\n};\r\n\r\nconst getAutoInvestContractStatus = status => {\r\n  switch (status) {\r\n    case 1:\r\n      return {\r\n        text: \"Đang chờ giới thiệu khoản vay\",\r\n        // color: colors.primary1\r\n      };\r\n    case 2:\r\n      return {\r\n        text: \"Đang chờ nhà đầu tư chọn khoản vay\",\r\n        // color: colors.primary1\r\n      };\r\n    case 3:\r\n      return {\r\n        text: \"Đã chọn khoản vay\",\r\n        // color: colors.primary2\r\n      };\r\n    case 4:\r\n      return {\r\n        text: \"Đang giải ngân\",\r\n        // color: colors.primary3\r\n      };\r\n    case 5:\r\n      return {\r\n        text: \"Đã tất toán\",\r\n        // color: colors.primary4\r\n      };\r\n    case 6:\r\n      return {\r\n        text: \"Đã huỷ\",\r\n        // color: colors.primary5\r\n      };\r\n  }\r\n  return {\r\n    text: \"\",\r\n    // color: colors.primary\r\n  };\r\n};\r\n\r\nconst createArrayRange = (s, e, step = 1) => {\r\n  let start = s;\r\n  let end = e;\r\n  if (!end) {\r\n    end = start;\r\n    start = 0;\r\n  }\r\n  return Array.from(\r\n    { length: (end - start + step) / step },\r\n    (v, k) => k * step\r\n  ).map(e => e + start);\r\n};\r\nconst useToDayDate = () =>\r\n  new Date(new Date().toJSON().split(\"T\")[0] + \"T00:00:00.000Z\");\r\n/*eslint-enable */\r\nexport {\r\n  formatNumber,\r\n  toDateString,\r\n  moneyToNumber,\r\n  moneyToText,\r\n  formatNumberFloat,\r\n  toDateTimeString,\r\n  compareDateTimeEx,\r\n  getLoanContractStatus,\r\n  getLoanLimit,\r\n  getMainLoanContractStatus,\r\n  getAutoInvestContractStatus,\r\n  createArrayRange,\r\n  useToDayDate,\r\n  toDateStringFormat,\r\n  toDateString1,\r\n  toDateStringFormat1\r\n}"],"mappings":"AAAA,SAASA,YAAY,QAAQ,kBAAkB;;AAE/C;AACA,OAAO,MAAMC,UAAU,GAAGC,GAAG,IAAIC,MAAM,CAACC,IAAI,CAACF,GAAG,CAAC,CAACG,MAAM,KAAK,CAAC;;AAE9D;AACA,OAAO,MAAMC,UAAU,GAAGC,GAAG,IAAKA,GAAG,GAAG,GAAG,MAAAC,MAAA,CAAM,CAACD,GAAG,GAAG,IAAI,EAAEE,OAAO,CAAC,CAAC,CAAC,SAAMF,GAAI;;AAElF;AACA,OAAO,MAAMG,YAAY,GAAGC,IAAI,IAAIA,IAAI,CAACC,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC;;AAEvE;AACA,MAAMC,OAAO,GAAGC,IAAI,IAAI;EACtB,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;EACxB,OACE;IACAF,IAAI,CAACG,OAAO,CAAC,CAAC,KAAKF,KAAK,CAACE,OAAO,CAAC,CAAC,IAClCH,IAAI,CAACI,QAAQ,CAAC,CAAC,KAAKH,KAAK,CAACG,QAAQ,CAAC,CAAC,IACpCJ,IAAI,CAACK,WAAW,CAAC,CAAC,KAAKJ,KAAK,CAACI,WAAW,CAAC;IACzC;EAAA;AAEJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,UAAU,GAAG,SAAAA,CAACC,KAAK,EAAuE;EAAA,IAArEC,UAAU,GAAAC,SAAA,CAAAlB,MAAA,QAAAkB,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG;IAAEE,KAAK,EAAE,OAAO;IAAEC,GAAG,EAAE,SAAS;IAAEC,IAAI,EAAE;EAAU,CAAC;EAChG,IAAI,CAACN,KAAK,EAAE,OAAOA,KAAK;EACxB,OAAO,IAAIO,IAAI,CAACC,cAAc,CAAC,OAAO,EAAEP,UAAU,CAAC,CAACQ,MAAM,CAAC,IAAId,IAAI,CAACK,KAAK,CAAC,CAAC;AAC7E,CAAC;;AAED;AACA,OAAO,MAAMU,sBAAsB,GAAG,SAAAA,CAACV,KAAK,EAAiC;EAAA,IAA/BW,mBAAmB,GAAAT,SAAA,CAAAlB,MAAA,QAAAkB,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,IAAI;EACtE,MAAMT,IAAI,GAAG,IAAIE,IAAI,CAACK,KAAK,CAAC;EAC5B,IAAIC,UAAU,GAAG;IAAEG,KAAK,EAAE,OAAO;IAAEC,GAAG,EAAE;EAAU,CAAC;EAEnD,IAAIM,mBAAmB,IAAInB,OAAO,CAACC,IAAI,CAAC,EAAE;IACxCQ,UAAU,GAAG;MAAEW,IAAI,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAU,CAAC;EACrD;EAEA,OAAO,IAAIN,IAAI,CAACC,cAAc,CAAC,OAAO,EAAEP,UAAU,CAAC,CAACQ,MAAM,CAAC,IAAId,IAAI,CAACK,KAAK,CAAC,CAAC;AAC7E,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMc,cAAc,GAAGA,CAAA,KAAMC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;AACpE,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAMC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;;AAE7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMI,2BAA2B,GAAGC,QAAQ,IAAI;EACrD,IAAIA,QAAQ,KAAK,OAAO,EAAE,OAAO1C,YAAY;EAC7C,IAAI0C,QAAQ,KAAK,QAAQ,EAAE,OAAO,iBAAiB;EACnD,OAAO,QAAQ;AACjB,CAAC;;AAED;AACA,OAAO,MAAMC,iBAAiB,GAAGC,KAAK,KAAK;EACzC,GAAGA,KAAK;EACRC,MAAM,EAAE;IACN,GAAGD,KAAK,CAACC,MAAM;IACfC,SAAS,EAAE,WAAW;IAAE;IACxBC,OAAO,EAAE,SAAS;IAAE;IACpBC,SAAS,EAAE,SAAS;IAAE;IACtBC,SAAS,EAAE,SAAS;IAAE;IACtBC,SAAS,EAAE,SAAS,CAAC;EACvB;AACF,CAAC,CAAC;AACF;AACA,MAAMC,YAAY,GAAG,SAAAA,CAAA;EAAA,IAAC5C,GAAG,GAAAgB,SAAA,CAAAlB,MAAA,QAAAkB,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,EAAE;EAAA,IAAE6B,KAAK,GAAA7B,SAAA,CAAAlB,MAAA,QAAAkB,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,GAAG;EAAA,OACzChB,GAAG,GAAGA,GAAG,CAAC8C,QAAQ,CAAC,CAAC,CAACzC,OAAO,CAAC,uBAAuB,EAAEwC,KAAK,CAAC,GAAG,EAAE;AAAA;AAEnE,MAAME,iBAAiB,GAAG,SAAAA,CAAA,EAAoC;EAAA,IAAnC/C,GAAG,GAAAgB,SAAA,CAAAlB,MAAA,QAAAkB,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,EAAE;EAAA,IAAEgC,EAAE,GAAAhC,SAAA,CAAAlB,MAAA,QAAAkB,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,EAAE;EAAA,IAAE6B,KAAK,GAAA7B,SAAA,CAAAlB,MAAA,QAAAkB,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,GAAG;EACvD,IAAI;IACF,IAAI,CAACiC,KAAK,GAAG,CAAC,EAAEC,KAAK,GAAG,CAAC,CAAC,GAAG,GAAAjD,MAAA,CAAGD,GAAG,EAAG6C,KAAK,CAAC,GAAG,CAAC;IAChD,OACEI,KAAK,CAACH,QAAQ,CAAC,CAAC,CAACzC,OAAO,CAAC,uBAAuB,EAAEwC,KAAK,CAAC,GAAG,GAAG,GAAGK,KAAK;EAE1E,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAOH,EAAE;EACX;AACF,CAAC;AAED,MAAMI,YAAY,GAAGC,UAAU,IAAI;EACjC,IAAIC,CAAC,GAAG,CAAC;EAET,IAAI;IACF,MAAM;MACJC,aAAa,GAAG,CAAC;MACjBC,YAAY,GAAG,CAAC;MAChBC,cAAc,GAAG;IACnB,CAAC,GAAGJ,UAAU;IACd,IAAIE,aAAa,EAAED,CAAC,IAAIC,aAAa;IACrC,IAAIC,YAAY,EAAEF,CAAC,IAAIE,YAAY;IACnC,IAAIC,cAAc,EAAEH,CAAC,IAAIG,cAAc;EACzC,CAAC,CAAC,OAAON,KAAK,EAAE,CAAE;EAClB,OAAOG,CAAC;AACV,CAAC;AAED,MAAMI,aAAa,GAAG,SAAAA,CAAA;EAAA,IAAC1D,GAAG,GAAAgB,SAAA,CAAAlB,MAAA,QAAAkB,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,EAAE;EAAA,IAAE6B,KAAK,GAAA7B,SAAA,CAAAlB,MAAA,QAAAkB,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,GAAG;EAAA,OAC1ChB,GAAG,GAAGA,GAAG,CAAC6C,KAAK,CAACA,KAAK,CAAC,CAACc,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE;AAAA;AAEtC,MAAMC,YAAY,GAAGrD,IAAI,IAAI;EAC3B,IAAIC,KAAK,GAAG,IAAIC,IAAI,CAACF,IAAI,CAAC;EAC1B,IAAIsD,EAAE,GAAGC,MAAM,CAACtD,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC,CAACqD,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACjD,IAAIC,EAAE,GAAGF,MAAM,CAACtD,KAAK,CAACG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAACoD,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACtD,IAAIE,IAAI,GAAGzD,KAAK,CAACI,WAAW,CAAC,CAAC;EAE9B,OAAOiD,EAAE,GAAG,GAAG,GAAGG,EAAE,GAAG,GAAG,GAAGC,IAAI;AACnC,CAAC;AACD,MAAMC,aAAa,GAAGA,CAAC3D,IAAI,EAAE4D,IAAI,KAAK;EAEpC,IAAI3D,KAAK,GAAG,IAAIC,IAAI,CAACF,IAAI,CAAC;EAE1B,IAAI6D,OAAO,GAAG5D,KAAK,CAAC6D,OAAO,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAGF,IAAI;EAC/DC,OAAO,GAAG,IAAI3D,IAAI,CAAC2D,OAAO,CAAC;EAC3B,IAAIP,EAAE,GAAGC,MAAM,CAACM,OAAO,CAAC1D,OAAO,CAAC,CAAC,CAAC,CAACqD,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACnD,IAAIC,EAAE,GAAGF,MAAM,CAACM,OAAO,CAACzD,QAAQ,CAAC,CAAC,GAAC,CAAC,CAAC,CAACoD,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACtD,IAAIE,IAAI,GAAGG,OAAO,CAACxD,WAAW,CAAC,CAAC;EAEhC,OAAOiD,EAAE,GAAG,GAAG,GAAGG,EAAE,GAAG,GAAG,GAAGC,IAAI;AACnC,CAAC;AACD,MAAMK,kBAAkB,GAAG/D,IAAI,IAAI;EACjC,IAAIC,KAAK,GAAG,IAAIC,IAAI,CAACF,IAAI,CAAC;EAC1B,IAAIsD,EAAE,GAAGC,MAAM,CAACtD,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC,CAACqD,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACjD,IAAIC,EAAE,GAAGF,MAAM,CAACtD,KAAK,CAACG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAACoD,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACtD,IAAIE,IAAI,GAAGzD,KAAK,CAACI,WAAW,CAAC,CAAC;EAE9B,OAAOiD,EAAE,GAAG,GAAG,GAAGG,EAAE,GAAG,GAAG,GAAGC,IAAI;AACnC,CAAC;AACD,MAAMM,mBAAmB,GAAGhE,IAAI,IAAI;EAClC,IAAIC,KAAK,GAAG,IAAIC,IAAI,CAACF,IAAI,CAAC;EAC1B,IAAIsD,EAAE,GAAGC,MAAM,CAACtD,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC,CAACqD,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACjD,IAAIC,EAAE,GAAGF,MAAM,CAACtD,KAAK,CAACG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAACoD,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACtD,IAAIE,IAAI,GAAGzD,KAAK,CAACI,WAAW,CAAC,CAAC;EAE9B,OAAOqD,IAAI,GAAG,GAAG,GAAGD,EAAE,GAAG,GAAG,GAAGH,EAAE;AACnC,CAAC;AACD,MAAMW,gBAAgB,GAAGjE,IAAI,IAAI;EAC/B;EACA;EACA;EACA;EACA;;EAEA;EACA,IAAIC,KAAK,GAAG,IAAIC,IAAI,CAACF,IAAI,CAAC;EAC1B,IAAIkE,EAAE,GAAGX,MAAM,CAACtD,KAAK,CAACkE,QAAQ,CAAC,CAAC,CAAC,CAACX,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAClD,IAAIY,EAAE,GAAGb,MAAM,CAACtD,KAAK,CAACoE,UAAU,CAAC,CAAC,CAAC,CAACb,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACpD,IAAIc,EAAE,GAAGf,MAAM,CAACtD,KAAK,CAACsE,UAAU,CAAC,CAAC,CAAC,CAACf,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACpD,IAAIF,EAAE,GAAGC,MAAM,CAACtD,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC,CAACqD,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACjD,IAAIC,EAAE,GAAGF,MAAM,CAACtD,KAAK,CAACG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAACoD,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACtD,IAAIE,IAAI,GAAGzD,KAAK,CAACI,WAAW,CAAC,CAAC;EAE9B,OAAOiD,EAAE,GAAG,GAAG,GAAGG,EAAE,GAAG,GAAG,GAAGC,IAAI,GAAG,GAAG,GAAGQ,EAAE,GAAG,GAAG,GAAGE,EAAE,GAAG,GAAG,GAAGE,EAAE;AACpE,CAAC;AAED,MAAME,iBAAiB,GAAGxE,IAAI,IAAI;EAChC,IAAIyE,GAAG,GAAG,IAAIvE,IAAI,CAACF,IAAI,CAAC;EACxB,IAAI0E,KAAK,GAAG,IAAIxE,IAAI,CAAC,CAAC;EACtB;EACA,IAAIyE,UAAU,GAAG,CAACF,GAAG,CAACX,OAAO,CAAC,CAAC,GAAGY,KAAK,CAACZ,OAAO,CAAC,CAAC,IAAI,OAAO;EAC5D;EACA,IAAIa,UAAU,IAAI,EAAE,IAAIA,UAAU,IAAI,CAAC,EAAE;IACvC,OAAO,IAAI;EACb;EACA,OAAO,KAAK;AACd,CAAC;AACD,MAAMC,WAAW,GAAGC,EAAE,IAAI;EACxB,IAAIC,MAAM,GAAG,CACX,OAAO,EACP,KAAK,EACL,KAAK,EACL,IAAI,EACJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,MAAM,CACP;EACD,MAAMC,WAAW,GAAGA,CAACF,EAAE,EAAEG,KAAK,KAAK;IACjC,IAAIC,KAAK,GAAG,EAAE;IACd,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACP,EAAE,GAAG,EAAE,CAAC;IAC9B,IAAIQ,KAAK,GAAGR,EAAE,GAAG,EAAE;IACnB,IAAIK,IAAI,GAAG,CAAC,EAAE;MACZD,KAAK,GAAG,GAAG,GAAGH,MAAM,CAACI,IAAI,CAAC,GAAG,OAAO;MACpC,IAAIG,KAAK,IAAI,CAAC,EAAE;QACdJ,KAAK,IAAI,MAAM;MACjB;IACF,CAAC,MAAM,IAAIC,IAAI,IAAI,CAAC,EAAE;MACpBD,KAAK,GAAG,OAAO;MACf,IAAII,KAAK,IAAI,CAAC,EAAE;QACdJ,KAAK,IAAI,MAAM;MACjB;IACF,CAAC,MAAM,IAAID,KAAK,IAAIK,KAAK,GAAG,CAAC,EAAE;MAC7BJ,KAAK,GAAG,KAAK;IACf;IACA,IAAII,KAAK,IAAI,CAAC,IAAIH,IAAI,GAAG,CAAC,EAAE;MAC1BD,KAAK,IAAI,MAAM;IACjB,CAAC,MAAM,IAAII,KAAK,GAAG,CAAC,IAAKA,KAAK,IAAI,CAAC,IAAIH,IAAI,IAAI,CAAE,EAAE;MACjDD,KAAK,IAAI,GAAG,GAAGH,MAAM,CAACO,KAAK,CAAC;IAC9B;IACA,OAAOJ,KAAK;EACd,CAAC;EACD,MAAMK,QAAQ,GAAGA,CAACT,EAAE,EAAEG,KAAK,KAAK;IAC9B,IAAIC,KAAK,GAAG,EAAE;IACd,IAAIM,IAAI,GAAGJ,IAAI,CAACC,KAAK,CAACP,EAAE,GAAG,GAAG,CAAC;IAC/BA,EAAE,GAAGA,EAAE,GAAG,GAAG;IACb,IAAIG,KAAK,IAAIO,IAAI,GAAG,CAAC,EAAE;MACrBN,KAAK,GAAG,GAAG,GAAGH,MAAM,CAACS,IAAI,CAAC,GAAG,OAAO;MACpCN,KAAK,IAAIF,WAAW,CAACF,EAAE,EAAE,IAAI,CAAC;IAChC,CAAC,MAAM;MACLI,KAAK,GAAGF,WAAW,CAACF,EAAE,EAAE,KAAK,CAAC;IAChC;IACA,OAAOI,KAAK;EACd,CAAC;EACD,MAAMO,YAAY,GAAGA,CAACX,EAAE,EAAEG,KAAK,KAAK;IAClC,IAAIC,KAAK,GAAG,EAAE;IACd,IAAIQ,KAAK,GAAGN,IAAI,CAACC,KAAK,CAACP,EAAE,GAAG,OAAO,CAAC;IACpCA,EAAE,GAAGA,EAAE,GAAG,OAAO;IACjB,IAAIY,KAAK,GAAG,CAAC,EAAE;MACbR,KAAK,GAAGK,QAAQ,CAACG,KAAK,EAAET,KAAK,CAAC,GAAG,QAAQ;MACzCA,KAAK,GAAG,IAAI;IACd;IACA,IAAIU,KAAK,GAAGP,IAAI,CAACC,KAAK,CAACP,EAAE,GAAG,IAAI,CAAC;IACjCA,EAAE,GAAGA,EAAE,GAAG,IAAI;IACd,IAAIa,KAAK,GAAG,CAAC,EAAE;MACbT,KAAK,IAAIK,QAAQ,CAACI,KAAK,EAAEV,KAAK,CAAC,GAAG,QAAQ;MAC1CA,KAAK,GAAG,IAAI;IACd;IACA,IAAIH,EAAE,GAAG,CAAC,EAAE;MACVI,KAAK,IAAIK,QAAQ,CAACT,EAAE,EAAEG,KAAK,CAAC;IAC9B;IACA,OAAOC,KAAK;EACd,CAAC;EACD,IAAIJ,EAAE,IAAI,CAAC,EAAE,OAAOC,MAAM,CAAC,CAAC,CAAC;EAC7B,IAAIG,KAAK,GAAG,EAAE;IACZU,KAAK,GAAG,EAAE;EACZ,GAAG;IACD,IAAIC,EAAE,GAAGf,EAAE,GAAG,UAAU;IACxBA,EAAE,GAAGM,IAAI,CAACC,KAAK,CAACP,EAAE,GAAG,UAAU,CAAC;IAChC,IAAIA,EAAE,GAAG,CAAC,EAAE;MACVI,KAAK,GAAGO,YAAY,CAACI,EAAE,EAAE,IAAI,CAAC,GAAGD,KAAK,GAAGV,KAAK;IAChD,CAAC,MAAM;MACLA,KAAK,GAAGO,YAAY,CAACI,EAAE,EAAE,KAAK,CAAC,GAAGD,KAAK,GAAGV,KAAK;IACjD;IACAU,KAAK,GAAG,KAAK;EACf,CAAC,QAAQd,EAAE,GAAG,CAAC;EACfI,KAAK,GAAGA,KAAK,CAACY,IAAI,CAAC,CAAC;EACpB,IAAIZ,KAAK,CAAC1F,MAAM,GAAG,CAAC,EAAE0F,KAAK,GAAGA,KAAK,CAAC,CAAC,CAAC,CAACa,WAAW,CAAC,CAAC,GAAGb,KAAK,CAACc,MAAM,CAAC,CAAC,CAAC;EACtE,OAAOd,KAAK,CAACY,IAAI,CAAC,CAAC,GAAG,OAAO;AAC/B,CAAC;AACD,MAAMG,qBAAqB,GAAGC,MAAM,IAAI;EACtC,QAAQA,MAAM;IACZ,KAAK,CAAC;MACJ,OAAO;QACLC,IAAI,EAAE;QACN;MACF,CAAC;IACH,KAAK,CAAC;MACJ,OAAO;QACLA,IAAI,EAAE;QACN;MACF,CAAC;IACH,KAAK,CAAC;MACJ,OAAO;QACLA,IAAI,EAAE;QACN;MACF,CAAC;IACH,KAAK,CAAC;MACJ,OAAO;QACLA,IAAI,EAAE;QACN;MACF,CAAC;EACL;EACA,OAAO;IACLA,IAAI,EAAE;IACN;EACF,CAAC;AACH,CAAC;AAED,MAAMC,yBAAyB,GAAGF,MAAM,IAAI;EAC1C,QAAQA,MAAM;IACZ,KAAK,CAAC;MACJ,OAAO;QACLC,IAAI,EAAE,8BAA8B;QACpCE,KAAK,EAAE;MACT,CAAC;IACH,KAAK,CAAC;MACJ,OAAO;QACLF,IAAI,EAAE,oBAAoB;QAC1BE,KAAK,EAAE;MACT,CAAC;IACH,KAAK,CAAC;MACJ,OAAO;QACLF,IAAI,EAAE,yBAAyB;QAC/BE,KAAK,EAAE;MACT,CAAC;IACH,KAAK,CAAC;MACJ,OAAO;QACLF,IAAI,EAAE,cAAc;QACpBE,KAAK,EAAE;MACT,CAAC;IACH,KAAK,CAAC;MACJ,OAAO;QACLF,IAAI,EAAE,aAAa;QACnBE,KAAK,EAAE;MACT,CAAC;IACH,KAAK,CAAC;MACJ,OAAO;QACLF,IAAI,EAAE,KAAK;QACXE,KAAK,EAAE;MACT,CAAC;IACH,KAAK,CAAC;MACJ,OAAO;QACLF,IAAI,EAAE,kBAAkB;QACxBE,KAAK,EAAE;MACT,CAAC;IACH,KAAK,CAAC;MACJ,OAAO;QACLF,IAAI,EAAE,0BAA0B;QAChCE,KAAK,EAAE;MACT,CAAC;IACH,KAAK,CAAC;MACJ,OAAO;QACLF,IAAI,EAAE,YAAY;QAClBE,KAAK,EAAE;MACT,CAAC;IACH,KAAK,EAAE;MACL,OAAO;QACLF,IAAI,EAAE,SAAS;QACfE,KAAK,EAAE;MACT,CAAC;EACL;EACA,OAAO;IACLF,IAAI,EAAE,EAAE;IACRE,KAAK,EAAE;EACT,CAAC;AACH,CAAC;AAED,MAAMC,2BAA2B,GAAGJ,MAAM,IAAI;EAC5C,QAAQA,MAAM;IACZ,KAAK,CAAC;MACJ,OAAO;QACLC,IAAI,EAAE;QACN;MACF,CAAC;IACH,KAAK,CAAC;MACJ,OAAO;QACLA,IAAI,EAAE;QACN;MACF,CAAC;IACH,KAAK,CAAC;MACJ,OAAO;QACLA,IAAI,EAAE;QACN;MACF,CAAC;IACH,KAAK,CAAC;MACJ,OAAO;QACLA,IAAI,EAAE;QACN;MACF,CAAC;IACH,KAAK,CAAC;MACJ,OAAO;QACLA,IAAI,EAAE;QACN;MACF,CAAC;IACH,KAAK,CAAC;MACJ,OAAO;QACLA,IAAI,EAAE;QACN;MACF,CAAC;EACL;EACA,OAAO;IACLA,IAAI,EAAE;IACN;EACF,CAAC;AACH,CAAC;AAED,MAAMI,gBAAgB,GAAG,SAAAA,CAACC,CAAC,EAAEC,CAAC,EAAe;EAAA,IAAbC,IAAI,GAAAhG,SAAA,CAAAlB,MAAA,QAAAkB,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,CAAC;EACtC,IAAIiE,KAAK,GAAG6B,CAAC;EACb,IAAI9B,GAAG,GAAG+B,CAAC;EACX,IAAI,CAAC/B,GAAG,EAAE;IACRA,GAAG,GAAGC,KAAK;IACXA,KAAK,GAAG,CAAC;EACX;EACA,OAAOgC,KAAK,CAACC,IAAI,CACf;IAAEpH,MAAM,EAAE,CAACkF,GAAG,GAAGC,KAAK,GAAG+B,IAAI,IAAIA;EAAK,CAAC,EACvC,CAACG,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAGJ,IAChB,CAAC,CAACK,GAAG,CAACN,CAAC,IAAIA,CAAC,GAAG9B,KAAK,CAAC;AACvB,CAAC;AACD,MAAMqC,YAAY,GAAGA,CAAA,KACnB,IAAI7G,IAAI,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC8G,MAAM,CAAC,CAAC,CAAC1E,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,gBAAgB,CAAC;AAChE;AACA,SACED,YAAY,EACZgB,YAAY,EACZF,aAAa,EACbyB,WAAW,EACXpC,iBAAiB,EACjByB,gBAAgB,EAChBO,iBAAiB,EACjBwB,qBAAqB,EACrBnD,YAAY,EACZsD,yBAAyB,EACzBE,2BAA2B,EAC3BC,gBAAgB,EAChBS,YAAY,EACZhD,kBAAkB,EAClBJ,aAAa,EACbK,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module"}