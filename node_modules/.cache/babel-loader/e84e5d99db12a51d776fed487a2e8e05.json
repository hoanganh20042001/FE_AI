{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hai Hong\\\\Desktop\\\\EXAI\\\\EXAI\\\\src\\\\views\\\\extensions\\\\sweet-alert\\\\SweetAlertOptions.js\";\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap';\n\n// ** Third Party Components\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\n\n// ** Images\nimport alertImg from '@src/assets/images/slider/04.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MySwal = withReactContent(Swal);\n_c = MySwal;\nconst SweetAlertOptions = () => {\n  const handleImageAlert = () => {\n    return MySwal.fire({\n      title: 'Sweet!',\n      text: 'Modal with a custom image.',\n      imageUrl: alertImg,\n      imageWidth: 300,\n      imageHeight: 200,\n      imageAlt: 'Custom image',\n      customClass: {\n        confirmButton: 'btn btn-primary'\n      },\n      buttonsStyling: false\n    });\n  };\n  const handleTimeoutAlert = () => {\n    let timerInterval;\n    Swal.fire({\n      title: 'Auto close alert!',\n      html: 'I will close in <b></b> seconds.',\n      timerProgressBar: true,\n      timer: 2000,\n      didOpen() {\n        Swal.showLoading();\n        const b = Swal.getHtmlContainer().querySelector('b');\n        timerInterval = setInterval(() => {\n          b.textContent = Swal.getTimerLeft();\n        }, 100);\n      },\n      willClose() {\n        clearInterval(timerInterval);\n      }\n    }).then(function (result) {\n      if (result.dismiss === Swal.DismissReason.timer) {\n        console.log('I was closed by the timer');\n      }\n    });\n  };\n  const handleClickOutside = () => {\n    return MySwal.fire({\n      backdrop: true,\n      title: 'Click outside to close!',\n      text: 'This is a cool message!',\n      allowOutsideClick: true,\n      customClass: {\n        confirmButton: 'btn btn-primary'\n      },\n      buttonsStyling: false\n    });\n  };\n  const handleAjax = () => {\n    MySwal.fire({\n      title: 'Search for a user',\n      input: 'text',\n      customClass: {\n        input: 'mx-3',\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-danger ms-1'\n      },\n      buttonsStyling: false,\n      inputAttributes: {\n        autocapitalize: 'off'\n      },\n      showCancelButton: true,\n      confirmButtonText: 'Look up',\n      showLoaderOnConfirm: true,\n      preConfirm(login) {\n        return fetch(\"//api.github.com/users/\".concat(login)).then(function (response) {\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n          return response.json();\n        }).catch(function (error) {\n          MySwal.showValidationMessage(\"Request failed:  \".concat(error));\n        });\n      }\n    }).then(function (result) {\n      if (result.value) {\n        MySwal.fire({\n          title: \"\".concat(result.value.login, \"'s avatar\"),\n          imageUrl: result.value.avatar_url,\n          customClass: {\n            confirmButton: 'btn btn-primary'\n          }\n        });\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CardTitle, {\n        tag: \"h4\",\n        children: \"Options\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"demo-inline-spacing\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: handleImageAlert,\n          outline: true,\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: handleTimeoutAlert,\n          outline: true,\n          children: \"Timeout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: handleClickOutside,\n          outline: true,\n          children: \"Click Outside\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: handleAjax,\n          outline: true,\n          children: \"Ajax\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_c2 = SweetAlertOptions;\nexport default SweetAlertOptions;\nvar _c, _c2;\n$RefreshReg$(_c, \"MySwal\");\n$RefreshReg$(_c2, \"SweetAlertOptions\");","map":{"version":3,"names":["Card","CardHeader","CardBody","CardTitle","Button","Swal","withReactContent","alertImg","jsxDEV","_jsxDEV","MySwal","_c","SweetAlertOptions","handleImageAlert","fire","title","text","imageUrl","imageWidth","imageHeight","imageAlt","customClass","confirmButton","buttonsStyling","handleTimeoutAlert","timerInterval","html","timerProgressBar","timer","didOpen","showLoading","b","getHtmlContainer","querySelector","setInterval","textContent","getTimerLeft","willClose","clearInterval","then","result","dismiss","DismissReason","console","log","handleClickOutside","backdrop","allowOutsideClick","handleAjax","input","cancelButton","inputAttributes","autocapitalize","showCancelButton","confirmButtonText","showLoaderOnConfirm","preConfirm","login","fetch","concat","response","ok","Error","statusText","json","catch","error","showValidationMessage","value","avatar_url","children","tag","fileName","_jsxFileName","lineNumber","columnNumber","className","color","onClick","outline","_c2","$RefreshReg$"],"sources":["C:/Users/Hai Hong/Desktop/EXAI/EXAI/src/views/extensions/sweet-alert/SweetAlertOptions.js"],"sourcesContent":["// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\r\n\r\n// ** Third Party Components\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\n// ** Images\r\nimport alertImg from '@src/assets/images/slider/04.jpg'\r\n\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\nconst SweetAlertOptions = () => {\r\n  const handleImageAlert = () => {\r\n    return MySwal.fire({\r\n      title: 'Sweet!',\r\n      text: 'Modal with a custom image.',\r\n      imageUrl: alertImg,\r\n      imageWidth: 300,\r\n      imageHeight: 200,\r\n      imageAlt: 'Custom image',\r\n      customClass: { confirmButton: 'btn btn-primary' },\r\n      buttonsStyling: false\r\n    })\r\n  }\r\n\r\n  const handleTimeoutAlert = () => {\r\n    let timerInterval\r\n    Swal.fire({\r\n      title: 'Auto close alert!',\r\n      html: 'I will close in <b></b> seconds.',\r\n      timerProgressBar: true,\r\n      timer: 2000,\r\n      didOpen() {\r\n        Swal.showLoading()\r\n        const b = Swal.getHtmlContainer().querySelector('b')\r\n        timerInterval = setInterval(() => {\r\n          b.textContent = Swal.getTimerLeft()\r\n        }, 100)\r\n      },\r\n      willClose() {\r\n        clearInterval(timerInterval)\r\n      }\r\n    }).then(function (result) {\r\n      if (result.dismiss === Swal.DismissReason.timer) {\r\n        console.log('I was closed by the timer')\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleClickOutside = () => {\r\n    return MySwal.fire({\r\n      backdrop: true,\r\n      title: 'Click outside to close!',\r\n      text: 'This is a cool message!',\r\n      allowOutsideClick: true,\r\n      customClass: { confirmButton: 'btn btn-primary' },\r\n      buttonsStyling: false\r\n    })\r\n  }\r\n\r\n  const handleAjax = () => {\r\n    MySwal.fire({\r\n      title: 'Search for a user',\r\n      input: 'text',\r\n      customClass: {\r\n        input: 'mx-3',\r\n        confirmButton: 'btn btn-primary',\r\n        cancelButton: 'btn btn-danger ms-1'\r\n      },\r\n      buttonsStyling: false,\r\n      inputAttributes: {\r\n        autocapitalize: 'off'\r\n      },\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Look up',\r\n      showLoaderOnConfirm: true,\r\n      preConfirm(login) {\r\n        return fetch(`//api.github.com/users/${login}`)\r\n          .then(function (response) {\r\n            if (!response.ok) {\r\n              throw new Error(response.statusText)\r\n            }\r\n            return response.json()\r\n          })\r\n          .catch(function (error) {\r\n            MySwal.showValidationMessage(`Request failed:  ${error}`)\r\n          })\r\n      }\r\n    }).then(function (result) {\r\n      if (result.value) {\r\n        MySwal.fire({\r\n          title: `${result.value.login}'s avatar`,\r\n          imageUrl: result.value.avatar_url,\r\n          customClass: {\r\n            confirmButton: 'btn btn-primary'\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Options</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div className='demo-inline-spacing'>\r\n          <Button color='primary' onClick={handleImageAlert} outline>\r\n            Image\r\n          </Button>\r\n          <Button color='primary' onClick={handleTimeoutAlert} outline>\r\n            Timeout\r\n          </Button>\r\n          <Button color='primary' onClick={handleClickOutside} outline>\r\n            Click Outside\r\n          </Button>\r\n          <Button color='primary' onClick={handleAjax} outline>\r\n            Ajax\r\n          </Button>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SweetAlertOptions\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}