{"ast":null,"code":"import mock from '../mock';\nconst data = {\n  tasks: [{\n    id: 1,\n    title: 'Entire change break our wife wide it daughter mention member.',\n    dueDate: '2020-11-25',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'Jacob Ramirez',\n      avatar: require('@src/assets/images/avatars/12.png').default\n    },\n    tags: ['update'],\n    isCompleted: false,\n    isDeleted: false,\n    isImportant: false\n  }, {\n    id: 2,\n    title: 'Citizen stand administration step agency century.',\n    dueDate: '2020-12-14',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'Andrew Anderson',\n      avatar: ''\n    },\n    tags: ['team', 'medium'],\n    isCompleted: true,\n    isDeleted: false,\n    isImportant: false\n  }, {\n    id: 3,\n    title: 'Meet Jane and ask for coffee ❤️',\n    dueDate: '2020-11-25',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'Benjamin Jacobs',\n      avatar: ''\n    },\n    tags: ['high'],\n    isCompleted: false,\n    isDeleted: false,\n    isImportant: false\n  }, {\n    id: 4,\n    title: 'Answer the support tickets and close completed tickets. ',\n    dueDate: '2020-11-20',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'Curtis Schmidt',\n      avatar: require('@src/assets/images/avatars/9.png').default\n    },\n    tags: ['medium'],\n    isCompleted: false,\n    isDeleted: false,\n    isImportant: true\n  }, {\n    id: 5,\n    title: 'Test functionality of apps developed by dev team for enhancements. ',\n    dueDate: '2020-12-06',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'Katherine Perkins',\n      avatar: require('@src/assets/images/avatars/9.png').default\n    },\n    tags: ['medium'],\n    isCompleted: true,\n    isDeleted: false,\n    isImportant: true\n  }, {\n    id: 6,\n    title: 'Conduct a mini awareness meeting regarding health care. ',\n    dueDate: '2020-12-06',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'David Murphy',\n      avatar: ''\n    },\n    tags: ['high', 'medium'],\n    isCompleted: true,\n    isDeleted: true,\n    isImportant: false\n  }, {\n    id: 7,\n    title: 'Plan new dashboard design with design team for Google app store. ',\n    dueDate: '2020-12-05',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'Karina Miller',\n      avatar: require('@src/assets/images/avatars/1.png').default\n    },\n    tags: ['medium'],\n    isCompleted: false,\n    isDeleted: false,\n    isImportant: true\n  }, {\n    id: 8,\n    title: 'Pick up Nats from her school and drop at dance class😁 ',\n    dueDate: '2020-12-08',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'Thomas Moses',\n      avatar: require('@src/assets/images/avatars/7.png').default\n    },\n    tags: ['low', 'medium'],\n    isCompleted: false,\n    isDeleted: false,\n    isImportant: false\n  }, {\n    id: 9,\n    title: 'Finish documentation and make it live',\n    dueDate: '2020-11-25',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'Angel Morrow',\n      avatar: ''\n    },\n    tags: ['high', 'update'],\n    isCompleted: false,\n    isDeleted: true,\n    isImportant: false\n  }, {\n    id: 10,\n    title: 'List out all the SEO resources and send it to new SEO team. ',\n    dueDate: '2020-12-09',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'Karen Carrillo',\n      avatar: ''\n    },\n    tags: ['low'],\n    isCompleted: true,\n    isDeleted: false,\n    isImportant: false\n  }, {\n    id: 11,\n    title: 'Refactor Code and fix the bugs and test it on server ',\n    dueDate: '2020-12-01',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'Timothy Brewer',\n      avatar: require('@src/assets/images/avatars/1.png').default\n    },\n    tags: ['low'],\n    isCompleted: true,\n    isDeleted: false,\n    isImportant: true\n  }, {\n    id: 12,\n    title: 'Reminder to mail clients for holidays',\n    dueDate: '2020-12-09',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'Brian Barry',\n      avatar: ''\n    },\n    tags: ['team'],\n    isCompleted: false,\n    isDeleted: false,\n    isImportant: false\n  }, {\n    id: 13,\n    title: \"Submit quotation for Abid's ecommerce website and admin project\",\n    dueDate: '2020-12-01',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'Joshua Golden',\n      avatar: require('@src/assets/images/avatars/5.png').default\n    },\n    tags: ['team'],\n    isCompleted: false,\n    isDeleted: false,\n    isImportant: false\n  }, {\n    id: 14,\n    title: 'Send PPT with real-time reports',\n    dueDate: '2020-11-29',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'Paula Hammond',\n      avatar: require('@src/assets/images/avatars/5.png').default\n    },\n    tags: ['medium'],\n    isCompleted: true,\n    isDeleted: false,\n    isImportant: true\n  }, {\n    id: 15,\n    title: 'Skype Tommy for project status & report',\n    dueDate: '2020-11-29',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'Tyler Garcia',\n      avatar: ''\n    },\n    tags: ['medium'],\n    isCompleted: false,\n    isDeleted: false,\n    isImportant: false\n  }, {\n    id: 16,\n    title: 'Hire 5 new Fresher or Experienced, frontend and backend developers ',\n    dueDate: '2020-12-12',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'Darlene Shields',\n      avatar: require('@src/assets/images/avatars/1.png').default\n    },\n    tags: ['low'],\n    isCompleted: true,\n    isDeleted: false,\n    isImportant: false\n  }, {\n    id: 17,\n    title: 'Plan a party for development team 🎁',\n    dueDate: '2020-12-04',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'Destiny Michael',\n      avatar: ''\n    },\n    tags: ['medium', 'low'],\n    isCompleted: false,\n    isDeleted: false,\n    isImportant: false\n  }, {\n    id: 18,\n    title: 'Fix Responsiveness for new structure 💻',\n    dueDate: '2020-11-18',\n    description: 'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\n    assignee: {\n      fullName: 'Danielle Anderson',\n      avatar: require('@src/assets/images/portrait/small/avatar-s-9.jpg').default\n    },\n    tags: ['low'],\n    isCompleted: false,\n    isDeleted: false,\n    isImportant: true\n  }]\n};\n\n// ------------------------------------------------\n// GET: Return Tasks\n// ------------------------------------------------\nmock.onGet('/apps/todo/tasks').reply(config => {\n  // eslint-disable-next-line object-curly-newline\n  const {\n    q = '',\n    filter,\n    tag,\n    sortBy: sortByParam = 'latest'\n  } = config.params;\n  /* eslint-enable */\n  // ------------------------------------------------\n  // Get Sort by and Sort Direction\n  // ------------------------------------------------\n  let sortDesc = true;\n  const sortBy = (() => {\n    if (sortByParam === 'title-asc') {\n      sortDesc = false;\n      return 'title';\n    }\n    if (sortByParam === 'title-desc') return 'title';\n    if (sortByParam === 'assignee') {\n      sortDesc = false;\n      return 'assignee';\n    }\n    if (sortByParam === 'due-date') {\n      sortDesc = false;\n      return 'dueDate';\n    }\n    return 'id';\n  })();\n\n  // ------------------------------------------------\n  // Filtering\n  // ------------------------------------------------\n  const queryLowered = q.toLowerCase();\n  const hasFilter = task => {\n    if (filter === 'important') return task.isImportant && !task.isDeleted;\n    if (filter === 'completed') return task.isCompleted && !task.isDeleted;\n    if (filter === 'deleted') return task.isDeleted;\n    return !task.isDeleted;\n  };\n  const includesFilter = task => task.tags.includes(queryLowered) || task.tags.some(tag => tag.includes(queryLowered));\n  const includesDueDate = task => {\n    const date = new Date(task.dueDate).getDate().toString().padStart(2, '0');\n    const month = new Date(task.dueDate).toLocaleString('default', {\n      month: 'short'\n    }).toLowerCase();\n    const dateMonth = \"\".concat(date, \" \").concat(month);\n    const monthDate = \"\".concat(month, \" \").concat(date);\n    return date.includes(queryLowered) || month.includes(queryLowered) || dateMonth.includes(queryLowered) || monthDate.includes(queryLowered);\n  };\n\n  /* eslint-disable */\n  const filteredData = data.tasks.filter(task => {\n    if (filter || tag) {\n      return task.title.toLowerCase().includes(queryLowered) && hasFilter(task) && (tag ? task.tags.includes(tag) : true);\n    } else {\n      return task.title.toLowerCase().includes(queryLowered) || includesFilter(task) || includesDueDate(task);\n    }\n  });\n  /* eslint-enable  */\n\n  // ------------------------------------------------\n  // Perform sorting\n  // ------------------------------------------------\n  const sortTasks = key => (a, b) => {\n    let fieldA;\n    let fieldB;\n\n    // If sorting is by dueDate => Convert data to date\n    if (key === 'dueDate') {\n      fieldA = new Date(a[key]);\n      fieldB = new Date(b[key]);\n      // eslint-disable-next-line brace-style\n    }\n\n    // If sorting is by assignee => Use `fullName` of assignee\n    else if (key === 'assignee') {\n      fieldA = a.assignee ? a.assignee.fullName : null;\n      fieldB = b.assignee ? b.assignee.fullName : null;\n    } else {\n      fieldA = a[key];\n      fieldB = b[key];\n    }\n    let comparison = 0;\n    if (fieldA === fieldB) {\n      comparison = 0;\n    } else if (fieldA === null) {\n      comparison = 1;\n    } else if (fieldB === null) {\n      comparison = -1;\n    } else if (fieldA > fieldB) {\n      comparison = 1;\n    } else if (fieldA < fieldB) {\n      comparison = -1;\n    }\n    return comparison;\n  };\n\n  // Sort Data\n  const sortedData = filteredData.sort(sortTasks(sortBy));\n  if (sortDesc) sortedData.reverse();\n  return [200, sortedData];\n});\n\n// ------------------------------------------------\n// POST: Add new task\n// ------------------------------------------------\nmock.onPost('/apps/todo/add-tasks').reply(config => {\n  // Get event from post data\n  const {\n    task\n  } = JSON.parse(config.data);\n  const {\n    length\n  } = data.tasks;\n  let lastIndex = 0;\n  if (length) {\n    lastIndex = data.tasks[length - 1].id;\n  }\n  task.id = lastIndex + 1;\n  data.tasks.push(task);\n  return [201, {\n    task\n  }];\n});\n\n// ------------------------------------------------\n// POST: Update Task\n// ------------------------------------------------\nmock.onPost('/apps/todo/update-task').reply(config => {\n  const taskData = JSON.parse(config.data).task;\n\n  // Convert Id to number\n  taskData.id = Number(taskData.id);\n  const task = data.tasks.find(e => e.id === Number(taskData.id));\n  Object.assign(task, taskData);\n  return [200, {\n    task\n  }];\n});\n\n// ------------------------------------------------\n// DELETE: Remove Task\n// ------------------------------------------------\nmock.onDelete('/apps/todo/delete-task').reply(config => {\n  // Get task id from URL\n  let taskId = config.taskId;\n\n  // Convert Id to number\n  taskId = Number(taskId);\n  const task = data.tasks.find(t => t.id === taskId);\n  Object.assign(task, {\n    isDeleted: true\n  });\n  return [200];\n});","map":{"version":3,"names":["mock","data","tasks","id","title","dueDate","description","assignee","fullName","avatar","require","default","tags","isCompleted","isDeleted","isImportant","onGet","reply","config","q","filter","tag","sortBy","sortByParam","params","sortDesc","queryLowered","toLowerCase","hasFilter","task","includesFilter","includes","some","includesDueDate","date","Date","getDate","toString","padStart","month","toLocaleString","dateMonth","concat","monthDate","filteredData","sortTasks","key","a","b","fieldA","fieldB","comparison","sortedData","sort","reverse","onPost","JSON","parse","length","lastIndex","push","taskData","Number","find","e","Object","assign","onDelete","taskId","t"],"sources":["C:/Users/Hai Hong/Desktop/EXAI/EXAI/src/@fake-db/apps/todo.js"],"sourcesContent":["import mock from '../mock'\r\n\r\nconst data = {\r\n  tasks: [\r\n    {\r\n      id: 1,\r\n      title: 'Entire change break our wife wide it daughter mention member.',\r\n      dueDate: '2020-11-25',\r\n      description:\r\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\r\n      assignee: {\r\n        fullName: 'Jacob Ramirez',\r\n        avatar: require('@src/assets/images/avatars/12.png').default\r\n      },\r\n      tags: ['update'],\r\n      isCompleted: false,\r\n      isDeleted: false,\r\n      isImportant: false\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Citizen stand administration step agency century.',\r\n      dueDate: '2020-12-14',\r\n      description:\r\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\r\n      assignee: {\r\n        fullName: 'Andrew Anderson',\r\n        avatar: ''\r\n      },\r\n      tags: ['team', 'medium'],\r\n      isCompleted: true,\r\n      isDeleted: false,\r\n      isImportant: false\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Meet Jane and ask for coffee ❤️',\r\n      dueDate: '2020-11-25',\r\n      description:\r\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\r\n      assignee: {\r\n        fullName: 'Benjamin Jacobs',\r\n        avatar: ''\r\n      },\r\n      tags: ['high'],\r\n      isCompleted: false,\r\n      isDeleted: false,\r\n      isImportant: false\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'Answer the support tickets and close completed tickets. ',\r\n      dueDate: '2020-11-20',\r\n      description:\r\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\r\n      assignee: {\r\n        fullName: 'Curtis Schmidt',\r\n        avatar: require('@src/assets/images/avatars/9.png').default\r\n      },\r\n      tags: ['medium'],\r\n      isCompleted: false,\r\n      isDeleted: false,\r\n      isImportant: true\r\n    },\r\n    {\r\n      id: 5,\r\n      title: 'Test functionality of apps developed by dev team for enhancements. ',\r\n      dueDate: '2020-12-06',\r\n      description:\r\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\r\n      assignee: {\r\n        fullName: 'Katherine Perkins',\r\n        avatar: require('@src/assets/images/avatars/9.png').default\r\n      },\r\n      tags: ['medium'],\r\n      isCompleted: true,\r\n      isDeleted: false,\r\n      isImportant: true\r\n    },\r\n    {\r\n      id: 6,\r\n      title: 'Conduct a mini awareness meeting regarding health care. ',\r\n      dueDate: '2020-12-06',\r\n      description:\r\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\r\n      assignee: {\r\n        fullName: 'David Murphy',\r\n        avatar: ''\r\n      },\r\n      tags: ['high', 'medium'],\r\n      isCompleted: true,\r\n      isDeleted: true,\r\n      isImportant: false\r\n    },\r\n    {\r\n      id: 7,\r\n      title: 'Plan new dashboard design with design team for Google app store. ',\r\n      dueDate: '2020-12-05',\r\n      description:\r\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\r\n      assignee: {\r\n        fullName: 'Karina Miller',\r\n        avatar: require('@src/assets/images/avatars/1.png').default\r\n      },\r\n      tags: ['medium'],\r\n      isCompleted: false,\r\n      isDeleted: false,\r\n      isImportant: true\r\n    },\r\n    {\r\n      id: 8,\r\n      title: 'Pick up Nats from her school and drop at dance class😁 ',\r\n      dueDate: '2020-12-08',\r\n      description:\r\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\r\n      assignee: {\r\n        fullName: 'Thomas Moses',\r\n        avatar: require('@src/assets/images/avatars/7.png').default\r\n      },\r\n      tags: ['low', 'medium'],\r\n      isCompleted: false,\r\n      isDeleted: false,\r\n      isImportant: false\r\n    },\r\n    {\r\n      id: 9,\r\n      title: 'Finish documentation and make it live',\r\n      dueDate: '2020-11-25',\r\n      description:\r\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\r\n      assignee: {\r\n        fullName: 'Angel Morrow',\r\n        avatar: ''\r\n      },\r\n      tags: ['high', 'update'],\r\n      isCompleted: false,\r\n      isDeleted: true,\r\n      isImportant: false\r\n    },\r\n    {\r\n      id: 10,\r\n      title: 'List out all the SEO resources and send it to new SEO team. ',\r\n      dueDate: '2020-12-09',\r\n      description:\r\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\r\n      assignee: {\r\n        fullName: 'Karen Carrillo',\r\n        avatar: ''\r\n      },\r\n      tags: ['low'],\r\n      isCompleted: true,\r\n      isDeleted: false,\r\n      isImportant: false\r\n    },\r\n    {\r\n      id: 11,\r\n      title: 'Refactor Code and fix the bugs and test it on server ',\r\n      dueDate: '2020-12-01',\r\n      description:\r\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\r\n      assignee: {\r\n        fullName: 'Timothy Brewer',\r\n        avatar: require('@src/assets/images/avatars/1.png').default\r\n      },\r\n      tags: ['low'],\r\n      isCompleted: true,\r\n      isDeleted: false,\r\n      isImportant: true\r\n    },\r\n    {\r\n      id: 12,\r\n      title: 'Reminder to mail clients for holidays',\r\n      dueDate: '2020-12-09',\r\n      description:\r\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\r\n      assignee: {\r\n        fullName: 'Brian Barry',\r\n        avatar: ''\r\n      },\r\n      tags: ['team'],\r\n      isCompleted: false,\r\n      isDeleted: false,\r\n      isImportant: false\r\n    },\r\n    {\r\n      id: 13,\r\n      title: \"Submit quotation for Abid's ecommerce website and admin project\",\r\n      dueDate: '2020-12-01',\r\n      description:\r\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\r\n      assignee: {\r\n        fullName: 'Joshua Golden',\r\n        avatar: require('@src/assets/images/avatars/5.png').default\r\n      },\r\n      tags: ['team'],\r\n      isCompleted: false,\r\n      isDeleted: false,\r\n      isImportant: false\r\n    },\r\n    {\r\n      id: 14,\r\n      title: 'Send PPT with real-time reports',\r\n      dueDate: '2020-11-29',\r\n      description:\r\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\r\n      assignee: {\r\n        fullName: 'Paula Hammond',\r\n        avatar: require('@src/assets/images/avatars/5.png').default\r\n      },\r\n      tags: ['medium'],\r\n      isCompleted: true,\r\n      isDeleted: false,\r\n      isImportant: true\r\n    },\r\n    {\r\n      id: 15,\r\n      title: 'Skype Tommy for project status & report',\r\n      dueDate: '2020-11-29',\r\n      description:\r\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\r\n      assignee: {\r\n        fullName: 'Tyler Garcia',\r\n        avatar: ''\r\n      },\r\n      tags: ['medium'],\r\n      isCompleted: false,\r\n      isDeleted: false,\r\n      isImportant: false\r\n    },\r\n    {\r\n      id: 16,\r\n      title: 'Hire 5 new Fresher or Experienced, frontend and backend developers ',\r\n      dueDate: '2020-12-12',\r\n      description:\r\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\r\n      assignee: {\r\n        fullName: 'Darlene Shields',\r\n        avatar: require('@src/assets/images/avatars/1.png').default\r\n      },\r\n      tags: ['low'],\r\n      isCompleted: true,\r\n      isDeleted: false,\r\n      isImportant: false\r\n    },\r\n    {\r\n      id: 17,\r\n      title: 'Plan a party for development team 🎁',\r\n      dueDate: '2020-12-04',\r\n      description:\r\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\r\n      assignee: {\r\n        fullName: 'Destiny Michael',\r\n        avatar: ''\r\n      },\r\n      tags: ['medium', 'low'],\r\n      isCompleted: false,\r\n      isDeleted: false,\r\n      isImportant: false\r\n    },\r\n    {\r\n      id: 18,\r\n      title: 'Fix Responsiveness for new structure 💻',\r\n      dueDate: '2020-11-18',\r\n      description:\r\n        'Chocolate cake topping bonbon jujubes donut sweet wafer. Marzipan gingerbread powder brownie bear claw. Chocolate bonbon sesame snaps jelly caramels oat cake.',\r\n      assignee: {\r\n        fullName: 'Danielle Anderson',\r\n        avatar: require('@src/assets/images/portrait/small/avatar-s-9.jpg').default\r\n      },\r\n      tags: ['low'],\r\n      isCompleted: false,\r\n      isDeleted: false,\r\n      isImportant: true\r\n    }\r\n  ]\r\n}\r\n\r\n// ------------------------------------------------\r\n// GET: Return Tasks\r\n// ------------------------------------------------\r\nmock.onGet('/apps/todo/tasks').reply(config => {\r\n  // eslint-disable-next-line object-curly-newline\r\n  const { q = '', filter, tag, sortBy: sortByParam = 'latest' } = config.params\r\n  /* eslint-enable */\r\n  // ------------------------------------------------\r\n  // Get Sort by and Sort Direction\r\n  // ------------------------------------------------\r\n  let sortDesc = true\r\n\r\n  const sortBy = (() => {\r\n    if (sortByParam === 'title-asc') {\r\n      sortDesc = false\r\n      return 'title'\r\n    }\r\n    if (sortByParam === 'title-desc') return 'title'\r\n    if (sortByParam === 'assignee') {\r\n      sortDesc = false\r\n      return 'assignee'\r\n    }\r\n    if (sortByParam === 'due-date') {\r\n      sortDesc = false\r\n      return 'dueDate'\r\n    }\r\n    return 'id'\r\n  })()\r\n\r\n  // ------------------------------------------------\r\n  // Filtering\r\n  // ------------------------------------------------\r\n  const queryLowered = q.toLowerCase()\r\n\r\n  const hasFilter = task => {\r\n    if (filter === 'important') return task.isImportant && !task.isDeleted\r\n    if (filter === 'completed') return task.isCompleted && !task.isDeleted\r\n    if (filter === 'deleted') return task.isDeleted\r\n    return !task.isDeleted\r\n  }\r\n\r\n  const includesFilter = task => task.tags.includes(queryLowered) || task.tags.some(tag => tag.includes(queryLowered))\r\n\r\n  const includesDueDate = task => {\r\n    const date = new Date(task.dueDate).getDate().toString().padStart(2, '0')\r\n    const month = new Date(task.dueDate).toLocaleString('default', { month: 'short' }).toLowerCase()\r\n    const dateMonth = `${date} ${month}`\r\n    const monthDate = `${month} ${date}`\r\n\r\n    return (\r\n      date.includes(queryLowered) ||\r\n      month.includes(queryLowered) ||\r\n      dateMonth.includes(queryLowered) ||\r\n      monthDate.includes(queryLowered)\r\n    )\r\n  }\r\n\r\n  /* eslint-disable */\r\n  const filteredData = data.tasks.filter(task => {\r\n    if (filter || tag) {\r\n      return (\r\n        task.title.toLowerCase().includes(queryLowered) && hasFilter(task) && (tag ? task.tags.includes(tag) : true)\r\n      )\r\n    } else {\r\n      return task.title.toLowerCase().includes(queryLowered) || includesFilter(task) || includesDueDate(task)\r\n    }\r\n  })\r\n  /* eslint-enable  */\r\n\r\n  // ------------------------------------------------\r\n  // Perform sorting\r\n  // ------------------------------------------------\r\n  const sortTasks = key => (a, b) => {\r\n    let fieldA\r\n    let fieldB\r\n\r\n    // If sorting is by dueDate => Convert data to date\r\n    if (key === 'dueDate') {\r\n      fieldA = new Date(a[key])\r\n      fieldB = new Date(b[key])\r\n      // eslint-disable-next-line brace-style\r\n    }\r\n\r\n    // If sorting is by assignee => Use `fullName` of assignee\r\n    else if (key === 'assignee') {\r\n      fieldA = a.assignee ? a.assignee.fullName : null\r\n      fieldB = b.assignee ? b.assignee.fullName : null\r\n    } else {\r\n      fieldA = a[key]\r\n      fieldB = b[key]\r\n    }\r\n\r\n    let comparison = 0\r\n\r\n    if (fieldA === fieldB) {\r\n      comparison = 0\r\n    } else if (fieldA === null) {\r\n      comparison = 1\r\n    } else if (fieldB === null) {\r\n      comparison = -1\r\n    } else if (fieldA > fieldB) {\r\n      comparison = 1\r\n    } else if (fieldA < fieldB) {\r\n      comparison = -1\r\n    }\r\n\r\n    return comparison\r\n  }\r\n\r\n  // Sort Data\r\n  const sortedData = filteredData.sort(sortTasks(sortBy))\r\n  if (sortDesc) sortedData.reverse()\r\n  return [200, sortedData]\r\n})\r\n\r\n// ------------------------------------------------\r\n// POST: Add new task\r\n// ------------------------------------------------\r\nmock.onPost('/apps/todo/add-tasks').reply(config => {\r\n  // Get event from post data\r\n  const { task } = JSON.parse(config.data)\r\n\r\n  const { length } = data.tasks\r\n  let lastIndex = 0\r\n  if (length) {\r\n    lastIndex = data.tasks[length - 1].id\r\n  }\r\n  task.id = lastIndex + 1\r\n\r\n  data.tasks.push(task)\r\n\r\n  return [201, { task }]\r\n})\r\n\r\n// ------------------------------------------------\r\n// POST: Update Task\r\n// ------------------------------------------------\r\nmock.onPost('/apps/todo/update-task').reply(config => {\r\n  const taskData = JSON.parse(config.data).task\r\n\r\n  // Convert Id to number\r\n  taskData.id = Number(taskData.id)\r\n\r\n  const task = data.tasks.find(e => e.id === Number(taskData.id))\r\n  Object.assign(task, taskData)\r\n\r\n  return [200, { task }]\r\n})\r\n\r\n// ------------------------------------------------\r\n// DELETE: Remove Task\r\n// ------------------------------------------------\r\nmock.onDelete('/apps/todo/delete-task').reply(config => {\r\n  // Get task id from URL\r\n  let taskId = config.taskId\r\n\r\n  // Convert Id to number\r\n  taskId = Number(taskId)\r\n\r\n  const task = data.tasks.find(t => t.id === taskId)\r\n  Object.assign(task, { isDeleted: true })\r\n  return [200]\r\n})\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}