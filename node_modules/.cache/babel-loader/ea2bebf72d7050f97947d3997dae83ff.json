{"ast":null,"code":"// ** Redux Imports\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// ** Axios Imports\nimport axios from 'axios';\nexport const fetchEvents = createAsyncThunk('appCalendar/fetchEvents', async calendars => {\n  const response = await axios.get('/apps/calendar/events', {\n    calendars\n  });\n  return response.data;\n});\nexport const addEvent = createAsyncThunk('appCalendar/addEvent', async (event, _ref) => {\n  let {\n    dispatch,\n    getState\n  } = _ref;\n  await axios.post('/apps/calendar/add-event', {\n    event\n  });\n  await dispatch(fetchEvents(getState().calendar.selectedCalendars));\n  return event;\n});\nexport const updateEvent = createAsyncThunk('appCalendar/updateEvent', async (event, _ref2) => {\n  let {\n    dispatch,\n    getState\n  } = _ref2;\n  await axios.post('/apps/calendar/update-event', {\n    event\n  });\n  await dispatch(fetchEvents(getState().calendar.selectedCalendars));\n  return event;\n});\nexport const updateFilter = createAsyncThunk('appCalendar/updateFilter', async (filter, _ref3) => {\n  let {\n    dispatch,\n    getState\n  } = _ref3;\n  if (getState().calendar.selectedCalendars.includes(filter)) {\n    await dispatch(fetchEvents(getState().calendar.selectedCalendars.filter(i => i !== filter)));\n  } else {\n    await dispatch(fetchEvents([...getState().calendar.selectedCalendars, filter]));\n  }\n  return filter;\n});\nexport const updateAllFilters = createAsyncThunk('appCalendar/updateAllFilters', async (value, _ref4) => {\n  let {\n    dispatch\n  } = _ref4;\n  if (value === true) {\n    await dispatch(fetchEvents(['Personal', 'Business', 'Family', 'Holiday', 'ETC']));\n  } else {\n    await dispatch(fetchEvents([]));\n  }\n  return value;\n});\nexport const removeEvent = createAsyncThunk('appCalendar/removeEvent', async id => {\n  await axios.delete('/apps/calendar/remove-event', {\n    id\n  });\n  return id;\n});\nexport const appCalendarSlice = createSlice({\n  name: 'appCalendar',\n  initialState: {\n    events: [],\n    selectedEvent: {},\n    selectedCalendars: ['Personal', 'Business', 'Family', 'Holiday', 'ETC']\n  },\n  reducers: {\n    selectEvent: (state, action) => {\n      state.selectedEvent = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchEvents.fulfilled, (state, action) => {\n      state.events = action.payload;\n    }).addCase(updateFilter.fulfilled, (state, action) => {\n      if (state.selectedCalendars.includes(action.payload)) {\n        state.selectedCalendars.splice(state.selectedCalendars.indexOf(action.payload), 1);\n      } else {\n        state.selectedCalendars.push(action.payload);\n      }\n    }).addCase(updateAllFilters.fulfilled, (state, action) => {\n      const value = action.payload;\n      let selected = [];\n      if (value === true) {\n        selected = ['Personal', 'Business', 'Family', 'Holiday', 'ETC'];\n      } else {\n        selected = [];\n      }\n      state.selectedCalendars = selected;\n    });\n  }\n});\nexport const {\n  selectEvent\n} = appCalendarSlice.actions;\nexport default appCalendarSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchEvents","calendars","response","get","data","addEvent","event","_ref","dispatch","getState","post","calendar","selectedCalendars","updateEvent","_ref2","updateFilter","filter","_ref3","includes","i","updateAllFilters","value","_ref4","removeEvent","id","delete","appCalendarSlice","name","initialState","events","selectedEvent","reducers","selectEvent","state","action","payload","extraReducers","builder","addCase","fulfilled","splice","indexOf","push","selected","actions","reducer"],"sources":["E:/EXAI/EX-AI/src/views/apps/calendar/store/index.js"],"sourcesContent":["// ** Redux Imports\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\n\n// ** Axios Imports\nimport axios from 'axios'\n\nexport const fetchEvents = createAsyncThunk('appCalendar/fetchEvents', async calendars => {\n  const response = await axios.get('/apps/calendar/events', { calendars })\n  return response.data\n})\n\nexport const addEvent = createAsyncThunk('appCalendar/addEvent', async (event, { dispatch, getState }) => {\n  await axios.post('/apps/calendar/add-event', { event })\n  await dispatch(fetchEvents(getState().calendar.selectedCalendars))\n  return event\n})\n\nexport const updateEvent = createAsyncThunk('appCalendar/updateEvent', async (event, { dispatch, getState }) => {\n  await axios.post('/apps/calendar/update-event', { event })\n  await dispatch(fetchEvents(getState().calendar.selectedCalendars))\n  return event\n})\n\nexport const updateFilter = createAsyncThunk('appCalendar/updateFilter', async (filter, { dispatch, getState }) => {\n  if (getState().calendar.selectedCalendars.includes(filter)) {\n    await dispatch(fetchEvents(getState().calendar.selectedCalendars.filter(i => i !== filter)))\n  } else {\n    await dispatch(fetchEvents([...getState().calendar.selectedCalendars, filter]))\n  }\n  return filter\n})\n\nexport const updateAllFilters = createAsyncThunk('appCalendar/updateAllFilters', async (value, { dispatch }) => {\n  if (value === true) {\n    await dispatch(fetchEvents(['Personal', 'Business', 'Family', 'Holiday', 'ETC']))\n  } else {\n    await dispatch(fetchEvents([]))\n  }\n  return value\n})\n\nexport const removeEvent = createAsyncThunk('appCalendar/removeEvent', async id => {\n  await axios.delete('/apps/calendar/remove-event', { id })\n  return id\n})\n\nexport const appCalendarSlice = createSlice({\n  name: 'appCalendar',\n  initialState: {\n    events: [],\n    selectedEvent: {},\n    selectedCalendars: ['Personal', 'Business', 'Family', 'Holiday', 'ETC']\n  },\n  reducers: {\n    selectEvent: (state, action) => {\n      state.selectedEvent = action.payload\n    }\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(fetchEvents.fulfilled, (state, action) => {\n        state.events = action.payload\n      })\n      .addCase(updateFilter.fulfilled, (state, action) => {\n        if (state.selectedCalendars.includes(action.payload)) {\n          state.selectedCalendars.splice(state.selectedCalendars.indexOf(action.payload), 1)\n        } else {\n          state.selectedCalendars.push(action.payload)\n        }\n      })\n      .addCase(updateAllFilters.fulfilled, (state, action) => {\n        const value = action.payload\n        let selected = []\n        if (value === true) {\n          selected = ['Personal', 'Business', 'Family', 'Holiday', 'ETC']\n        } else {\n          selected = []\n        }\n        state.selectedCalendars = selected\n      })\n  }\n})\n\nexport const { selectEvent } = appCalendarSlice.actions\n\nexport default appCalendarSlice.reducer\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}