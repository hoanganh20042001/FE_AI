{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hai Hong\\\\Desktop\\\\EXAI\\\\EXAI\\\\src\\\\views\\\\apps\\\\kanban\\\\TaskSidebar.js\",\n  _s = $RefreshSig$();\n// ** React Imports\nimport { useState } from 'react';\n\n// ** Reactstrap Imports\nimport { Badge, Modal, ModalBody, Button, Form, Input, Label, FormFeedback } from 'reactstrap';\n\n// ** Redux Imports\nimport { useDispatch } from 'react-redux';\n\n// ** Third Party Components\nimport Flatpickr from 'react-flatpickr';\nimport { useDropzone } from 'react-dropzone';\nimport { X, DownloadCloud } from 'react-feather';\nimport Select, { components } from 'react-select'; //eslint-disable-line\nimport { useForm, Controller } from 'react-hook-form';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\n// ** Actions\nimport { updateTask, handleSelectTask } from './store';\n\n// ** Utils\nimport { isObjEmpty, selectThemeColors } from '@utils';\n\n// ** Assignee Avatars\nimport img1 from '@src/assets/images/portrait/small/avatar-s-3.jpg';\nimport img2 from '@src/assets/images/portrait/small/avatar-s-1.jpg';\nimport img3 from '@src/assets/images/portrait/small/avatar-s-4.jpg';\nimport img4 from '@src/assets/images/portrait/small/avatar-s-6.jpg';\nimport img5 from '@src/assets/images/portrait/small/avatar-s-2.jpg';\nimport img6 from '@src/assets/images/portrait/small/avatar-s-11.jpg';\n\n// ** Styles Imports\nimport '@styles/react/libs/flatpickr/flatpickr.scss';\nimport '@styles/react/libs/react-select/_react-select.scss';\nimport '@styles/react/libs/file-uploader/file-uploader.scss';\n\n// ** Assignee Select Options\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst assigneeOptions = [{\n  value: 'Pheobe Buffay',\n  label: 'Pheobe Buffay',\n  img: img1\n}, {\n  value: 'Chandler Bing',\n  label: 'Chandler Bing',\n  img: img2\n}, {\n  value: 'Ross Geller',\n  label: 'Ross Geller',\n  img: img3\n}, {\n  value: 'Monica Geller',\n  label: 'Monica Geller',\n  img: img4\n}, {\n  value: 'Joey Tribbiani',\n  label: 'Joey Tribbiani',\n  img: img5\n}, {\n  value: 'Rachel Green',\n  label: 'Rachel Green',\n  img: img6\n}, {\n  value: 'Jerry Seinfeld',\n  label: 'Jerry Seinfeld',\n  img: img3\n}, {\n  value: 'Jerry Seinfeld',\n  label: 'Jerry Seinfeld',\n  img: img3\n}, {\n  value: 'Astro Kramer',\n  label: 'Astro Kramer',\n  img: img2\n}, {\n  value: 'George Costanza',\n  label: 'George Costanza',\n  img: img5\n}, {\n  value: 'Charlie Kelly',\n  label: 'Charlie Kelly',\n  img: img4\n}, {\n  value: 'Dennis Reynolds',\n  label: 'Dennis Reynolds',\n  img: img3\n}];\n\n// ** Label Select Options\nconst labelOptions = [{\n  value: 'UX',\n  label: 'UX'\n}, {\n  value: 'App',\n  label: 'App'\n}, {\n  value: 'Forms',\n  label: 'Forms'\n}, {\n  value: 'Images',\n  label: 'Images'\n}, {\n  value: 'Code Review',\n  label: 'Code Review'\n}, {\n  value: 'Charts & Maps',\n  label: 'Charts & Maps'\n}];\nconst TaskSidebar = props => {\n  _s();\n  // ** Props\n  const {\n    sidebarOpen,\n    labelColors,\n    selectedTask,\n    handleTaskSidebarToggle\n  } = props;\n\n  // ** State\n  const [desc, setDesc] = useState('');\n  const [files, setFiles] = useState([]);\n  const [labels, setLabels] = useState([]);\n  const [dueDate, setDueDate] = useState(new Date());\n  const [assignedTo, setAssignedTo] = useState(null);\n\n  // ** Hooks\n  const dispatch = useDispatch();\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    multiple: false,\n    onDrop: acceptedFiles => {\n      setFiles([...acceptedFiles.map(file => Object.assign(file))]);\n    }\n  });\n  const {\n    control,\n    setError,\n    setValue,\n    clearErrors,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      title: ''\n    }\n  });\n\n  // ** Custom Select Components\n  const LabelOptions = _ref => {\n    let {\n      data,\n      ...props\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(components.Option, {\n      ...props,\n      children: /*#__PURE__*/_jsxDEV(Badge, {\n        color: \"light-\".concat(labelColors[data.label]),\n        children: data.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  };\n  const AssigneeComponent = _ref2 => {\n    let {\n      data,\n      ...props\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(components.Option, {\n      ...props,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"d-block rounded-circle me-50\",\n          src: data.img,\n          height: \"26\",\n          width: \"26\",\n          alt: data.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-0\",\n          children: data.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  };\n\n  // ** Function to run when sidebar opens\n  const handleSidebarOpened = () => {\n    if (!isObjEmpty(selectedTask)) {\n      setValue('title', selectedTask.title);\n      setDueDate(selectedTask.dueDate);\n      setDesc(selectedTask.description);\n      if (selectedTask.coverImage) {\n        setFiles([selectedTask.coverImage]);\n      }\n      if (selectedTask.assignedTo.length) {\n        const arr = [];\n        selectedTask.assignedTo.map(assignee => {\n          arr.push({\n            value: assignee.title,\n            label: assignee.title,\n            img: assignee.img\n          });\n        });\n        setAssignedTo(arr);\n      }\n      if (selectedTask.labels.length) {\n        const labelsArr = [];\n        selectedTask.labels.map(label => {\n          labelsArr.push({\n            value: label,\n            label\n          });\n        });\n        setLabels(labelsArr);\n      }\n    }\n  };\n\n  // ** Function to run when sidebar closes\n  const handleSidebarClosed = () => {\n    setDesc('');\n    setFiles([]);\n    setLabels([]);\n    setValue('title', '');\n    setDueDate(new Date());\n    clearErrors();\n    dispatch(handleSelectTask({}));\n    setAssignedTo(null);\n  };\n  const onSubmit = data => {\n    if (data.title.length) {\n      const labelsArr = [];\n      const assignedArr = [];\n      if (assignedTo.length) {\n        assignedTo.map(item => {\n          assignedArr.push({\n            title: item.label,\n            img: item.img\n          });\n        });\n      }\n      if (labels.length) {\n        labels.map(label => {\n          labelsArr.push(label.label);\n        });\n      }\n      dispatch(updateTask({\n        ...selectedTask,\n        ...data,\n        dueDate,\n        labels: labelsArr,\n        description: desc,\n        assignedTo: assignedArr,\n        // eslint-disable-next-line multiline-ternary\n        ...(files.length && typeof files[0] !== 'string' ?\n        // eslint-disable-next-line multiline-ternary\n        {\n          coverImage: URL.createObjectURL(files[0])\n        } : {})\n      }));\n      handleTaskSidebarToggle();\n    } else {\n      setError('title');\n    }\n  };\n  const renderUploadedImage = () => {\n    if (files.length && typeof files[0] !== 'string') {\n      // @ts-ignore\n      return files.map(file => /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: file.name,\n        className: \"single-file-image img-fluid\",\n        src: URL.createObjectURL(file)\n      }, file.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this));\n    } else {\n      if (typeof files[0] === 'string') {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"task-img\",\n          className: \"single-file-image img-fluid\",\n          src: files[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 16\n        }, this);\n      }\n    }\n  };\n  const handleResetFields = () => {\n    setDesc('');\n    setValue('title', store.selectedTask.title);\n    setDueDate(store.selectedTask.dueDate);\n    if (selectedTask.assignedTo.length) {\n      const arr = [];\n      selectedTask.assignedTo.map(assignee => {\n        arr.push({\n          value: assignee.title,\n          label: assignee.title,\n          img: assignee.img\n        });\n      });\n      setAssignedTo(arr);\n    }\n    if (selectedTask.labels.length) {\n      const labels = [];\n      selectedTask.labels.map(label => {\n        labels.push({\n          value: label,\n          label\n        });\n      });\n      setLabels(labels);\n    }\n    if (selectedTask.coverImage) {\n      setFiles([selectedTask.coverImage]);\n    } else {\n      setFiles([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: sidebarOpen,\n    className: \"sidebar-lg\",\n    contentClassName: \"p-0\",\n    onOpened: handleSidebarOpened,\n    onClosed: handleSidebarClosed,\n    toggle: handleTaskSidebarToggle,\n    modalClassName: \"modal-slide-in sidebar-kanban-modal\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      id: \"form-modal-kanban\",\n      className: \"kanban-task-modal\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header d-flex align-items-center justify-content-between mb-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"modal-title\",\n          children: \"Update Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(X, {\n          className: \"fw-normal mt-25\",\n          size: 16,\n          onClick: handleTaskSidebarToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n        options: {\n          wheelPropagation: false\n        },\n        children: /*#__PURE__*/_jsxDEV(ModalBody, {\n          className: \"flex-grow-1 pb-sm-0 pb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"task-title\",\n              children: [\"Title \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-danger\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"title\",\n              control: control,\n              render: _ref3 => {\n                let {\n                  field\n                } = _ref3;\n                return /*#__PURE__*/_jsxDEV(Input, {\n                  id: \"task-title\",\n                  placeholder: \"Title\",\n                  className: \"new-todo-item-title\",\n                  invalid: errors.title && true,\n                  ...field\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 19\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this), errors.title && /*#__PURE__*/_jsxDEV(FormFeedback, {\n              children: \"Please enter a valid task title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"due-date\",\n              children: \"Due Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Flatpickr, {\n              id: \"due-date\",\n              name: \"due-date\",\n              value: dueDate,\n              className: \"form-control\",\n              options: {\n                dateFormat: 'Y-m-d'\n              },\n              onChange: date => setDueDate(date[0])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"task-labels\",\n              children: \"Labels\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              isMulti: true,\n              value: labels,\n              id: \"task-labels\",\n              isClearable: false,\n              options: labelOptions,\n              className: \"react-select\",\n              classNamePrefix: \"select\",\n              theme: selectThemeColors,\n              components: {\n                Option: LabelOptions\n              },\n              onChange: data => {\n                setLabels(data !== null ? [...data] : []);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"task-assignee\",\n              children: \"Assignee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              isMulti: true,\n              id: \"task-assignee\",\n              value: assignedTo,\n              isClearable: false,\n              className: \"react-select\",\n              classNamePrefix: \"select\",\n              options: assigneeOptions,\n              theme: selectThemeColors,\n              onChange: data => setAssignedTo(data),\n              components: {\n                Option: AssigneeComponent\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-1\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              ...getRootProps({\n                className: 'dropzone'\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                ...getInputProps()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex align-items-center justify-content-center flex-column text-center\",\n                children: [/*#__PURE__*/_jsxDEV(DownloadCloud, {\n                  size: 64\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: \"Drop Files here or click to upload\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 17\n              }, this), files.length ? renderUploadedImage() : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-label\",\n              for: \"task-desc\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"textarea\",\n              value: desc,\n              name: \"text\",\n              id: \"task-desc\",\n              rows: \"3\",\n              placeholder: \"Description...\",\n              onChange: e => setDesc(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              color: \"primary\",\n              className: \"me-1\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              outline: true,\n              color: \"secondary\",\n              onClick: handleResetFields,\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskSidebar, \"5Aclh6YOry4b7KuVRBpeRQqD6fU=\", false, function () {\n  return [useDispatch, useDropzone, useForm];\n});\n_c = TaskSidebar;\nexport default TaskSidebar;\nvar _c;\n$RefreshReg$(_c, \"TaskSidebar\");","map":{"version":3,"names":["useState","Badge","Modal","ModalBody","Button","Form","Input","Label","FormFeedback","useDispatch","Flatpickr","useDropzone","X","DownloadCloud","Select","components","useForm","Controller","PerfectScrollbar","updateTask","handleSelectTask","isObjEmpty","selectThemeColors","img1","img2","img3","img4","img5","img6","jsxDEV","_jsxDEV","assigneeOptions","value","label","img","labelOptions","TaskSidebar","props","_s","sidebarOpen","labelColors","selectedTask","handleTaskSidebarToggle","desc","setDesc","files","setFiles","labels","setLabels","dueDate","setDueDate","Date","assignedTo","setAssignedTo","dispatch","getRootProps","getInputProps","multiple","onDrop","acceptedFiles","map","file","Object","assign","control","setError","setValue","clearErrors","handleSubmit","formState","errors","defaultValues","title","LabelOptions","_ref","data","Option","children","color","concat","fileName","_jsxFileName","lineNumber","columnNumber","AssigneeComponent","_ref2","className","src","height","width","alt","handleSidebarOpened","description","coverImage","length","arr","assignee","push","labelsArr","handleSidebarClosed","onSubmit","assignedArr","item","URL","createObjectURL","renderUploadedImage","name","handleResetFields","store","isOpen","contentClassName","onOpened","onClosed","toggle","modalClassName","id","size","onClick","options","wheelPropagation","for","render","_ref3","field","placeholder","invalid","dateFormat","onChange","date","isMulti","isClearable","classNamePrefix","theme","type","rows","e","target","outline","_c","$RefreshReg$"],"sources":["C:/Users/Hai Hong/Desktop/EXAI/EXAI/src/views/apps/kanban/TaskSidebar.js"],"sourcesContent":["// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge, Modal, ModalBody, Button, Form, Input, Label, FormFeedback } from 'reactstrap'\r\n\r\n// ** Redux Imports\r\nimport { useDispatch } from 'react-redux'\r\n\r\n// ** Third Party Components\r\nimport Flatpickr from 'react-flatpickr'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { X, DownloadCloud } from 'react-feather'\r\nimport Select, { components } from 'react-select' //eslint-disable-line\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\n\r\n// ** Actions\r\nimport { updateTask, handleSelectTask } from './store'\r\n\r\n// ** Utils\r\nimport { isObjEmpty, selectThemeColors } from '@utils'\r\n\r\n// ** Assignee Avatars\r\nimport img1 from '@src/assets/images/portrait/small/avatar-s-3.jpg'\r\nimport img2 from '@src/assets/images/portrait/small/avatar-s-1.jpg'\r\nimport img3 from '@src/assets/images/portrait/small/avatar-s-4.jpg'\r\nimport img4 from '@src/assets/images/portrait/small/avatar-s-6.jpg'\r\nimport img5 from '@src/assets/images/portrait/small/avatar-s-2.jpg'\r\nimport img6 from '@src/assets/images/portrait/small/avatar-s-11.jpg'\r\n\r\n// ** Styles Imports\r\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/file-uploader/file-uploader.scss'\r\n\r\n// ** Assignee Select Options\r\nconst assigneeOptions = [\r\n  { value: 'Pheobe Buffay', label: 'Pheobe Buffay', img: img1 },\r\n  { value: 'Chandler Bing', label: 'Chandler Bing', img: img2 },\r\n  { value: 'Ross Geller', label: 'Ross Geller', img: img3 },\r\n  { value: 'Monica Geller', label: 'Monica Geller', img: img4 },\r\n  { value: 'Joey Tribbiani', label: 'Joey Tribbiani', img: img5 },\r\n  { value: 'Rachel Green', label: 'Rachel Green', img: img6 },\r\n  { value: 'Jerry Seinfeld', label: 'Jerry Seinfeld', img: img3 },\r\n  { value: 'Jerry Seinfeld', label: 'Jerry Seinfeld', img: img3 },\r\n  { value: 'Astro Kramer', label: 'Astro Kramer', img: img2 },\r\n  { value: 'George Costanza', label: 'George Costanza', img: img5 },\r\n  { value: 'Charlie Kelly', label: 'Charlie Kelly', img: img4 },\r\n  { value: 'Dennis Reynolds', label: 'Dennis Reynolds', img: img3 }\r\n]\r\n\r\n// ** Label Select Options\r\nconst labelOptions = [\r\n  { value: 'UX', label: 'UX' },\r\n  { value: 'App', label: 'App' },\r\n  { value: 'Forms', label: 'Forms' },\r\n  { value: 'Images', label: 'Images' },\r\n  { value: 'Code Review', label: 'Code Review' },\r\n  { value: 'Charts & Maps', label: 'Charts & Maps' }\r\n]\r\n\r\nconst TaskSidebar = props => {\r\n  // ** Props\r\n  const { sidebarOpen, labelColors, selectedTask, handleTaskSidebarToggle } = props\r\n\r\n  // ** State\r\n  const [desc, setDesc] = useState('')\r\n  const [files, setFiles] = useState([])\r\n  const [labels, setLabels] = useState([])\r\n  const [dueDate, setDueDate] = useState(new Date())\r\n  const [assignedTo, setAssignedTo] = useState(null)\r\n\r\n  // ** Hooks\r\n  const dispatch = useDispatch()\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    multiple: false,\r\n    onDrop: acceptedFiles => {\r\n      setFiles([...acceptedFiles.map(file => Object.assign(file))])\r\n    }\r\n  })\r\n\r\n  const {\r\n    control,\r\n    setError,\r\n    setValue,\r\n    clearErrors,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({\r\n    defaultValues: { title: '' }\r\n  })\r\n\r\n  // ** Custom Select Components\r\n  const LabelOptions = ({ data, ...props }) => {\r\n    return (\r\n      <components.Option {...props}>\r\n        <Badge color={`light-${labelColors[data.label]}`}>{data.label}</Badge>\r\n      </components.Option>\r\n    )\r\n  }\r\n\r\n  const AssigneeComponent = ({ data, ...props }) => {\r\n    return (\r\n      <components.Option {...props}>\r\n        <div className='d-flex align-items-center'>\r\n          <img className='d-block rounded-circle me-50' src={data.img} height='26' width='26' alt={data.label} />\r\n          <p className='mb-0'>{data.label}</p>\r\n        </div>\r\n      </components.Option>\r\n    )\r\n  }\r\n\r\n  // ** Function to run when sidebar opens\r\n  const handleSidebarOpened = () => {\r\n    if (!isObjEmpty(selectedTask)) {\r\n      setValue('title', selectedTask.title)\r\n      setDueDate(selectedTask.dueDate)\r\n      setDesc(selectedTask.description)\r\n      if (selectedTask.coverImage) {\r\n        setFiles([selectedTask.coverImage])\r\n      }\r\n      if (selectedTask.assignedTo.length) {\r\n        const arr = []\r\n        selectedTask.assignedTo.map(assignee => {\r\n          arr.push({ value: assignee.title, label: assignee.title, img: assignee.img })\r\n        })\r\n        setAssignedTo(arr)\r\n      }\r\n      if (selectedTask.labels.length) {\r\n        const labelsArr = []\r\n        selectedTask.labels.map(label => {\r\n          labelsArr.push({ value: label, label })\r\n        })\r\n        setLabels(labelsArr)\r\n      }\r\n    }\r\n  }\r\n\r\n  // ** Function to run when sidebar closes\r\n  const handleSidebarClosed = () => {\r\n    setDesc('')\r\n    setFiles([])\r\n    setLabels([])\r\n    setValue('title', '')\r\n    setDueDate(new Date())\r\n    clearErrors()\r\n    dispatch(handleSelectTask({}))\r\n    setAssignedTo(null)\r\n  }\r\n\r\n  const onSubmit = data => {\r\n    if (data.title.length) {\r\n      const labelsArr = []\r\n      const assignedArr = []\r\n\r\n      if (assignedTo.length) {\r\n        assignedTo.map(item => {\r\n          assignedArr.push({ title: item.label, img: item.img })\r\n        })\r\n      }\r\n\r\n      if (labels.length) {\r\n        labels.map(label => {\r\n          labelsArr.push(label.label)\r\n        })\r\n      }\r\n\r\n      dispatch(\r\n        updateTask({\r\n          ...selectedTask,\r\n          ...data,\r\n          dueDate,\r\n          labels: labelsArr,\r\n          description: desc,\r\n          assignedTo: assignedArr,\r\n          // eslint-disable-next-line multiline-ternary\r\n          ...(files.length && typeof files[0] !== 'string'\r\n            ? // eslint-disable-next-line multiline-ternary\r\n              {\r\n                coverImage: URL.createObjectURL(files[0])\r\n              }\r\n            : {})\r\n        })\r\n      )\r\n      handleTaskSidebarToggle()\r\n    } else {\r\n      setError('title')\r\n    }\r\n  }\r\n\r\n  const renderUploadedImage = () => {\r\n    if (files.length && typeof files[0] !== 'string') {\r\n      // @ts-ignore\r\n      return files.map(file => (\r\n        <img key={file.name} alt={file.name} className='single-file-image img-fluid' src={URL.createObjectURL(file)} />\r\n      ))\r\n    } else {\r\n      if (typeof files[0] === 'string') {\r\n        return <img alt='task-img' className='single-file-image img-fluid' src={files[0]} />\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleResetFields = () => {\r\n    setDesc('')\r\n\r\n    setValue('title', store.selectedTask.title)\r\n    setDueDate(store.selectedTask.dueDate)\r\n    if (selectedTask.assignedTo.length) {\r\n      const arr = []\r\n      selectedTask.assignedTo.map(assignee => {\r\n        arr.push({ value: assignee.title, label: assignee.title, img: assignee.img })\r\n      })\r\n\r\n      setAssignedTo(arr)\r\n    }\r\n    if (selectedTask.labels.length) {\r\n      const labels = []\r\n      selectedTask.labels.map(label => {\r\n        labels.push({ value: label, label })\r\n      })\r\n      setLabels(labels)\r\n    }\r\n\r\n    if (selectedTask.coverImage) {\r\n      setFiles([selectedTask.coverImage])\r\n    } else {\r\n      setFiles([])\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={sidebarOpen}\r\n      className='sidebar-lg'\r\n      contentClassName='p-0'\r\n      onOpened={handleSidebarOpened}\r\n      onClosed={handleSidebarClosed}\r\n      toggle={handleTaskSidebarToggle}\r\n      modalClassName='modal-slide-in sidebar-kanban-modal'\r\n    >\r\n      <Form id='form-modal-kanban' className='kanban-task-modal' onSubmit={handleSubmit(onSubmit)}>\r\n        <div className='modal-header d-flex align-items-center justify-content-between mb-1'>\r\n          <h5 className='modal-title'>Update Task</h5>\r\n          <X className='fw-normal mt-25' size={16} onClick={handleTaskSidebarToggle} />\r\n        </div>\r\n        <PerfectScrollbar options={{ wheelPropagation: false }}>\r\n          <ModalBody className='flex-grow-1 pb-sm-0 pb-3'>\r\n            <div className='mb-1'>\r\n              <Label className='form-label' for='task-title'>\r\n                Title <span className='text-danger'>*</span>\r\n              </Label>\r\n              <Controller\r\n                name='title'\r\n                control={control}\r\n                render={({ field }) => (\r\n                  <Input\r\n                    id='task-title'\r\n                    placeholder='Title'\r\n                    className='new-todo-item-title'\r\n                    invalid={errors.title && true}\r\n                    {...field}\r\n                  />\r\n                )}\r\n              />\r\n              {errors.title && <FormFeedback>Please enter a valid task title</FormFeedback>}\r\n            </div>\r\n            <div className='mb-1'>\r\n              <Label className='form-label' for='due-date'>\r\n                Due Date\r\n              </Label>\r\n              <Flatpickr\r\n                id='due-date'\r\n                name='due-date'\r\n                value={dueDate}\r\n                className='form-control'\r\n                options={{ dateFormat: 'Y-m-d' }}\r\n                onChange={date => setDueDate(date[0])}\r\n              />\r\n            </div>\r\n            <div className='mb-1'>\r\n              <Label className='form-label' for='task-labels'>\r\n                Labels\r\n              </Label>\r\n              <Select\r\n                isMulti\r\n                value={labels}\r\n                id='task-labels'\r\n                isClearable={false}\r\n                options={labelOptions}\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                theme={selectThemeColors}\r\n                components={{ Option: LabelOptions }}\r\n                onChange={data => {\r\n                  setLabels(data !== null ? [...data] : [])\r\n                }}\r\n              />\r\n            </div>\r\n            <div className='mb-1'>\r\n              <Label className='form-label' for='task-assignee'>\r\n                Assignee\r\n              </Label>\r\n              <Select\r\n                isMulti\r\n                id='task-assignee'\r\n                value={assignedTo}\r\n                isClearable={false}\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                options={assigneeOptions}\r\n                theme={selectThemeColors}\r\n                onChange={data => setAssignedTo(data)}\r\n                components={{ Option: AssigneeComponent }}\r\n              />\r\n            </div>\r\n            <div className='mb-1'>\r\n              <div {...getRootProps({ className: 'dropzone' })}>\r\n                <input {...getInputProps()} />\r\n                <div className='d-flex align-items-center justify-content-center flex-column text-center'>\r\n                  <DownloadCloud size={64} />\r\n                  <h5>Drop Files here or click to upload</h5>\r\n                </div>\r\n                {files.length ? renderUploadedImage() : null}\r\n              </div>\r\n            </div>\r\n            <div className='mb-1'>\r\n              <Label className='form-label' for='task-desc'>\r\n                Description\r\n              </Label>\r\n              <Input\r\n                type='textarea'\r\n                value={desc}\r\n                name='text'\r\n                id='task-desc'\r\n                rows='3'\r\n                placeholder='Description...'\r\n                onChange={e => setDesc(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Button type='submit' color='primary' className='me-1'>\r\n                Update\r\n              </Button>\r\n              <Button outline color='secondary' onClick={handleResetFields}>\r\n                Reset\r\n              </Button>\r\n            </div>\r\n          </ModalBody>\r\n        </PerfectScrollbar>\r\n      </Form>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default TaskSidebar\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}